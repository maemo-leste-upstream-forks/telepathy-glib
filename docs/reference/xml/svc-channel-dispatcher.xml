<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="telepathy-glib-svc-channel-dispatcher">
<refmeta>
<refentrytitle role="top_of_page" id="telepathy-glib-svc-channel-dispatcher.top_of_page">Service-side Channel Dispatcher interface</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>TELEPATHY-GLIB Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>Service-side Channel Dispatcher interface</refname>
<refpurpose>GInterfaces for Telepathy ChannelDispatcher object</refpurpose>
</refnamediv>

<refsynopsisdiv id="telepathy-glib-svc-channel-dispatcher.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>
<anchor id="TpSvcChannelDispatcher"/><anchor id="TpSvcChannelDispatcherInterfaceOperationList"/>
<synopsis>

#include &lt;telepathy-glib/svc-channel-dispatcher.h&gt;

                    <link linkend="TpSvcChannelDispatcher-struct">TpSvcChannelDispatcher</link>;
                    <link linkend="TpSvcChannelDispatcherClass">TpSvcChannelDispatcherClass</link>;
<link linkend="void">void</link>                <link linkend="tp-svc-channel-dispatcher-return-from-create-channel">tp_svc_channel_dispatcher_return_from_create_channel</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="gchar">gchar</link> *out_Request);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-dispatcher-create-channel-impl">*tp_svc_channel_dispatcher_create_channel_impl</link>)
                                                        (<link linkend="TpSvcChannelDispatcher">TpSvcChannelDispatcher</link> *self,
                                                         const <link linkend="gchar">gchar</link> *in_Account,
                                                         <link linkend="GHashTable">GHashTable</link> *in_Requested_Properties,
                                                         <link linkend="gint64">gint64</link> in_User_Action_Time,
                                                         const <link linkend="gchar">gchar</link> *in_Preferred_Handler,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-dispatcher-implement-create-channel">tp_svc_channel_dispatcher_implement_create_channel</link>
                                                        (<link linkend="TpSvcChannelDispatcherClass">TpSvcChannelDispatcherClass</link> *klass,
                                                         <link linkend="tp-svc-channel-dispatcher-create-channel-impl">tp_svc_channel_dispatcher_create_channel_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-dispatcher-return-from-ensure-channel">tp_svc_channel_dispatcher_return_from_ensure_channel</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="gchar">gchar</link> *out_Request);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-dispatcher-ensure-channel-impl">*tp_svc_channel_dispatcher_ensure_channel_impl</link>)
                                                        (<link linkend="TpSvcChannelDispatcher">TpSvcChannelDispatcher</link> *self,
                                                         const <link linkend="gchar">gchar</link> *in_Account,
                                                         <link linkend="GHashTable">GHashTable</link> *in_Requested_Properties,
                                                         <link linkend="gint64">gint64</link> in_User_Action_Time,
                                                         const <link linkend="gchar">gchar</link> *in_Preferred_Handler,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-dispatcher-implement-ensure-channel">tp_svc_channel_dispatcher_implement_ensure_channel</link>
                                                        (<link linkend="TpSvcChannelDispatcherClass">TpSvcChannelDispatcherClass</link> *klass,
                                                         <link linkend="tp-svc-channel-dispatcher-ensure-channel-impl">tp_svc_channel_dispatcher_ensure_channel_impl</link> impl);

                    <link linkend="TpSvcChannelDispatcherInterfaceOperationList-struct">TpSvcChannelDispatcherInterfaceOperationList</link>;
                    <link linkend="TpSvcChannelDispatcherInterfaceOperationListClass">TpSvcChannelDispatcherInterfaceOperationListClass</link>;
<link linkend="void">void</link>                <link linkend="tp-svc-channel-dispatcher-interface-operation-list-emit-new-dispatch-operation">tp_svc_channel_dispatcher_interface_operation_list_emit_new_dispatch_operation</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="gchar">gchar</link> *arg_Dispatch_Operation,
                                                         <link linkend="GHashTable">GHashTable</link> *arg_Properties);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-dispatcher-interface-operation-list-emit-dispatch-operation-finished">tp_svc_channel_dispatcher_interface_operation_list_emit_dispatch_operation_finished</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="gchar">gchar</link> *arg_Dispatch_Operation);
</synopsis>
</refsynopsisdiv>

<refsect1 id="telepathy-glib-svc-channel-dispatcher.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>
  <link linkend="GInterface">GInterface</link>
   +----TpSvcChannelDispatcher
</synopsis>
<synopsis>
  <link linkend="GInterface">GInterface</link>
   +----TpSvcChannelDispatcherInterfaceOperationList
</synopsis>
</refsect1>






<refsect1 id="telepathy-glib-svc-channel-dispatcher.signals" role="signal_proto">
<title role="signal_proto.title">Signals</title>
<synopsis>
  &quot;<link linkend="TpSvcChannelDispatcherInterfaceOperationList-dispatch-operation-finished">dispatch-operation-finished</link>&quot;                    : Run Last / Has Details
  &quot;<link linkend="TpSvcChannelDispatcherInterfaceOperationList-new-dispatch-operation">new-dispatch-operation</link>&quot;                         : Run Last / Has Details
</synopsis>
</refsect1>


<refsect1 id="telepathy-glib-svc-channel-dispatcher.description" role="desc">
<title role="desc.title">Description</title>
<para>
The <link linkend="TpSvcChannelDispatcher"><type>TpSvcChannelDispatcher</type></link> interface (auto-generated from the Telepathy
spec) makes it easier to export an object implementing the Telepathy
ChannelDispatcher interface, with the correct method and signal signatures,
and emit signals from that object in a type-safe way.
</para>
<para>
Similarly, <link linkend="TpSvcChannelDispatcherInterfaceOperationList"><type>TpSvcChannelDispatcherInterfaceOperationList</type></link> helps to
implement the optional OperationList interface.
</para>
<para>
You don't need these interfaces unless you're implementing a
Telepathy ChannelDispatcher, such as Mission Control.</para>
<para>
</para>
</refsect1>

<refsect1 id="telepathy-glib-svc-channel-dispatcher.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="TpSvcChannelDispatcher-struct" role="struct">
<title>TpSvcChannelDispatcher</title>
<indexterm zone="TpSvcChannelDispatcher-struct"><primary sortas="TpSvcChannelDispatcher">TpSvcChannelDispatcher</primary></indexterm><programlisting>typedef struct _TpSvcChannelDispatcher TpSvcChannelDispatcher;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>
</para></refsect2>
<refsect2 id="TpSvcChannelDispatcherClass" role="struct">
<title>TpSvcChannelDispatcherClass</title>
<indexterm zone="TpSvcChannelDispatcherClass"><primary sortas="TpSvcChannelDispatcherClass">TpSvcChannelDispatcherClass</primary></indexterm><programlisting>typedef struct _TpSvcChannelDispatcherClass TpSvcChannelDispatcherClass;</programlisting>
<para>
The class of TpSvcChannelDispatcher.
</para>
<para>
In a full implementation of this interface (i.e. all
methods implemented), the interface initialization
function used in <link linkend="G-IMPLEMENT-INTERFACE--CAPS"><function>G_IMPLEMENT_INTERFACE()</function></link> would
typically look like this:
</para>
<para>
<programlisting>
static void
implement_channel_dispatcher (gpointer klass,
    gpointer unused G_GNUC_UNUSED)
{
#define IMPLEMENT(x) tp_svc_channel_dispatcher_implement_##<link linkend="x">x</link> (\
  klass, my_object_##<link linkend="x">x</link>)
  IMPLEMENT (create_channel);
  IMPLEMENT (ensure_channel);
#undef IMPLEMENT
}
</programlisting></para>
<para>
</para></refsect2>
<refsect2 id="tp-svc-channel-dispatcher-return-from-create-channel" role="function">
<title>tp_svc_channel_dispatcher_return_from_create_channel ()</title>
<indexterm zone="tp-svc-channel-dispatcher-return-from-create-channel"><primary sortas="tp_svc_channel_dispatcher_return_from_create_channel">tp_svc_channel_dispatcher_return_from_create_channel</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_dispatcher_return_from_create_channel
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="gchar">gchar</link> *out_Request);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Request</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-dispatcher-create-channel-impl" role="function">
<title>tp_svc_channel_dispatcher_create_channel_impl ()</title>
<indexterm zone="tp-svc-channel-dispatcher-create-channel-impl"><primary sortas="tp_svc_channel_dispatcher_create_channel_impl">tp_svc_channel_dispatcher_create_channel_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_dispatcher_create_channel_impl)
                                                        (<link linkend="TpSvcChannelDispatcher">TpSvcChannelDispatcher</link> *self,
                                                         const <link linkend="gchar">gchar</link> *in_Account,
                                                         <link linkend="GHashTable">GHashTable</link> *in_Requested_Properties,
                                                         <link linkend="gint64">gint64</link> in_User_Action_Time,
                                                         const <link linkend="gchar">gchar</link> *in_Preferred_Handler,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
CreateChannel on interface org.freedesktop.Telepathy.ChannelDispatcher.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Account</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Requested_Properties</parameter>&#160;:</term>
<listitem><simpara> GHashTable * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_User_Action_Time</parameter>&#160;:</term>
<listitem><simpara> gint64  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Preferred_Handler</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-dispatcher-implement-create-channel" role="function">
<title>tp_svc_channel_dispatcher_implement_create_channel ()</title>
<indexterm zone="tp-svc-channel-dispatcher-implement-create-channel"><primary sortas="tp_svc_channel_dispatcher_implement_create_channel">tp_svc_channel_dispatcher_implement_create_channel</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_dispatcher_implement_create_channel
                                                        (<link linkend="TpSvcChannelDispatcherClass">TpSvcChannelDispatcherClass</link> *klass,
                                                         <link linkend="tp-svc-channel-dispatcher-create-channel-impl">tp_svc_channel_dispatcher_create_channel_impl</link> impl);</programlisting>
<para>
Register an implementation for the CreateChannel method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the CreateChannel D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-dispatcher-return-from-ensure-channel" role="function">
<title>tp_svc_channel_dispatcher_return_from_ensure_channel ()</title>
<indexterm zone="tp-svc-channel-dispatcher-return-from-ensure-channel"><primary sortas="tp_svc_channel_dispatcher_return_from_ensure_channel">tp_svc_channel_dispatcher_return_from_ensure_channel</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_dispatcher_return_from_ensure_channel
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="gchar">gchar</link> *out_Request);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Request</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-dispatcher-ensure-channel-impl" role="function">
<title>tp_svc_channel_dispatcher_ensure_channel_impl ()</title>
<indexterm zone="tp-svc-channel-dispatcher-ensure-channel-impl"><primary sortas="tp_svc_channel_dispatcher_ensure_channel_impl">tp_svc_channel_dispatcher_ensure_channel_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_dispatcher_ensure_channel_impl)
                                                        (<link linkend="TpSvcChannelDispatcher">TpSvcChannelDispatcher</link> *self,
                                                         const <link linkend="gchar">gchar</link> *in_Account,
                                                         <link linkend="GHashTable">GHashTable</link> *in_Requested_Properties,
                                                         <link linkend="gint64">gint64</link> in_User_Action_Time,
                                                         const <link linkend="gchar">gchar</link> *in_Preferred_Handler,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
EnsureChannel on interface org.freedesktop.Telepathy.ChannelDispatcher.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Account</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Requested_Properties</parameter>&#160;:</term>
<listitem><simpara> GHashTable * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_User_Action_Time</parameter>&#160;:</term>
<listitem><simpara> gint64  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Preferred_Handler</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-dispatcher-implement-ensure-channel" role="function">
<title>tp_svc_channel_dispatcher_implement_ensure_channel ()</title>
<indexterm zone="tp-svc-channel-dispatcher-implement-ensure-channel"><primary sortas="tp_svc_channel_dispatcher_implement_ensure_channel">tp_svc_channel_dispatcher_implement_ensure_channel</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_dispatcher_implement_ensure_channel
                                                        (<link linkend="TpSvcChannelDispatcherClass">TpSvcChannelDispatcherClass</link> *klass,
                                                         <link linkend="tp-svc-channel-dispatcher-ensure-channel-impl">tp_svc_channel_dispatcher_ensure_channel_impl</link> impl);</programlisting>
<para>
Register an implementation for the EnsureChannel method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the EnsureChannel D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="TpSvcChannelDispatcherInterfaceOperationList-struct" role="struct">
<title>TpSvcChannelDispatcherInterfaceOperationList</title>
<indexterm zone="TpSvcChannelDispatcherInterfaceOperationList-struct"><primary sortas="TpSvcChannelDispatcherInterfaceOperationList">TpSvcChannelDispatcherInterfaceOperationList</primary></indexterm><programlisting>typedef struct _TpSvcChannelDispatcherInterfaceOperationList TpSvcChannelDispatcherInterfaceOperationList;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>
</para></refsect2>
<refsect2 id="TpSvcChannelDispatcherInterfaceOperationListClass" role="struct">
<title>TpSvcChannelDispatcherInterfaceOperationListClass</title>
<indexterm zone="TpSvcChannelDispatcherInterfaceOperationListClass"><primary sortas="TpSvcChannelDispatcherInterfaceOperationListClass">TpSvcChannelDispatcherInterfaceOperationListClass</primary></indexterm><programlisting>typedef struct _TpSvcChannelDispatcherInterfaceOperationListClass TpSvcChannelDispatcherInterfaceOperationListClass;</programlisting>
<para>
The class of TpSvcChannelDispatcherInterfaceOperationList.
This interface has no D-Bus methods, so an
implementation can typically pass <link linkend="NULL--CAPS"><literal>NULL</literal></link> to
<link linkend="G-IMPLEMENT-INTERFACE--CAPS"><function>G_IMPLEMENT_INTERFACE()</function></link> as the interface
initialization function.</para>
<para>
</para></refsect2>
<refsect2 id="tp-svc-channel-dispatcher-interface-operation-list-emit-new-dispatch-operation" role="function">
<title>tp_svc_channel_dispatcher_interface_operation_list_emit_new_dispatch_operation ()</title>
<indexterm zone="tp-svc-channel-dispatcher-interface-operation-list-emit-new-dispatch-operation"><primary sortas="tp_svc_channel_dispatcher_interface_operation_list_emit_new_dispatch_operation">tp_svc_channel_dispatcher_interface_operation_list_emit_new_dispatch_operation</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_dispatcher_interface_operation_list_emit_new_dispatch_operation
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="gchar">gchar</link> *arg_Dispatch_Operation,
                                                         <link linkend="GHashTable">GHashTable</link> *arg_Properties);</programlisting>
<para>
Type-safe wrapper around g_signal_emit to emit the
NewDispatchOperation signal on interface org.freedesktop.Telepathy.ChannelDispatcher.Interface.OperationList.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Dispatch_Operation</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Properties</parameter>&#160;:</term>
<listitem><simpara> GHashTable * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-dispatcher-interface-operation-list-emit-dispatch-operation-finished" role="function">
<title>tp_svc_channel_dispatcher_interface_operation_list_emit_dispatch_operation_finished ()</title>
<indexterm zone="tp-svc-channel-dispatcher-interface-operation-list-emit-dispatch-operation-finished"><primary sortas="tp_svc_channel_dispatcher_interface_operation_list_emit_dispatch_operation_finished">tp_svc_channel_dispatcher_interface_operation_list_emit_dispatch_operation_finished</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_dispatcher_interface_operation_list_emit_dispatch_operation_finished
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="gchar">gchar</link> *arg_Dispatch_Operation);</programlisting>
<para>
Type-safe wrapper around g_signal_emit to emit the
DispatchOperationFinished signal on interface org.freedesktop.Telepathy.ChannelDispatcher.Interface.OperationList.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Dispatch_Operation</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>

<refsect1 id="telepathy-glib-svc-channel-dispatcher.signal-details" role="signals">
<title role="signals.title">Signal Details</title>
<refsect2 id="TpSvcChannelDispatcherInterfaceOperationList-dispatch-operation-finished" role="signal"><title>The <literal>&quot;dispatch-operation-finished&quot;</literal> signal</title>
<indexterm zone="TpSvcChannelDispatcherInterfaceOperationList-dispatch-operation-finished"><primary sortas="TpSvcChannelDispatcherInterfaceOperationList::dispatch-operation-finished">TpSvcChannelDispatcherInterfaceOperationList::dispatch-operation-finished</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="TpSvcChannelDispatcherInterfaceOperationList">TpSvcChannelDispatcherInterfaceOperationList</link> *arg_Dispatch_Operation,
                                                        <link linkend="DBusGObjectPath">DBusGObjectPath</link>                              *arg1,
                                                        <link linkend="gpointer">gpointer</link>                                      user_data)                   : Run Last / Has Details</programlisting>
<para>
The DispatchOperationFinished D-Bus signal is emitted whenever this GObject signal is.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>arg_Dispatch_Operation</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="TpSvcChannelDispatcherInterfaceOperationList-new-dispatch-operation" role="signal"><title>The <literal>&quot;new-dispatch-operation&quot;</literal> signal</title>
<indexterm zone="TpSvcChannelDispatcherInterfaceOperationList-new-dispatch-operation"><primary sortas="TpSvcChannelDispatcherInterfaceOperationList::new-dispatch-operation">TpSvcChannelDispatcherInterfaceOperationList::new-dispatch-operation</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="TpSvcChannelDispatcherInterfaceOperationList">TpSvcChannelDispatcherInterfaceOperationList</link> *arg_Dispatch_Operation,
                                                        <link linkend="DBusGObjectPath">DBusGObjectPath</link>                              *arg_Properties,
                                                        <link linkend="gpointer">gpointer</link>                                      user_data)                   : Run Last / Has Details</programlisting>
<para>
The NewDispatchOperation D-Bus signal is emitted whenever this GObject signal is.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>arg_Dispatch_Operation</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Properties</parameter>&#160;:</term>
<listitem><simpara> GHashTable * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>



</refentry>

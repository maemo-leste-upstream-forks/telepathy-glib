<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="telepathy-glib-svc-account-manager">
<refmeta>
<refentrytitle role="top_of_page" id="telepathy-glib-svc-account-manager.top_of_page">Service-side Account Manager interface</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>TELEPATHY-GLIB Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>Service-side Account Manager interface</refname>
<refpurpose>GInterface for Telepathy AccountManager objects</refpurpose>
</refnamediv>

<refsynopsisdiv id="telepathy-glib-svc-account-manager.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>
<anchor id="TpSvcAccountManager"/>
<synopsis>

#include &lt;telepathy-glib/svc-account-manager.h&gt;

                    <link linkend="TpSvcAccountManager-struct">TpSvcAccountManager</link>;
                    <link linkend="TpSvcAccountManagerClass">TpSvcAccountManagerClass</link>;
<link linkend="void">void</link>                <link linkend="tp-svc-account-manager-emit-account-removed">tp_svc_account_manager_emit_account_removed</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="gchar">gchar</link> *arg_Account);
<link linkend="void">void</link>                <link linkend="tp-svc-account-manager-emit-account-validity-changed">tp_svc_account_manager_emit_account_validity_changed</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="gchar">gchar</link> *arg_Account,
                                                         <link linkend="gboolean">gboolean</link> arg_Valid);
<link linkend="void">void</link>                (<link linkend="tp-svc-account-manager-create-account-impl">*tp_svc_account_manager_create_account_impl</link>)
                                                        (<link linkend="TpSvcAccountManager">TpSvcAccountManager</link> *self,
                                                         const <link linkend="gchar">gchar</link> *in_Connection_Manager,
                                                         const <link linkend="gchar">gchar</link> *in_Protocol,
                                                         const <link linkend="gchar">gchar</link> *in_Display_Name,
                                                         <link linkend="GHashTable">GHashTable</link> *in_Parameters,
                                                         <link linkend="GHashTable">GHashTable</link> *in_Properties,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-account-manager-return-from-create-account">tp_svc_account_manager_return_from_create_account</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="gchar">gchar</link> *out_Account);
<link linkend="void">void</link>                <link linkend="tp-svc-account-manager-implement-create-account">tp_svc_account_manager_implement_create_account</link>
                                                        (<link linkend="TpSvcAccountManagerClass">TpSvcAccountManagerClass</link> *klass,
                                                         <link linkend="tp-svc-account-manager-create-account-impl">tp_svc_account_manager_create_account_impl</link> impl);
</synopsis>
</refsynopsisdiv>

<refsect1 id="telepathy-glib-svc-account-manager.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>
  <link linkend="GInterface">GInterface</link>
   +----TpSvcAccountManager
</synopsis>
</refsect1>






<refsect1 id="telepathy-glib-svc-account-manager.signals" role="signal_proto">
<title role="signal_proto.title">Signals</title>
<synopsis>
  &quot;<link linkend="TpSvcAccountManager-account-removed">account-removed</link>&quot;                                : Run Last / Has Details
  &quot;<link linkend="TpSvcAccountManager-account-validity-changed">account-validity-changed</link>&quot;                       : Run Last / Has Details
</synopsis>
</refsect1>


<refsect1 id="telepathy-glib-svc-account-manager.description" role="desc">
<title role="desc.title">Description</title>
<para>
The <link linkend="TpSvcAccountManager"><type>TpSvcAccountManager</type></link> interface (auto-generated from the Telepathy
spec) makes it easier to export an object implementing the Telepathy
AccountManager interface, with the correct method and signal signatures,
and emit signals from that object in a type-safe way.
</para>
<para>
You don't need these interfaces unless you're implementing a
Telepathy AccountManager, such as Mission Control.</para>
<para>
</para>
</refsect1>

<refsect1 id="telepathy-glib-svc-account-manager.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="TpSvcAccountManager-struct" role="struct">
<title>TpSvcAccountManager</title>
<indexterm zone="TpSvcAccountManager-struct"><primary sortas="TpSvcAccountManager">TpSvcAccountManager</primary></indexterm><programlisting>typedef struct _TpSvcAccountManager TpSvcAccountManager;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>
</para></refsect2>
<refsect2 id="TpSvcAccountManagerClass" role="struct">
<title>TpSvcAccountManagerClass</title>
<indexterm zone="TpSvcAccountManagerClass"><primary sortas="TpSvcAccountManagerClass">TpSvcAccountManagerClass</primary></indexterm><programlisting>typedef struct _TpSvcAccountManagerClass TpSvcAccountManagerClass;</programlisting>
<para>
The class of TpSvcAccountManager.
</para>
<para>
In a full implementation of this interface (i.e. all
methods implemented), the interface initialization
function used in <link linkend="G-IMPLEMENT-INTERFACE--CAPS"><function>G_IMPLEMENT_INTERFACE()</function></link> would
typically look like this:
</para>
<para>
<programlisting>
static void
implement_account_manager (gpointer klass,
    gpointer unused G_GNUC_UNUSED)
{
#define IMPLEMENT(x) tp_svc_account_manager_implement_##<link linkend="x">x</link> (\
  klass, my_object_##<link linkend="x">x</link>)
  IMPLEMENT (create_account);
#undef IMPLEMENT
}
</programlisting></para>
<para>
</para></refsect2>
<refsect2 id="tp-svc-account-manager-emit-account-removed" role="function">
<title>tp_svc_account_manager_emit_account_removed ()</title>
<indexterm zone="tp-svc-account-manager-emit-account-removed"><primary sortas="tp_svc_account_manager_emit_account_removed">tp_svc_account_manager_emit_account_removed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_account_manager_emit_account_removed
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="gchar">gchar</link> *arg_Account);</programlisting>
<para>
Type-safe wrapper around g_signal_emit to emit the
AccountRemoved signal on interface org.freedesktop.Telepathy.AccountManager.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Account</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-account-manager-emit-account-validity-changed" role="function">
<title>tp_svc_account_manager_emit_account_validity_changed ()</title>
<indexterm zone="tp-svc-account-manager-emit-account-validity-changed"><primary sortas="tp_svc_account_manager_emit_account_validity_changed">tp_svc_account_manager_emit_account_validity_changed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_account_manager_emit_account_validity_changed
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="gchar">gchar</link> *arg_Account,
                                                         <link linkend="gboolean">gboolean</link> arg_Valid);</programlisting>
<para>
Type-safe wrapper around g_signal_emit to emit the
AccountValidityChanged signal on interface org.freedesktop.Telepathy.AccountManager.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Account</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Valid</parameter>&#160;:</term>
<listitem><simpara> gboolean  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-account-manager-create-account-impl" role="function">
<title>tp_svc_account_manager_create_account_impl ()</title>
<indexterm zone="tp-svc-account-manager-create-account-impl"><primary sortas="tp_svc_account_manager_create_account_impl">tp_svc_account_manager_create_account_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_account_manager_create_account_impl)
                                                        (<link linkend="TpSvcAccountManager">TpSvcAccountManager</link> *self,
                                                         const <link linkend="gchar">gchar</link> *in_Connection_Manager,
                                                         const <link linkend="gchar">gchar</link> *in_Protocol,
                                                         const <link linkend="gchar">gchar</link> *in_Display_Name,
                                                         <link linkend="GHashTable">GHashTable</link> *in_Parameters,
                                                         <link linkend="GHashTable">GHashTable</link> *in_Properties,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
CreateAccount on interface org.freedesktop.Telepathy.AccountManager.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Connection_Manager</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Protocol</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Display_Name</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Parameters</parameter>&#160;:</term>
<listitem><simpara> GHashTable * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Properties</parameter>&#160;:</term>
<listitem><simpara> GHashTable * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-account-manager-return-from-create-account" role="function">
<title>tp_svc_account_manager_return_from_create_account ()</title>
<indexterm zone="tp-svc-account-manager-return-from-create-account"><primary sortas="tp_svc_account_manager_return_from_create_account">tp_svc_account_manager_return_from_create_account</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_account_manager_return_from_create_account
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="gchar">gchar</link> *out_Account);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Account</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-account-manager-implement-create-account" role="function">
<title>tp_svc_account_manager_implement_create_account ()</title>
<indexterm zone="tp-svc-account-manager-implement-create-account"><primary sortas="tp_svc_account_manager_implement_create_account">tp_svc_account_manager_implement_create_account</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_account_manager_implement_create_account
                                                        (<link linkend="TpSvcAccountManagerClass">TpSvcAccountManagerClass</link> *klass,
                                                         <link linkend="tp-svc-account-manager-create-account-impl">tp_svc_account_manager_create_account_impl</link> impl);</programlisting>
<para>
Register an implementation for the CreateAccount method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the CreateAccount D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>

<refsect1 id="telepathy-glib-svc-account-manager.signal-details" role="signals">
<title role="signals.title">Signal Details</title>
<refsect2 id="TpSvcAccountManager-account-removed" role="signal"><title>The <literal>&quot;account-removed&quot;</literal> signal</title>
<indexterm zone="TpSvcAccountManager-account-removed"><primary sortas="TpSvcAccountManager::account-removed">TpSvcAccountManager::account-removed</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="TpSvcAccountManager">TpSvcAccountManager</link> *arg_Account,
                                                        <link linkend="DBusGObjectPath">DBusGObjectPath</link>     *arg1,
                                                        <link linkend="gpointer">gpointer</link>             user_data)        : Run Last / Has Details</programlisting>
<para>
The AccountRemoved D-Bus signal is emitted whenever this GObject signal is.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>arg_Account</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="TpSvcAccountManager-account-validity-changed" role="signal"><title>The <literal>&quot;account-validity-changed&quot;</literal> signal</title>
<indexterm zone="TpSvcAccountManager-account-validity-changed"><primary sortas="TpSvcAccountManager::account-validity-changed">TpSvcAccountManager::account-validity-changed</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="TpSvcAccountManager">TpSvcAccountManager</link> *arg_Account,
                                                        <link linkend="DBusGObjectPath">DBusGObjectPath</link>     *arg_Valid,
                                                        <link linkend="gboolean">gboolean</link>             arg2,
                                                        <link linkend="gpointer">gpointer</link>             user_data)        : Run Last / Has Details</programlisting>
<para>
The AccountValidityChanged D-Bus signal is emitted whenever this GObject signal is.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>arg_Account</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Valid</parameter>&#160;:</term>
<listitem><simpara> gboolean  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>



</refentry>

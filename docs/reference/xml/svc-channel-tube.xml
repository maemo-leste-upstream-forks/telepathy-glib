<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="telepathy-glib-svc-channel-tube">
<refmeta>
<refentrytitle role="top_of_page" id="telepathy-glib-svc-channel-tube.top_of_page">Tube channels</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>TELEPATHY-GLIB Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>Tube channels</refname>
<refpurpose>service-side interface for the Tube channel interface,
 StreamTube channel type and DBusTube channel type.</refpurpose>
</refnamediv>

<refsynopsisdiv id="telepathy-glib-svc-channel-tube.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>

#include &lt;telepathy-glib/svc-channel.h&gt;

                    <link linkend="TpSvcChannelInterfaceTube">TpSvcChannelInterfaceTube</link>;
                    <link linkend="TpSvcChannelInterfaceTubeClass">TpSvcChannelInterfaceTubeClass</link>;
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-tube-emit-tube-channel-state-changed">tp_svc_channel_interface_tube_emit_tube_channel_state_changed</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         <link linkend="guint">guint</link> arg_State);
                    <link linkend="TpSvcChannelTypeStreamTube">TpSvcChannelTypeStreamTube</link>;
                    <link linkend="TpSvcChannelTypeStreamTubeClass">TpSvcChannelTypeStreamTubeClass</link>;
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-type-stream-tube-offer-impl">*tp_svc_channel_type_stream_tube_offer_impl</link>)
                                                        (<link linkend="TpSvcChannelTypeStreamTube">TpSvcChannelTypeStreamTube</link> *self,
                                                         <link linkend="guint">guint</link> in_address_type,
                                                         const <link linkend="GValue">GValue</link> *in_address,
                                                         <link linkend="guint">guint</link> in_access_control,
                                                         <link linkend="GHashTable">GHashTable</link> *in_parameters,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-stream-tube-implement-offer">tp_svc_channel_type_stream_tube_implement_offer</link>
                                                        (<link linkend="TpSvcChannelTypeStreamTubeClass">TpSvcChannelTypeStreamTubeClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-stream-tube-offer-impl">tp_svc_channel_type_stream_tube_offer_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-stream-tube-return-from-offer">tp_svc_channel_type_stream_tube_return_from_offer</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-type-stream-tube-accept-impl">*tp_svc_channel_type_stream_tube_accept_impl</link>)
                                                        (<link linkend="TpSvcChannelTypeStreamTube">TpSvcChannelTypeStreamTube</link> *self,
                                                         <link linkend="guint">guint</link> in_address_type,
                                                         <link linkend="guint">guint</link> in_access_control,
                                                         const <link linkend="GValue">GValue</link> *in_access_control_param,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-stream-tube-implement-accept">tp_svc_channel_type_stream_tube_implement_accept</link>
                                                        (<link linkend="TpSvcChannelTypeStreamTubeClass">TpSvcChannelTypeStreamTubeClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-stream-tube-accept-impl">tp_svc_channel_type_stream_tube_accept_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-stream-tube-return-from-accept">tp_svc_channel_type_stream_tube_return_from_accept</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="GValue">GValue</link> *out_address);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-stream-tube-emit-new-remote-connection">tp_svc_channel_type_stream_tube_emit_new_remote_connection</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         <link linkend="guint">guint</link> arg_Handle,
                                                         const <link linkend="GValue">GValue</link> *arg_Connection_Param,
                                                         <link linkend="guint">guint</link> arg_Connection_ID);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-stream-tube-emit-new-local-connection">tp_svc_channel_type_stream_tube_emit_new_local_connection</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         <link linkend="guint">guint</link> arg_Connection_ID);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-stream-tube-emit-connection-closed">tp_svc_channel_type_stream_tube_emit_connection_closed</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         <link linkend="guint">guint</link> arg_Connection_ID,
                                                         const <link linkend="gchar">gchar</link> *arg_Error,
                                                         const <link linkend="gchar">gchar</link> *arg_Message);
                    <link linkend="TpSvcChannelTypeDBusTube">TpSvcChannelTypeDBusTube</link>;
                    <link linkend="TpSvcChannelTypeDBusTubeClass">TpSvcChannelTypeDBusTubeClass</link>;
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-type-dbus-tube-offer-impl">*tp_svc_channel_type_dbus_tube_offer_impl</link>)
                                                        (<link linkend="TpSvcChannelTypeDBusTube">TpSvcChannelTypeDBusTube</link> *self,
                                                         <link linkend="GHashTable">GHashTable</link> *in_parameters,
                                                         <link linkend="guint">guint</link> in_access_control,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-dbus-tube-implement-offer">tp_svc_channel_type_dbus_tube_implement_offer</link>
                                                        (<link linkend="TpSvcChannelTypeDBusTubeClass">TpSvcChannelTypeDBusTubeClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-dbus-tube-offer-impl">tp_svc_channel_type_dbus_tube_offer_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-dbus-tube-return-from-offer">tp_svc_channel_type_dbus_tube_return_from_offer</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="gchar">gchar</link> *out_address);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-type-dbus-tube-accept-impl">*tp_svc_channel_type_dbus_tube_accept_impl</link>)
                                                        (<link linkend="TpSvcChannelTypeDBusTube">TpSvcChannelTypeDBusTube</link> *self,
                                                         <link linkend="guint">guint</link> in_access_control,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-dbus-tube-implement-accept">tp_svc_channel_type_dbus_tube_implement_accept</link>
                                                        (<link linkend="TpSvcChannelTypeDBusTubeClass">TpSvcChannelTypeDBusTubeClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-dbus-tube-accept-impl">tp_svc_channel_type_dbus_tube_accept_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-dbus-tube-return-from-accept">tp_svc_channel_type_dbus_tube_return_from_accept</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="gchar">gchar</link> *out_address);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-dbus-tube-emit-dbus-names-changed">tp_svc_channel_type_dbus_tube_emit_dbus_names_changed</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         <link linkend="GHashTable">GHashTable</link> *arg_Added,
                                                         const <link linkend="GArray">GArray</link> *arg_Removed);
</synopsis>
</refsynopsisdiv>









<refsect1 id="telepathy-glib-svc-channel-tube.description" role="desc">
<title role="desc.title">Description</title>
<para>
A "tube" is a mechanism for arbitrary data transfer.
This section documents the auto-generated C wrappers for the Tube
channel interface, StreamTube channel type and DBusTube channel type.</para>
<para>
</para>
</refsect1>

<refsect1 id="telepathy-glib-svc-channel-tube.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="TpSvcChannelInterfaceTube" role="struct">
<title>TpSvcChannelInterfaceTube</title>
<indexterm zone="TpSvcChannelInterfaceTube"><primary sortas="TpSvcChannelInterfaceTube">TpSvcChannelInterfaceTube</primary></indexterm><programlisting>typedef struct _TpSvcChannelInterfaceTube TpSvcChannelInterfaceTube;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>
</para></refsect2>
<refsect2 id="TpSvcChannelInterfaceTubeClass" role="struct">
<title>TpSvcChannelInterfaceTubeClass</title>
<indexterm zone="TpSvcChannelInterfaceTubeClass"><primary sortas="TpSvcChannelInterfaceTubeClass">TpSvcChannelInterfaceTubeClass</primary></indexterm><programlisting>typedef struct _TpSvcChannelInterfaceTubeClass TpSvcChannelInterfaceTubeClass;</programlisting>
<para>
The class of TpSvcChannelInterfaceTube.
This interface has no D-Bus methods, so an
implementation can typically pass <link linkend="NULL--CAPS"><literal>NULL</literal></link> to
<link linkend="G-IMPLEMENT-INTERFACE--CAPS"><function>G_IMPLEMENT_INTERFACE()</function></link> as the interface
initialization function.</para>
<para>
</para></refsect2>
<refsect2 id="tp-svc-channel-interface-tube-emit-tube-channel-state-changed" role="function">
<title>tp_svc_channel_interface_tube_emit_tube_channel_state_changed ()</title>
<indexterm zone="tp-svc-channel-interface-tube-emit-tube-channel-state-changed"><primary sortas="tp_svc_channel_interface_tube_emit_tube_channel_state_changed">tp_svc_channel_interface_tube_emit_tube_channel_state_changed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_tube_emit_tube_channel_state_changed
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         <link linkend="guint">guint</link> arg_State);</programlisting>
<para>
Type-safe wrapper around g_signal_emit to emit the
TubeChannelStateChanged signal on interface org.freedesktop.Telepathy.Channel.Interface.Tube.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_State</parameter>&#160;:</term>
<listitem><simpara> guint  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="TpSvcChannelTypeStreamTube" role="struct">
<title>TpSvcChannelTypeStreamTube</title>
<indexterm zone="TpSvcChannelTypeStreamTube"><primary sortas="TpSvcChannelTypeStreamTube">TpSvcChannelTypeStreamTube</primary></indexterm><programlisting>typedef struct _TpSvcChannelTypeStreamTube TpSvcChannelTypeStreamTube;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>
</para></refsect2>
<refsect2 id="TpSvcChannelTypeStreamTubeClass" role="struct">
<title>TpSvcChannelTypeStreamTubeClass</title>
<indexterm zone="TpSvcChannelTypeStreamTubeClass"><primary sortas="TpSvcChannelTypeStreamTubeClass">TpSvcChannelTypeStreamTubeClass</primary></indexterm><programlisting>typedef struct _TpSvcChannelTypeStreamTubeClass TpSvcChannelTypeStreamTubeClass;</programlisting>
<para>
The class of TpSvcChannelTypeStreamTube.
</para>
<para>
In a full implementation of this interface (i.e. all
methods implemented), the interface initialization
function used in <link linkend="G-IMPLEMENT-INTERFACE--CAPS"><function>G_IMPLEMENT_INTERFACE()</function></link> would
typically look like this:
</para>
<para>
<programlisting>
static void
implement_channel_type_stream_tube (gpointer klass,
    gpointer unused G_GNUC_UNUSED)
{
#define IMPLEMENT(x) tp_svc_channel_type_stream_tube_implement_##<link linkend="x">x</link> (\
  klass, my_object_##<link linkend="x">x</link>)
  IMPLEMENT (offer);
  IMPLEMENT (accept);
#undef IMPLEMENT
}
</programlisting></para>
<para>
</para></refsect2>
<refsect2 id="tp-svc-channel-type-stream-tube-offer-impl" role="function">
<title>tp_svc_channel_type_stream_tube_offer_impl ()</title>
<indexterm zone="tp-svc-channel-type-stream-tube-offer-impl"><primary sortas="tp_svc_channel_type_stream_tube_offer_impl">tp_svc_channel_type_stream_tube_offer_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_type_stream_tube_offer_impl)
                                                        (<link linkend="TpSvcChannelTypeStreamTube">TpSvcChannelTypeStreamTube</link> *self,
                                                         <link linkend="guint">guint</link> in_address_type,
                                                         const <link linkend="GValue">GValue</link> *in_address,
                                                         <link linkend="guint">guint</link> in_access_control,
                                                         <link linkend="GHashTable">GHashTable</link> *in_parameters,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
Offer on interface org.freedesktop.Telepathy.Channel.Type.StreamTube.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_address_type</parameter>&#160;:</term>
<listitem><simpara> guint  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_address</parameter>&#160;:</term>
<listitem><simpara> const GValue * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_access_control</parameter>&#160;:</term>
<listitem><simpara> guint  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_parameters</parameter>&#160;:</term>
<listitem><simpara> GHashTable * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-stream-tube-implement-offer" role="function">
<title>tp_svc_channel_type_stream_tube_implement_offer ()</title>
<indexterm zone="tp-svc-channel-type-stream-tube-implement-offer"><primary sortas="tp_svc_channel_type_stream_tube_implement_offer">tp_svc_channel_type_stream_tube_implement_offer</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_stream_tube_implement_offer
                                                        (<link linkend="TpSvcChannelTypeStreamTubeClass">TpSvcChannelTypeStreamTubeClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-stream-tube-offer-impl">tp_svc_channel_type_stream_tube_offer_impl</link> impl);</programlisting>
<para>
Register an implementation for the Offer method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the Offer D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-stream-tube-return-from-offer" role="function">
<title>tp_svc_channel_type_stream_tube_return_from_offer ()</title>
<indexterm zone="tp-svc-channel-type-stream-tube-return-from-offer"><primary sortas="tp_svc_channel_type_stream_tube_return_from_offer">tp_svc_channel_type_stream_tube_return_from_offer</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_stream_tube_return_from_offer
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-stream-tube-accept-impl" role="function">
<title>tp_svc_channel_type_stream_tube_accept_impl ()</title>
<indexterm zone="tp-svc-channel-type-stream-tube-accept-impl"><primary sortas="tp_svc_channel_type_stream_tube_accept_impl">tp_svc_channel_type_stream_tube_accept_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_type_stream_tube_accept_impl)
                                                        (<link linkend="TpSvcChannelTypeStreamTube">TpSvcChannelTypeStreamTube</link> *self,
                                                         <link linkend="guint">guint</link> in_address_type,
                                                         <link linkend="guint">guint</link> in_access_control,
                                                         const <link linkend="GValue">GValue</link> *in_access_control_param,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
Accept on interface org.freedesktop.Telepathy.Channel.Type.StreamTube.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_address_type</parameter>&#160;:</term>
<listitem><simpara> guint  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_access_control</parameter>&#160;:</term>
<listitem><simpara> guint  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_access_control_param</parameter>&#160;:</term>
<listitem><simpara> const GValue * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-stream-tube-implement-accept" role="function">
<title>tp_svc_channel_type_stream_tube_implement_accept ()</title>
<indexterm zone="tp-svc-channel-type-stream-tube-implement-accept"><primary sortas="tp_svc_channel_type_stream_tube_implement_accept">tp_svc_channel_type_stream_tube_implement_accept</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_stream_tube_implement_accept
                                                        (<link linkend="TpSvcChannelTypeStreamTubeClass">TpSvcChannelTypeStreamTubeClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-stream-tube-accept-impl">tp_svc_channel_type_stream_tube_accept_impl</link> impl);</programlisting>
<para>
Register an implementation for the Accept method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the Accept D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-stream-tube-return-from-accept" role="function">
<title>tp_svc_channel_type_stream_tube_return_from_accept ()</title>
<indexterm zone="tp-svc-channel-type-stream-tube-return-from-accept"><primary sortas="tp_svc_channel_type_stream_tube_return_from_accept">tp_svc_channel_type_stream_tube_return_from_accept</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_stream_tube_return_from_accept
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="GValue">GValue</link> *out_address);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_address</parameter>&#160;:</term>
<listitem><simpara> const GValue * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-stream-tube-emit-new-remote-connection" role="function">
<title>tp_svc_channel_type_stream_tube_emit_new_remote_connection ()</title>
<indexterm zone="tp-svc-channel-type-stream-tube-emit-new-remote-connection"><primary sortas="tp_svc_channel_type_stream_tube_emit_new_remote_connection">tp_svc_channel_type_stream_tube_emit_new_remote_connection</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_stream_tube_emit_new_remote_connection
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         <link linkend="guint">guint</link> arg_Handle,
                                                         const <link linkend="GValue">GValue</link> *arg_Connection_Param,
                                                         <link linkend="guint">guint</link> arg_Connection_ID);</programlisting>
<para>
Type-safe wrapper around g_signal_emit to emit the
NewRemoteConnection signal on interface org.freedesktop.Telepathy.Channel.Type.StreamTube.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Handle</parameter>&#160;:</term>
<listitem><simpara> guint  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Connection_Param</parameter>&#160;:</term>
<listitem><simpara> const GValue * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Connection_ID</parameter>&#160;:</term>
<listitem><simpara> guint  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-stream-tube-emit-new-local-connection" role="function">
<title>tp_svc_channel_type_stream_tube_emit_new_local_connection ()</title>
<indexterm zone="tp-svc-channel-type-stream-tube-emit-new-local-connection"><primary sortas="tp_svc_channel_type_stream_tube_emit_new_local_connection">tp_svc_channel_type_stream_tube_emit_new_local_connection</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_stream_tube_emit_new_local_connection
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         <link linkend="guint">guint</link> arg_Connection_ID);</programlisting>
<para>
Type-safe wrapper around g_signal_emit to emit the
NewLocalConnection signal on interface org.freedesktop.Telepathy.Channel.Type.StreamTube.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Connection_ID</parameter>&#160;:</term>
<listitem><simpara> guint  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-stream-tube-emit-connection-closed" role="function">
<title>tp_svc_channel_type_stream_tube_emit_connection_closed ()</title>
<indexterm zone="tp-svc-channel-type-stream-tube-emit-connection-closed"><primary sortas="tp_svc_channel_type_stream_tube_emit_connection_closed">tp_svc_channel_type_stream_tube_emit_connection_closed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_stream_tube_emit_connection_closed
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         <link linkend="guint">guint</link> arg_Connection_ID,
                                                         const <link linkend="gchar">gchar</link> *arg_Error,
                                                         const <link linkend="gchar">gchar</link> *arg_Message);</programlisting>
<para>
Type-safe wrapper around g_signal_emit to emit the
ConnectionClosed signal on interface org.freedesktop.Telepathy.Channel.Type.StreamTube.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Connection_ID</parameter>&#160;:</term>
<listitem><simpara> guint  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Error</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Message</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="TpSvcChannelTypeDBusTube" role="struct">
<title>TpSvcChannelTypeDBusTube</title>
<indexterm zone="TpSvcChannelTypeDBusTube"><primary sortas="TpSvcChannelTypeDBusTube">TpSvcChannelTypeDBusTube</primary></indexterm><programlisting>typedef struct _TpSvcChannelTypeDBusTube TpSvcChannelTypeDBusTube;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>
</para></refsect2>
<refsect2 id="TpSvcChannelTypeDBusTubeClass" role="struct">
<title>TpSvcChannelTypeDBusTubeClass</title>
<indexterm zone="TpSvcChannelTypeDBusTubeClass"><primary sortas="TpSvcChannelTypeDBusTubeClass">TpSvcChannelTypeDBusTubeClass</primary></indexterm><programlisting>typedef struct _TpSvcChannelTypeDBusTubeClass TpSvcChannelTypeDBusTubeClass;</programlisting>
<para>
The class of TpSvcChannelTypeDBusTube.
</para>
<para>
In a full implementation of this interface (i.e. all
methods implemented), the interface initialization
function used in <link linkend="G-IMPLEMENT-INTERFACE--CAPS"><function>G_IMPLEMENT_INTERFACE()</function></link> would
typically look like this:
</para>
<para>
<programlisting>
static void
implement_channel_type_dbus_tube (gpointer klass,
    gpointer unused G_GNUC_UNUSED)
{
#define IMPLEMENT(x) tp_svc_channel_type_dbus_tube_implement_##<link linkend="x">x</link> (\
  klass, my_object_##<link linkend="x">x</link>)
  IMPLEMENT (offer);
  IMPLEMENT (accept);
#undef IMPLEMENT
}
</programlisting></para>
<para>
</para></refsect2>
<refsect2 id="tp-svc-channel-type-dbus-tube-offer-impl" role="function">
<title>tp_svc_channel_type_dbus_tube_offer_impl ()</title>
<indexterm zone="tp-svc-channel-type-dbus-tube-offer-impl"><primary sortas="tp_svc_channel_type_dbus_tube_offer_impl">tp_svc_channel_type_dbus_tube_offer_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_type_dbus_tube_offer_impl)
                                                        (<link linkend="TpSvcChannelTypeDBusTube">TpSvcChannelTypeDBusTube</link> *self,
                                                         <link linkend="GHashTable">GHashTable</link> *in_parameters,
                                                         <link linkend="guint">guint</link> in_access_control,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
Offer on interface org.freedesktop.Telepathy.Channel.Type.DBusTube.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_parameters</parameter>&#160;:</term>
<listitem><simpara> GHashTable * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_access_control</parameter>&#160;:</term>
<listitem><simpara> guint  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-dbus-tube-implement-offer" role="function">
<title>tp_svc_channel_type_dbus_tube_implement_offer ()</title>
<indexterm zone="tp-svc-channel-type-dbus-tube-implement-offer"><primary sortas="tp_svc_channel_type_dbus_tube_implement_offer">tp_svc_channel_type_dbus_tube_implement_offer</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_dbus_tube_implement_offer
                                                        (<link linkend="TpSvcChannelTypeDBusTubeClass">TpSvcChannelTypeDBusTubeClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-dbus-tube-offer-impl">tp_svc_channel_type_dbus_tube_offer_impl</link> impl);</programlisting>
<para>
Register an implementation for the Offer method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the Offer D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-dbus-tube-return-from-offer" role="function">
<title>tp_svc_channel_type_dbus_tube_return_from_offer ()</title>
<indexterm zone="tp-svc-channel-type-dbus-tube-return-from-offer"><primary sortas="tp_svc_channel_type_dbus_tube_return_from_offer">tp_svc_channel_type_dbus_tube_return_from_offer</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_dbus_tube_return_from_offer
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="gchar">gchar</link> *out_address);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_address</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-dbus-tube-accept-impl" role="function">
<title>tp_svc_channel_type_dbus_tube_accept_impl ()</title>
<indexterm zone="tp-svc-channel-type-dbus-tube-accept-impl"><primary sortas="tp_svc_channel_type_dbus_tube_accept_impl">tp_svc_channel_type_dbus_tube_accept_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_type_dbus_tube_accept_impl)
                                                        (<link linkend="TpSvcChannelTypeDBusTube">TpSvcChannelTypeDBusTube</link> *self,
                                                         <link linkend="guint">guint</link> in_access_control,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
Accept on interface org.freedesktop.Telepathy.Channel.Type.DBusTube.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_access_control</parameter>&#160;:</term>
<listitem><simpara> guint  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-dbus-tube-implement-accept" role="function">
<title>tp_svc_channel_type_dbus_tube_implement_accept ()</title>
<indexterm zone="tp-svc-channel-type-dbus-tube-implement-accept"><primary sortas="tp_svc_channel_type_dbus_tube_implement_accept">tp_svc_channel_type_dbus_tube_implement_accept</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_dbus_tube_implement_accept
                                                        (<link linkend="TpSvcChannelTypeDBusTubeClass">TpSvcChannelTypeDBusTubeClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-dbus-tube-accept-impl">tp_svc_channel_type_dbus_tube_accept_impl</link> impl);</programlisting>
<para>
Register an implementation for the Accept method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the Accept D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-dbus-tube-return-from-accept" role="function">
<title>tp_svc_channel_type_dbus_tube_return_from_accept ()</title>
<indexterm zone="tp-svc-channel-type-dbus-tube-return-from-accept"><primary sortas="tp_svc_channel_type_dbus_tube_return_from_accept">tp_svc_channel_type_dbus_tube_return_from_accept</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_dbus_tube_return_from_accept
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="gchar">gchar</link> *out_address);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_address</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-dbus-tube-emit-dbus-names-changed" role="function">
<title>tp_svc_channel_type_dbus_tube_emit_dbus_names_changed ()</title>
<indexterm zone="tp-svc-channel-type-dbus-tube-emit-dbus-names-changed"><primary sortas="tp_svc_channel_type_dbus_tube_emit_dbus_names_changed">tp_svc_channel_type_dbus_tube_emit_dbus_names_changed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_dbus_tube_emit_dbus_names_changed
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         <link linkend="GHashTable">GHashTable</link> *arg_Added,
                                                         const <link linkend="GArray">GArray</link> *arg_Removed);</programlisting>
<para>
Type-safe wrapper around g_signal_emit to emit the
DBusNamesChanged signal on interface org.freedesktop.Telepathy.Channel.Type.DBusTube.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Added</parameter>&#160;:</term>
<listitem><simpara> GHashTable * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Removed</parameter>&#160;:</term>
<listitem><simpara> const GArray * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>

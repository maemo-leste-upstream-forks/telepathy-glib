<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="telepathy-glib-svc-account">
<refmeta>
<refentrytitle role="top_of_page" id="telepathy-glib-svc-account.top_of_page">Service-side Account interfaces</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>TELEPATHY-GLIB Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>Service-side Account interfaces</refname>
<refpurpose>GInterfaces for Telepathy Account objects</refpurpose>
</refnamediv>

<refsynopsisdiv id="telepathy-glib-svc-account.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>
<anchor id="TpSvcAccount"/><anchor id="TpSvcAccountInterfaceAvatar"/>
<synopsis>

#include &lt;telepathy-glib/svc-account.h&gt;

                    <link linkend="TpSvcAccount-struct">TpSvcAccount</link>;
                    <link linkend="TpSvcAccountClass">TpSvcAccountClass</link>;
<link linkend="void">void</link>                <link linkend="tp-svc-account-emit-account-property-changed">tp_svc_account_emit_account_property_changed</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         <link linkend="GHashTable">GHashTable</link> *arg_Properties);
<link linkend="void">void</link>                <link linkend="tp-svc-account-emit-removed">tp_svc_account_emit_removed</link>         (<link linkend="gpointer">gpointer</link> instance);
<link linkend="void">void</link>                (<link linkend="tp-svc-account-reconnect-impl">*tp_svc_account_reconnect_impl</link>)    (<link linkend="TpSvcAccount">TpSvcAccount</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-account-return-from-reconnect">tp_svc_account_return_from_reconnect</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-account-implement-reconnect">tp_svc_account_implement_reconnect</link>  (<link linkend="TpSvcAccountClass">TpSvcAccountClass</link> *klass,
                                                         <link linkend="tp-svc-account-reconnect-impl">tp_svc_account_reconnect_impl</link> impl);
<link linkend="void">void</link>                (<link linkend="tp-svc-account-remove-impl">*tp_svc_account_remove_impl</link>)       (<link linkend="TpSvcAccount">TpSvcAccount</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-account-return-from-remove">tp_svc_account_return_from_remove</link>   (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-account-implement-remove">tp_svc_account_implement_remove</link>     (<link linkend="TpSvcAccountClass">TpSvcAccountClass</link> *klass,
                                                         <link linkend="tp-svc-account-remove-impl">tp_svc_account_remove_impl</link> impl);
<link linkend="void">void</link>                (<link linkend="tp-svc-account-update-parameters-impl">*tp_svc_account_update_parameters_impl</link>)
                                                        (<link linkend="TpSvcAccount">TpSvcAccount</link> *self,
                                                         <link linkend="GHashTable">GHashTable</link> *in_Set,
                                                         const <link linkend="gchar">gchar</link> **in_Unset,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-account-return-from-update-parameters">tp_svc_account_return_from_update_parameters</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="gchar">gchar</link> **out_Reconnect_Required);
<link linkend="void">void</link>                <link linkend="tp-svc-account-implement-update-parameters">tp_svc_account_implement_update_parameters</link>
                                                        (<link linkend="TpSvcAccountClass">TpSvcAccountClass</link> *klass,
                                                         <link linkend="tp-svc-account-update-parameters-impl">tp_svc_account_update_parameters_impl</link> impl);


                    <link linkend="TpSvcAccountInterfaceAvatar-struct">TpSvcAccountInterfaceAvatar</link>;
                    <link linkend="TpSvcAccountInterfaceAvatarClass">TpSvcAccountInterfaceAvatarClass</link>;
<link linkend="void">void</link>                <link linkend="tp-svc-account-interface-avatar-emit-avatar-changed">tp_svc_account_interface_avatar_emit_avatar_changed</link>
                                                        (<link linkend="gpointer">gpointer</link> instance);
</synopsis>
</refsynopsisdiv>

<refsect1 id="telepathy-glib-svc-account.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>
  <link linkend="GInterface">GInterface</link>
   +----TpSvcAccount
</synopsis>
<synopsis>
  <link linkend="GInterface">GInterface</link>
   +----TpSvcAccountInterfaceAvatar
</synopsis>
</refsect1>






<refsect1 id="telepathy-glib-svc-account.signals" role="signal_proto">
<title role="signal_proto.title">Signals</title>
<synopsis>
  &quot;<link linkend="TpSvcAccount-account-property-changed">account-property-changed</link>&quot;                       : Run Last / Has Details
  &quot;<link linkend="TpSvcAccount-removed">removed</link>&quot;                                        : Run Last / Has Details
  &quot;<link linkend="TpSvcAccountInterfaceAvatar-avatar-changed">avatar-changed</link>&quot;                                 : Run Last / Has Details
</synopsis>
</refsect1>


<refsect1 id="telepathy-glib-svc-account.description" role="desc">
<title role="desc.title">Description</title>
<para>
These interfaces (auto-generated from the Telepathy spec) make it easier
to export objects implementing the Telepathy Account and its
optional interfaces, with the correct method and signal signatures,
and emit signals from those objects in a type-safe way.
</para>
<para>
You don't need these interfaces unless you're implementing a
Telepathy AccountManager, such as Mission Control.</para>
<para>
</para>
</refsect1>

<refsect1 id="telepathy-glib-svc-account.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="TpSvcAccount-struct" role="struct">
<title>TpSvcAccount</title>
<indexterm zone="TpSvcAccount-struct"><primary sortas="TpSvcAccount">TpSvcAccount</primary></indexterm><programlisting>typedef struct _TpSvcAccount TpSvcAccount;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>
</para></refsect2>
<refsect2 id="TpSvcAccountClass" role="struct">
<title>TpSvcAccountClass</title>
<indexterm zone="TpSvcAccountClass"><primary sortas="TpSvcAccountClass">TpSvcAccountClass</primary></indexterm><programlisting>typedef struct _TpSvcAccountClass TpSvcAccountClass;</programlisting>
<para>
The class of TpSvcAccount.
</para>
<para>
In a full implementation of this interface (i.e. all
methods implemented), the interface initialization
function used in <link linkend="G-IMPLEMENT-INTERFACE--CAPS"><function>G_IMPLEMENT_INTERFACE()</function></link> would
typically look like this:
</para>
<para>
<programlisting>
static void
implement_account (gpointer klass,
    gpointer unused G_GNUC_UNUSED)
{
#define IMPLEMENT(x) tp_svc_account_implement_##<link linkend="x">x</link> (\
  klass, my_object_##<link linkend="x">x</link>)
  IMPLEMENT (remove);
  IMPLEMENT (update_parameters);
  IMPLEMENT (reconnect);
#undef IMPLEMENT
}
</programlisting></para>
<para>
</para></refsect2>
<refsect2 id="tp-svc-account-emit-account-property-changed" role="function">
<title>tp_svc_account_emit_account_property_changed ()</title>
<indexterm zone="tp-svc-account-emit-account-property-changed"><primary sortas="tp_svc_account_emit_account_property_changed">tp_svc_account_emit_account_property_changed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_account_emit_account_property_changed
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         <link linkend="GHashTable">GHashTable</link> *arg_Properties);</programlisting>
<para>
Type-safe wrapper around g_signal_emit to emit the
AccountPropertyChanged signal on interface org.freedesktop.Telepathy.Account.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Properties</parameter>&#160;:</term>
<listitem><simpara> GHashTable * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-account-emit-removed" role="function">
<title>tp_svc_account_emit_removed ()</title>
<indexterm zone="tp-svc-account-emit-removed"><primary sortas="tp_svc_account_emit_removed">tp_svc_account_emit_removed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_account_emit_removed         (<link linkend="gpointer">gpointer</link> instance);</programlisting>
<para>
Type-safe wrapper around g_signal_emit to emit the
Removed signal on interface org.freedesktop.Telepathy.Account.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-account-reconnect-impl" role="function">
<title>tp_svc_account_reconnect_impl ()</title>
<indexterm zone="tp-svc-account-reconnect-impl"><primary sortas="tp_svc_account_reconnect_impl">tp_svc_account_reconnect_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_account_reconnect_impl)    (<link linkend="TpSvcAccount">TpSvcAccount</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
Reconnect on interface org.freedesktop.Telepathy.Account.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-account-return-from-reconnect" role="function">
<title>tp_svc_account_return_from_reconnect ()</title>
<indexterm zone="tp-svc-account-return-from-reconnect"><primary sortas="tp_svc_account_return_from_reconnect">tp_svc_account_return_from_reconnect</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_account_return_from_reconnect
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-account-implement-reconnect" role="function">
<title>tp_svc_account_implement_reconnect ()</title>
<indexterm zone="tp-svc-account-implement-reconnect"><primary sortas="tp_svc_account_implement_reconnect">tp_svc_account_implement_reconnect</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_account_implement_reconnect  (<link linkend="TpSvcAccountClass">TpSvcAccountClass</link> *klass,
                                                         <link linkend="tp-svc-account-reconnect-impl">tp_svc_account_reconnect_impl</link> impl);</programlisting>
<para>
Register an implementation for the Reconnect method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the Reconnect D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-account-remove-impl" role="function">
<title>tp_svc_account_remove_impl ()</title>
<indexterm zone="tp-svc-account-remove-impl"><primary sortas="tp_svc_account_remove_impl">tp_svc_account_remove_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_account_remove_impl)       (<link linkend="TpSvcAccount">TpSvcAccount</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
Remove on interface org.freedesktop.Telepathy.Account.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-account-return-from-remove" role="function">
<title>tp_svc_account_return_from_remove ()</title>
<indexterm zone="tp-svc-account-return-from-remove"><primary sortas="tp_svc_account_return_from_remove">tp_svc_account_return_from_remove</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_account_return_from_remove   (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-account-implement-remove" role="function">
<title>tp_svc_account_implement_remove ()</title>
<indexterm zone="tp-svc-account-implement-remove"><primary sortas="tp_svc_account_implement_remove">tp_svc_account_implement_remove</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_account_implement_remove     (<link linkend="TpSvcAccountClass">TpSvcAccountClass</link> *klass,
                                                         <link linkend="tp-svc-account-remove-impl">tp_svc_account_remove_impl</link> impl);</programlisting>
<para>
Register an implementation for the Remove method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the Remove D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-account-update-parameters-impl" role="function">
<title>tp_svc_account_update_parameters_impl ()</title>
<indexterm zone="tp-svc-account-update-parameters-impl"><primary sortas="tp_svc_account_update_parameters_impl">tp_svc_account_update_parameters_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_account_update_parameters_impl)
                                                        (<link linkend="TpSvcAccount">TpSvcAccount</link> *self,
                                                         <link linkend="GHashTable">GHashTable</link> *in_Set,
                                                         const <link linkend="gchar">gchar</link> **in_Unset,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
UpdateParameters on interface org.freedesktop.Telepathy.Account.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Set</parameter>&#160;:</term>
<listitem><simpara> GHashTable * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Unset</parameter>&#160;:</term>
<listitem><simpara> const gchar ** (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-account-return-from-update-parameters" role="function">
<title>tp_svc_account_return_from_update_parameters ()</title>
<indexterm zone="tp-svc-account-return-from-update-parameters"><primary sortas="tp_svc_account_return_from_update_parameters">tp_svc_account_return_from_update_parameters</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_account_return_from_update_parameters
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="gchar">gchar</link> **out_Reconnect_Required);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Reconnect_Required</parameter>&#160;:</term>
<listitem><simpara> const gchar ** (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-account-implement-update-parameters" role="function">
<title>tp_svc_account_implement_update_parameters ()</title>
<indexterm zone="tp-svc-account-implement-update-parameters"><primary sortas="tp_svc_account_implement_update_parameters">tp_svc_account_implement_update_parameters</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_account_implement_update_parameters
                                                        (<link linkend="TpSvcAccountClass">TpSvcAccountClass</link> *klass,
                                                         <link linkend="tp-svc-account-update-parameters-impl">tp_svc_account_update_parameters_impl</link> impl);</programlisting>
<para>
Register an implementation for the UpdateParameters method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the UpdateParameters D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="TpSvcAccountInterfaceAvatar-struct" role="struct">
<title>TpSvcAccountInterfaceAvatar</title>
<indexterm zone="TpSvcAccountInterfaceAvatar-struct"><primary sortas="TpSvcAccountInterfaceAvatar">TpSvcAccountInterfaceAvatar</primary></indexterm><programlisting>typedef struct _TpSvcAccountInterfaceAvatar TpSvcAccountInterfaceAvatar;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>
</para></refsect2>
<refsect2 id="TpSvcAccountInterfaceAvatarClass" role="struct">
<title>TpSvcAccountInterfaceAvatarClass</title>
<indexterm zone="TpSvcAccountInterfaceAvatarClass"><primary sortas="TpSvcAccountInterfaceAvatarClass">TpSvcAccountInterfaceAvatarClass</primary></indexterm><programlisting>typedef struct _TpSvcAccountInterfaceAvatarClass TpSvcAccountInterfaceAvatarClass;</programlisting>
<para>
The class of TpSvcAccountInterfaceAvatar.
This interface has no D-Bus methods, so an
implementation can typically pass <link linkend="NULL--CAPS"><literal>NULL</literal></link> to
<link linkend="G-IMPLEMENT-INTERFACE--CAPS"><function>G_IMPLEMENT_INTERFACE()</function></link> as the interface
initialization function.</para>
<para>
</para></refsect2>
<refsect2 id="tp-svc-account-interface-avatar-emit-avatar-changed" role="function">
<title>tp_svc_account_interface_avatar_emit_avatar_changed ()</title>
<indexterm zone="tp-svc-account-interface-avatar-emit-avatar-changed"><primary sortas="tp_svc_account_interface_avatar_emit_avatar_changed">tp_svc_account_interface_avatar_emit_avatar_changed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_account_interface_avatar_emit_avatar_changed
                                                        (<link linkend="gpointer">gpointer</link> instance);</programlisting>
<para>
Type-safe wrapper around g_signal_emit to emit the
AvatarChanged signal on interface org.freedesktop.Telepathy.Account.Interface.Avatar.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>

<refsect1 id="telepathy-glib-svc-account.signal-details" role="signals">
<title role="signals.title">Signal Details</title>
<refsect2 id="TpSvcAccount-account-property-changed" role="signal"><title>The <literal>&quot;account-property-changed&quot;</literal> signal</title>
<indexterm zone="TpSvcAccount-account-property-changed"><primary sortas="TpSvcAccount::account-property-changed">TpSvcAccount::account-property-changed</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="TpSvcAccount">TpSvcAccount</link> *arg_Properties,
                                                        <link linkend="gpointer">gpointer</link>      user_data)           : Run Last / Has Details</programlisting>
<para>
The AccountPropertyChanged D-Bus signal is emitted whenever this GObject signal is.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>arg_Properties</parameter>&#160;:</term>
<listitem><simpara> GHashTable * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="TpSvcAccount-removed" role="signal"><title>The <literal>&quot;removed&quot;</literal> signal</title>
<indexterm zone="TpSvcAccount-removed"><primary sortas="TpSvcAccount::removed">TpSvcAccount::removed</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="TpSvcAccount">TpSvcAccount</link> *arg0,
                                                        <link linkend="gpointer">gpointer</link>      user_data)      : Run Last / Has Details</programlisting>
<para>
The Removed D-Bus signal is emitted whenever this GObject signal is.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="TpSvcAccountInterfaceAvatar-avatar-changed" role="signal"><title>The <literal>&quot;avatar-changed&quot;</literal> signal</title>
<indexterm zone="TpSvcAccountInterfaceAvatar-avatar-changed"><primary sortas="TpSvcAccountInterfaceAvatar::avatar-changed">TpSvcAccountInterfaceAvatar::avatar-changed</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="TpSvcAccountInterfaceAvatar">TpSvcAccountInterfaceAvatar</link> *arg0,
                                                        <link linkend="gpointer">gpointer</link>                     user_data)      : Run Last / Has Details</programlisting>
<para>
The AvatarChanged D-Bus signal is emitted whenever this GObject signal is.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>



</refentry>

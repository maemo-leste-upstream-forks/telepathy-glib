<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="telepathy-glib-TpPropertiesMixin">
<refmeta>
<refentrytitle role="top_of_page" id="telepathy-glib-TpPropertiesMixin.top_of_page">TpPropertiesMixin</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>TELEPATHY-GLIB Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>TpPropertiesMixin</refname>
<refpurpose>a mixin implementation of the Telepathy.Properties
 interface</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv id="telepathy-glib-TpPropertiesMixin.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>

#include &lt;telepathy-glib/properties-mixin.h&gt;

                    <link linkend="TpPropertySignature">TpPropertySignature</link>;
                    <link linkend="TpProperty">TpProperty</link>;
                    <link linkend="TpPropertiesContext">TpPropertiesContext</link>;
<link linkend="gboolean">gboolean</link>            (<link linkend="TpPropertiesSetFunc">*TpPropertiesSetFunc</link>)              (<link linkend="GObject">GObject</link> *obj,
                                                         <link linkend="TpPropertiesContext">TpPropertiesContext</link> *ctx,
                                                         <link linkend="GError">GError</link> **error);
                    <link linkend="TpPropertiesMixin">TpPropertiesMixin</link>;
                    <link linkend="TpPropertiesMixinClass">TpPropertiesMixinClass</link>;
<link linkend="void">void</link>                <link linkend="tp-properties-mixin-class-init">tp_properties_mixin_class_init</link>      (<link linkend="GObjectClass">GObjectClass</link> *obj_cls,
                                                         <link linkend="glong">glong</link> offset,
                                                         const <link linkend="TpPropertySignature">TpPropertySignature</link> *signatures,
                                                         <link linkend="guint">guint</link> num_properties,
                                                         <link linkend="TpPropertiesSetFunc">TpPropertiesSetFunc</link> set_func);
<link linkend="void">void</link>                <link linkend="tp-properties-mixin-init">tp_properties_mixin_init</link>            (<link linkend="GObject">GObject</link> *obj,
                                                         <link linkend="glong">glong</link> offset);
<link linkend="void">void</link>                <link linkend="tp-properties-mixin-finalize">tp_properties_mixin_finalize</link>        (<link linkend="GObject">GObject</link> *obj);
<link linkend="gboolean">gboolean</link>            <link linkend="tp-properties-mixin-list-properties">tp_properties_mixin_list_properties</link> (<link linkend="GObject">GObject</link> *obj,
                                                         <link linkend="GPtrArray">GPtrArray</link> **ret,
                                                         <link linkend="GError">GError</link> **error);
<link linkend="gboolean">gboolean</link>            <link linkend="tp-properties-mixin-get-properties">tp_properties_mixin_get_properties</link>  (<link linkend="GObject">GObject</link> *obj,
                                                         const <link linkend="GArray">GArray</link> *properties,
                                                         <link linkend="GPtrArray">GPtrArray</link> **ret,
                                                         <link linkend="GError">GError</link> **error);
<link linkend="void">void</link>                <link linkend="tp-properties-mixin-set-properties">tp_properties_mixin_set_properties</link>  (<link linkend="GObject">GObject</link> *obj,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *properties,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="gboolean">gboolean</link>            <link linkend="tp-properties-mixin-has-property">tp_properties_mixin_has_property</link>    (<link linkend="GObject">GObject</link> *obj,
                                                         const <link linkend="gchar">gchar</link> *name,
                                                         <link linkend="guint">guint</link> *property);
<link linkend="gboolean">gboolean</link>            <link linkend="tp-properties-context-has">tp_properties_context_has</link>           (<link linkend="TpPropertiesContext">TpPropertiesContext</link> *ctx,
                                                         <link linkend="guint">guint</link> property);
<link linkend="gboolean">gboolean</link>            <link linkend="tp-properties-context-has-other-than">tp_properties_context_has_other_than</link>
                                                        (<link linkend="TpPropertiesContext">TpPropertiesContext</link> *ctx,
                                                         <link linkend="guint">guint</link> property);
const <link linkend="GValue">GValue</link>*       <link linkend="tp-properties-context-get">tp_properties_context_get</link>           (<link linkend="TpPropertiesContext">TpPropertiesContext</link> *ctx,
                                                         <link linkend="guint">guint</link> property);
<link linkend="guint">guint</link>               <link linkend="tp-properties-context-get-value-count">tp_properties_context_get_value_count</link>
                                                        (<link linkend="TpPropertiesContext">TpPropertiesContext</link> *ctx);
<link linkend="void">void</link>                <link linkend="tp-properties-context-remove">tp_properties_context_remove</link>        (<link linkend="TpPropertiesContext">TpPropertiesContext</link> *ctx,
                                                         <link linkend="guint">guint</link> property);
<link linkend="void">void</link>                <link linkend="tp-properties-context-return">tp_properties_context_return</link>        (<link linkend="TpPropertiesContext">TpPropertiesContext</link> *ctx,
                                                         <link linkend="GError">GError</link> *error);
<link linkend="gboolean">gboolean</link>            <link linkend="tp-properties-context-return-if-done">tp_properties_context_return_if_done</link>
                                                        (<link linkend="TpPropertiesContext">TpPropertiesContext</link> *ctx);
<link linkend="void">void</link>                <link linkend="tp-properties-mixin-change-value">tp_properties_mixin_change_value</link>    (<link linkend="GObject">GObject</link> *obj,
                                                         <link linkend="guint">guint</link> prop_id,
                                                         const <link linkend="GValue">GValue</link> *new_value,
                                                         <link linkend="TpIntSet">TpIntSet</link> *props);
<link linkend="void">void</link>                <link linkend="tp-properties-mixin-change-flags">tp_properties_mixin_change_flags</link>    (<link linkend="GObject">GObject</link> *obj,
                                                         <link linkend="guint">guint</link> prop_id,
                                                         <link linkend="TpPropertyFlags">TpPropertyFlags</link> add,
                                                         <link linkend="TpPropertyFlags">TpPropertyFlags</link> del,
                                                         <link linkend="TpIntSet">TpIntSet</link> *props);
<link linkend="void">void</link>                <link linkend="tp-properties-mixin-emit-changed">tp_properties_mixin_emit_changed</link>    (<link linkend="GObject">GObject</link> *obj,
                                                         const <link linkend="TpIntSet">TpIntSet</link> *props);
<link linkend="void">void</link>                <link linkend="tp-properties-mixin-emit-flags">tp_properties_mixin_emit_flags</link>      (<link linkend="GObject">GObject</link> *obj,
                                                         const <link linkend="TpIntSet">TpIntSet</link> *props);
<link linkend="gboolean">gboolean</link>            <link linkend="tp-properties-mixin-is-readable">tp_properties_mixin_is_readable</link>     (<link linkend="GObject">GObject</link> *obj,
                                                         <link linkend="guint">guint</link> prop_id);
<link linkend="gboolean">gboolean</link>            <link linkend="tp-properties-mixin-is-writable">tp_properties_mixin_is_writable</link>     (<link linkend="GObject">GObject</link> *obj,
                                                         <link linkend="guint">guint</link> prop_id);
<link linkend="void">void</link>                <link linkend="tp-properties-mixin-iface-init">tp_properties_mixin_iface_init</link>      (<link linkend="gpointer">gpointer</link> g_iface,
                                                         <link linkend="gpointer">gpointer</link> iface_data);
#define             <link linkend="TP-TYPE-PROPERTY-INFO-STRUCT:CAPS">TP_TYPE_PROPERTY_INFO_STRUCT</link>
#define             <link linkend="TP-TYPE-PROPERTY-INFO-LIST:CAPS">TP_TYPE_PROPERTY_INFO_LIST</link>
#define             <link linkend="TP-TYPE-PROPERTY-VALUE-STRUCT:CAPS">TP_TYPE_PROPERTY_VALUE_STRUCT</link>
#define             <link linkend="TP-TYPE-PROPERTY-VALUE-LIST:CAPS">TP_TYPE_PROPERTY_VALUE_LIST</link>
#define             <link linkend="TP-TYPE-PROPERTY-FLAGS-STRUCT:CAPS">TP_TYPE_PROPERTY_FLAGS_STRUCT</link>
#define             <link linkend="TP-TYPE-PROPERTY-FLAGS-LIST:CAPS">TP_TYPE_PROPERTY_FLAGS_LIST</link>
</synopsis>
</refsynopsisdiv>









<refsect1 id="telepathy-glib-TpPropertiesMixin.description" role="desc">
<title role="desc.title">Description</title>
<para>
This mixin can be added to any GObject class to implement the properties
interface in a general way.
</para>
<para>
To use the properties mixin, include a <link linkend="TpPropertiesMixinClass"><type>TpPropertiesMixinClass</type></link> somewhere
in your class structure and a <link linkend="TpPropertiesMixin"><type>TpPropertiesMixin</type></link> somewhere in your
instance structure, and call <link linkend="tp-properties-mixin-class-init"><function>tp_properties_mixin_class_init()</function></link> from your
class_init function, <link linkend="tp-properties-mixin-init"><function>tp_properties_mixin_init()</function></link> from your init function
or constructor, and <link linkend="tp-properties-mixin-finalize"><function>tp_properties_mixin_finalize()</function></link> from your dispose
or finalize function.
</para>
<para>
To use the properties mixin as the implementation of
<link linkend="TpSvcPropertiesInterface"><type>TpSvcPropertiesInterface</type></link>, call
<literal>G_IMPLEMENT_INTERFACE (TP_TYPE_SVC_PROPERTIES_INTERFACE,
tp_properties_mixin_iface_init)</literal> in the fourth argument to
<literal>G_DEFINE_TYPE_WITH_CODE</literal>.</para>
<para>

</para>
</refsect1>

<refsect1 id="telepathy-glib-TpPropertiesMixin.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="TpPropertySignature" role="struct">
<title>TpPropertySignature</title>
<indexterm zone="TpPropertySignature"><primary>TpPropertySignature</primary></indexterm><programlisting>typedef struct {
    gchar *name;
    GType type;
} TpPropertySignature;
</programlisting>
<para>
Signature of a property in the Telepathy properties interface.</para>
<para>

</para><variablelist role="struct">
<varlistentry>
<term><link linkend="gchar">gchar</link>&nbsp;*<structfield>name</structfield>;</term>
<listitem><simpara> Name of the property as seen in the Telepathy D-Bus protocol
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="GType">GType</link>&nbsp;<structfield>type</structfield>;</term>
<listitem><simpara> GType which the variant value must have. We currently support
 only <link linkend="G-TYPE-UINT:CAPS"><literal>G_TYPE_UINT</literal></link>, <link linkend="G-TYPE-INT:CAPS"><literal>G_TYPE_INT</literal></link>, <link linkend="G-TYPE-STRING:CAPS"><literal>G_TYPE_STRING</literal></link>, <link linkend="G-TYPE-BOOLEAN:CAPS"><literal>G_TYPE_BOOLEAN</literal></link>,
 corresponding to D-Bus signatures 'u', 'i', 's', 'b'.
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2 id="TpProperty" role="struct">
<title>TpProperty</title>
<indexterm zone="TpProperty"><primary>TpProperty</primary></indexterm><programlisting>typedef struct {
    /* FIXME: if we ever break ABI, make this a (GValue) rather than a
     * (GValue *) */
    GValue *value;
    guint flags;
} TpProperty;
</programlisting>
<para>
Structure representing the current state of a property.</para>
<para>

</para><variablelist role="struct">
<varlistentry>
<term><link linkend="GValue">GValue</link>&nbsp;*<structfield>value</structfield>;</term>
<listitem><simpara> The value of the property
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="guint">guint</link>&nbsp;<structfield>flags</structfield>;</term>
<listitem><simpara> <link linkend="TpPropertyFlags"><type>TpPropertyFlags</type></link> indicating the property's permissions
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2 id="TpPropertiesContext" role="struct">
<title>TpPropertiesContext</title>
<indexterm zone="TpPropertiesContext"><primary>TpPropertiesContext</primary></indexterm><programlisting>typedef struct _TpPropertiesContext TpPropertiesContext;</programlisting>
<para>
Opaque pointer representing an incomplete property-setting operation, used
in the implementation of SetProperties.</para>
<para>

</para></refsect2>
<refsect2 id="TpPropertiesSetFunc" role="function">
<title>TpPropertiesSetFunc ()</title>
<indexterm zone="TpPropertiesSetFunc"><primary>TpPropertiesSetFunc</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            (*TpPropertiesSetFunc)              (<link linkend="GObject">GObject</link> *obj,
                                                         <link linkend="TpPropertiesContext">TpPropertiesContext</link> *ctx,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>
A callback used to implement the SetProperties D-Bus method by setting
properties in the underlying IM protocol.
</para>
<para>
The callback must either:
</para>
<para>
* return <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> to indicate immediate failure
* call <link linkend="tp-properties-context-return"><function>tp_properties_context_return()</function></link> with an error to indicate failure
* call <link linkend="tp-properties-context-remove"><function>tp_properties_context_remove()</function></link> to remove each property from the set
  of pending properties, then call <link linkend="tp-properties-context-return-if-done"><function>tp_properties_context_return_if_done()</function></link>
  or <link linkend="tp-properties-context-return"><function>tp_properties_context_return()</function></link> when all were set</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&nbsp;:</term>
<listitem><simpara> An object with the properties mixin
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ctx</parameter>&nbsp;:</term>
<listitem><simpara> A properties context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara> Set to the error if <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> is returned
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> on immediate failure, <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> otherwise
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="TpPropertiesMixin" role="struct">
<title>TpPropertiesMixin</title>
<indexterm zone="TpPropertiesMixin"><primary>TpPropertiesMixin</primary></indexterm><programlisting>typedef struct {
    TpProperty *properties;

    TpPropertiesMixinPrivate *priv;
} TpPropertiesMixin;
</programlisting>
<para>
Structure to be placed in a GObject-derived structure containing
instance data for the properties mixin (i.e. the properties). Initialize
it using <link linkend="tp-properties-mixin-init"><function>tp_properties_mixin_init()</function></link>.</para>
<para>

</para><variablelist role="struct">
<varlistentry>
<term><link linkend="TpProperty">TpProperty</link>&nbsp;*<structfield>properties</structfield>;</term>
<listitem><simpara> Array of property values, of length klass->num_props.
 Should be considered read-only.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="TpPropertiesMixinPrivate">TpPropertiesMixinPrivate</link>&nbsp;*<structfield>priv</structfield>;</term>
<listitem><simpara> Pointer to opaque private data.
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2 id="TpPropertiesMixinClass" role="struct">
<title>TpPropertiesMixinClass</title>
<indexterm zone="TpPropertiesMixinClass"><primary>TpPropertiesMixinClass</primary></indexterm><programlisting>typedef struct {
  const TpPropertySignature *signatures;
  guint num_props;

  TpPropertiesSetFunc set_properties;

  TpPropertiesMixinClassPrivate *priv;
} TpPropertiesMixinClass;
</programlisting>
<para>
Structure to be placed in a GObjectClass-derived structure containing
settings for the properties mixin. Initialize it using
<link linkend="tp-properties-mixin-class-init"><function>tp_properties_mixin_class_init()</function></link>.
</para>
<para>
All fields should be considered read-only.</para>
<para>

</para><variablelist role="struct">
<varlistentry>
<term>const&nbsp;<link linkend="TpPropertySignature">TpPropertySignature</link>&nbsp;*<structfield>signatures</structfield>;</term>
<listitem><simpara> Array of property signatures, as provided via
 <link linkend="tp-properties-mixin-class-init"><function>tp_properties_mixin_class_init()</function></link>, of length <parameter>num_props</parameter>.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="guint">guint</link>&nbsp;<structfield>num_props</structfield>;</term>
<listitem><simpara> Number of properties supported.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="TpPropertiesSetFunc">TpPropertiesSetFunc</link>&nbsp;<structfield>set_properties</structfield>;</term>
<listitem><simpara> Properties setting function, as supplied to
 <link linkend="tp-properties-mixin-class-init"><function>tp_properties_mixin_class_init()</function></link>.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="TpPropertiesMixinClassPrivate">TpPropertiesMixinClassPrivate</link>&nbsp;*<structfield>priv</structfield>;</term>
<listitem><simpara> Pointer to opaque private data.
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-properties-mixin-class-init" role="function">
<title>tp_properties_mixin_class_init ()</title>
<indexterm zone="tp-properties-mixin-class-init"><primary>tp_properties_mixin_class_init</primary></indexterm><programlisting><link linkend="void">void</link>                tp_properties_mixin_class_init      (<link linkend="GObjectClass">GObjectClass</link> *obj_cls,
                                                         <link linkend="glong">glong</link> offset,
                                                         const <link linkend="TpPropertySignature">TpPropertySignature</link> *signatures,
                                                         <link linkend="guint">guint</link> num_properties,
                                                         <link linkend="TpPropertiesSetFunc">TpPropertiesSetFunc</link> set_func);</programlisting>
<para>
Initialize the mixin. Should be called from the implementation's
class_init function like so:
</para>
<para>
<informalexample><programlisting>
tp_properties_mixin_class_init ((GObjectClass *)klass,
                                G_STRUCT_OFFSET (SomeObjectClass,
                                 properties_mixin));
</programlisting></informalexample></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>obj_cls</parameter>&nbsp;:</term>
<listitem><simpara> The class of an object that has this mixin
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>offset</parameter>&nbsp;:</term>
<listitem><simpara> The offset of the TpPropertiesMixinClass structure in the class
         structure
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>signatures</parameter>&nbsp;:</term>
<listitem><simpara> An array of property signatures
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>num_properties</parameter>&nbsp;:</term>
<listitem><simpara> The number of entries in <parameter>signatures</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>set_func</parameter>&nbsp;:</term>
<listitem><simpara> Callback used to set the properties
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-properties-mixin-init" role="function">
<title>tp_properties_mixin_init ()</title>
<indexterm zone="tp-properties-mixin-init"><primary>tp_properties_mixin_init</primary></indexterm><programlisting><link linkend="void">void</link>                tp_properties_mixin_init            (<link linkend="GObject">GObject</link> *obj,
                                                         <link linkend="glong">glong</link> offset);</programlisting>
<para>
Initialize the mixin. Should be called from the implementation's
instance init function like so:
</para>
<para>
<informalexample><programlisting>
tp_properties_mixin_init ((GObject *)self,
                          G_STRUCT_OFFSET (SomeObject, properties_mixin),
                          self->contact_repo);
</programlisting></informalexample></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&nbsp;:</term>
<listitem><simpara> An object that has this mixin
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>offset</parameter>&nbsp;:</term>
<listitem><simpara> The offset of the TpPropertiesMixin structure in the object
         structure
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-properties-mixin-finalize" role="function">
<title>tp_properties_mixin_finalize ()</title>
<indexterm zone="tp-properties-mixin-finalize"><primary>tp_properties_mixin_finalize</primary></indexterm><programlisting><link linkend="void">void</link>                tp_properties_mixin_finalize        (<link linkend="GObject">GObject</link> *obj);</programlisting>
<para>
Free memory used by the TpPropertiesMixin.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&nbsp;:</term>
<listitem><simpara> An object that has this mixin
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-properties-mixin-list-properties" role="function">
<title>tp_properties_mixin_list_properties ()</title>
<indexterm zone="tp-properties-mixin-list-properties"><primary>tp_properties_mixin_list_properties</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            tp_properties_mixin_list_properties (<link linkend="GObject">GObject</link> *obj,
                                                         <link linkend="GPtrArray">GPtrArray</link> **ret,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>
List all available properties and their flags, as in the ListProperties
D-Bus method.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&nbsp;:</term>
<listitem><simpara> An object with this mixin
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> Output parameter which will be set to a GPtrArray of D-Bus structures
      if <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> is returned
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara> Set to the error if <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> is returned
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> on success
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-properties-mixin-get-properties" role="function">
<title>tp_properties_mixin_get_properties ()</title>
<indexterm zone="tp-properties-mixin-get-properties"><primary>tp_properties_mixin_get_properties</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            tp_properties_mixin_get_properties  (<link linkend="GObject">GObject</link> *obj,
                                                         const <link linkend="GArray">GArray</link> *properties,
                                                         <link linkend="GPtrArray">GPtrArray</link> **ret,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>
Retrieve the values of the given properties, as in the GetProperties
D-Bus method.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&nbsp;:</term>
<listitem><simpara> An object with this mixin
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>properties</parameter>&nbsp;:</term>
<listitem><simpara> an array of integer property IDs
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> set to an array of D-Bus structures if <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> is returned
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara> Set to the error if <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> is returned
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> on success
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-properties-mixin-set-properties" role="function">
<title>tp_properties_mixin_set_properties ()</title>
<indexterm zone="tp-properties-mixin-set-properties"><primary>tp_properties_mixin_set_properties</primary></indexterm><programlisting><link linkend="void">void</link>                tp_properties_mixin_set_properties  (<link linkend="GObject">GObject</link> *obj,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *properties,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Start to change properties in response to user request via D-Bus.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&nbsp;:</term>
<listitem><simpara> An object with this mixin
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>properties</parameter>&nbsp;:</term>
<listitem><simpara> An array of D-Bus structures containing property ID and value
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> A D-Bus method invocation context for the SetProperties method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-properties-mixin-has-property" role="function">
<title>tp_properties_mixin_has_property ()</title>
<indexterm zone="tp-properties-mixin-has-property"><primary>tp_properties_mixin_has_property</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            tp_properties_mixin_has_property    (<link linkend="GObject">GObject</link> *obj,
                                                         const <link linkend="gchar">gchar</link> *name,
                                                         <link linkend="guint">guint</link> *property);</programlisting>
<para>
<!--Returns: says it all; this comment is to keep gtkdoc happy--></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&nbsp;:</term>
<listitem><simpara> an object with a properties mixin
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara> the string name of the property
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>property</parameter>&nbsp;:</term>
<listitem><simpara> either <link linkend="NULL:CAPS"><literal>NULL</literal></link>, or a pointer to a location to receive the property
           index
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link>, setting <parameter>property</parameter>, if <parameter>obj</parameter> has a property of that name
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-properties-context-has" role="function">
<title>tp_properties_context_has ()</title>
<indexterm zone="tp-properties-context-has"><primary>tp_properties_context_has</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            tp_properties_context_has           (<link linkend="TpPropertiesContext">TpPropertiesContext</link> *ctx,
                                                         <link linkend="guint">guint</link> property);</programlisting>
<para>
<!--Returns: says it all; this comment is to keep gtkdoc happy--></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ctx</parameter>&nbsp;:</term>
<listitem><simpara> the properties context representing a SetProperties call
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>property</parameter>&nbsp;:</term>
<listitem><simpara> the property ID
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if <parameter>ctx</parameter> indicates that <parameter>property</parameter> still needs to be set on
the server.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-properties-context-has-other-than" role="function">
<title>tp_properties_context_has_other_than ()</title>
<indexterm zone="tp-properties-context-has-other-than"><primary>tp_properties_context_has_other_than</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            tp_properties_context_has_other_than
                                                        (<link linkend="TpPropertiesContext">TpPropertiesContext</link> *ctx,
                                                         <link linkend="guint">guint</link> property);</programlisting>
<para>
<!--Returns: says it all; this comment is to keep gtkdoc happy--></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ctx</parameter>&nbsp;:</term>
<listitem><simpara> the properties context representing a SetProperties call
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>property</parameter>&nbsp;:</term>
<listitem><simpara> the property ID
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if <parameter>ctx</parameter> has properties other than <parameter>property</parameter> that still
need to be set on the server
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-properties-context-get" role="function">
<title>tp_properties_context_get ()</title>
<indexterm zone="tp-properties-context-get"><primary>tp_properties_context_get</primary></indexterm><programlisting>const <link linkend="GValue">GValue</link>*       tp_properties_context_get           (<link linkend="TpPropertiesContext">TpPropertiesContext</link> *ctx,
                                                         <link linkend="guint">guint</link> property);</programlisting>
<para>
<!--Returns: says it all; this comment is to keep gtkdoc happy--></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ctx</parameter>&nbsp;:</term>
<listitem><simpara> the properties context representing a SetProperties call
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>property</parameter>&nbsp;:</term>
<listitem><simpara> a property ID
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the value to be set on the server for the property <parameter>property</parameter>
in <parameter>ctx</parameter> (whether it has been set already or not)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-properties-context-get-value-count" role="function">
<title>tp_properties_context_get_value_count ()</title>
<indexterm zone="tp-properties-context-get-value-count"><primary>tp_properties_context_get_value_count</primary></indexterm><programlisting><link linkend="guint">guint</link>               tp_properties_context_get_value_count
                                                        (<link linkend="TpPropertiesContext">TpPropertiesContext</link> *ctx);</programlisting>
<para>
<!--Returns: says it all; this comment is to keep gtkdoc happy--></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ctx</parameter>&nbsp;:</term>
<listitem><simpara> the properties context representing a SetProperties call
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the number of properties in <parameter>ctx</parameter> which still need to be set on
         the server, or have already been set
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-properties-context-remove" role="function">
<title>tp_properties_context_remove ()</title>
<indexterm zone="tp-properties-context-remove"><primary>tp_properties_context_remove</primary></indexterm><programlisting><link linkend="void">void</link>                tp_properties_context_remove        (<link linkend="TpPropertiesContext">TpPropertiesContext</link> *ctx,
                                                         <link linkend="guint">guint</link> property);</programlisting>
<para>
Mark the given property as having been set successfully.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ctx</parameter>&nbsp;:</term>
<listitem><simpara> the properties context representing a SetProperties call
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>property</parameter>&nbsp;:</term>
<listitem><simpara> a property ID
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-properties-context-return" role="function">
<title>tp_properties_context_return ()</title>
<indexterm zone="tp-properties-context-return"><primary>tp_properties_context_return</primary></indexterm><programlisting><link linkend="void">void</link>                tp_properties_context_return        (<link linkend="TpPropertiesContext">TpPropertiesContext</link> *ctx,
                                                         <link linkend="GError">GError</link> *error);</programlisting>
<para>
Commit the property changes and return from the pending D-Bus call.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ctx</parameter>&nbsp;:</term>
<listitem><simpara> the properties context representing a SetProperties call
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara> If <link linkend="NULL:CAPS"><literal>NULL</literal></link>, return successfully; otherwise return this error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-properties-context-return-if-done" role="function">
<title>tp_properties_context_return_if_done ()</title>
<indexterm zone="tp-properties-context-return-if-done"><primary>tp_properties_context_return_if_done</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            tp_properties_context_return_if_done
                                                        (<link linkend="TpPropertiesContext">TpPropertiesContext</link> *ctx);</programlisting>
<para>
Return from the pending D-Bus call if there are no more properties to be
dealt with.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ctx</parameter>&nbsp;:</term>
<listitem><simpara> the properties context representing a SetProperties call
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if we returned from the D-Bus call.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-properties-mixin-change-value" role="function">
<title>tp_properties_mixin_change_value ()</title>
<indexterm zone="tp-properties-mixin-change-value"><primary>tp_properties_mixin_change_value</primary></indexterm><programlisting><link linkend="void">void</link>                tp_properties_mixin_change_value    (<link linkend="GObject">GObject</link> *obj,
                                                         <link linkend="guint">guint</link> prop_id,
                                                         const <link linkend="GValue">GValue</link> *new_value,
                                                         <link linkend="TpIntSet">TpIntSet</link> *props);</programlisting>
<para>
Change the value of the given property ID in response to a server state
change.
</para>
<para>
If the old and new values match, nothing happens; no signal is emitted and
<parameter>props</parameter> is ignored. Otherwise, the following applies:
</para>
<para>
If <parameter>props</parameter> is <link linkend="NULL:CAPS"><literal>NULL</literal></link> the PropertiesChanged signal is emitted for this one
property.
</para>
<para>
Otherwise, the property ID is added to the set; the caller is responsible
for passing the set to <link linkend="tp-properties-mixin-emit-changed"><function>tp_properties_mixin_emit_changed()</function></link> once a batch of
properties have been changed.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&nbsp;:</term>
<listitem><simpara> An object with the properties mixin
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>prop_id</parameter>&nbsp;:</term>
<listitem><simpara> A property ID on which to act
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>new_value</parameter>&nbsp;:</term>
<listitem><simpara> Property value
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>props</parameter>&nbsp;:</term>
<listitem><simpara> either <link linkend="NULL:CAPS"><literal>NULL</literal></link>, or a pointer to a TpIntSet
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-properties-mixin-change-flags" role="function">
<title>tp_properties_mixin_change_flags ()</title>
<indexterm zone="tp-properties-mixin-change-flags"><primary>tp_properties_mixin_change_flags</primary></indexterm><programlisting><link linkend="void">void</link>                tp_properties_mixin_change_flags    (<link linkend="GObject">GObject</link> *obj,
                                                         <link linkend="guint">guint</link> prop_id,
                                                         <link linkend="TpPropertyFlags">TpPropertyFlags</link> add,
                                                         <link linkend="TpPropertyFlags">TpPropertyFlags</link> del,
                                                         <link linkend="TpIntSet">TpIntSet</link> *props);</programlisting>
<para>
Change the flags for the given property ID in response to a server state
change.
</para>
<para>
Flags removed by <parameter>del</parameter> override flags added by <parameter>add</parameter>. This should not be
relied upon.
</para>
<para>
If <parameter>props</parameter> is <link linkend="NULL:CAPS"><literal>NULL</literal></link> the PropertyFlagsChanged signal is emitted for this
single property.
</para>
<para>
Otherwise, the property ID is added to the set; the caller is responsible
for passing the set to <link linkend="tp-properties-mixin-emit-flags"><function>tp_properties_mixin_emit_flags()</function></link> once a batch of
properties have been changed.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&nbsp;:</term>
<listitem><simpara> An object with the properties mixin
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>prop_id</parameter>&nbsp;:</term>
<listitem><simpara> A property ID on which to act
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>add</parameter>&nbsp;:</term>
<listitem><simpara> Property flags to be added via bitwise OR
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>del</parameter>&nbsp;:</term>
<listitem><simpara> Property flags to be removed via bitwise AND
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>props</parameter>&nbsp;:</term>
<listitem><simpara> either <link linkend="NULL:CAPS"><literal>NULL</literal></link>, or a pointer to a TpIntSet
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-properties-mixin-emit-changed" role="function">
<title>tp_properties_mixin_emit_changed ()</title>
<indexterm zone="tp-properties-mixin-emit-changed"><primary>tp_properties_mixin_emit_changed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_properties_mixin_emit_changed    (<link linkend="GObject">GObject</link> *obj,
                                                         const <link linkend="TpIntSet">TpIntSet</link> *props);</programlisting>
<para>
Emit the PropertiesChanged signal to indicate that the values of the
given property IDs have changed; the actual values are automatically
added using their stored values.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&nbsp;:</term>
<listitem><simpara> an object with the properties mixin
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>props</parameter>&nbsp;:</term>
<listitem><simpara> a set of property IDs
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-properties-mixin-emit-flags" role="function">
<title>tp_properties_mixin_emit_flags ()</title>
<indexterm zone="tp-properties-mixin-emit-flags"><primary>tp_properties_mixin_emit_flags</primary></indexterm><programlisting><link linkend="void">void</link>                tp_properties_mixin_emit_flags      (<link linkend="GObject">GObject</link> *obj,
                                                         const <link linkend="TpIntSet">TpIntSet</link> *props);</programlisting>
<para>
Emit the PropertyFlagsChanged signal to indicate that the flags of the
given property IDs have changed; the actual flags are automatically
added using their stored values.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&nbsp;:</term>
<listitem><simpara> an object with the properties mixin
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>props</parameter>&nbsp;:</term>
<listitem><simpara> a set of property IDs
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-properties-mixin-is-readable" role="function">
<title>tp_properties_mixin_is_readable ()</title>
<indexterm zone="tp-properties-mixin-is-readable"><primary>tp_properties_mixin_is_readable</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            tp_properties_mixin_is_readable     (<link linkend="GObject">GObject</link> *obj,
                                                         <link linkend="guint">guint</link> prop_id);</programlisting>
<para>
<!--Returns: says it all; this comment is to keep gtkdoc happy--></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&nbsp;:</term>
<listitem><simpara> an object with this mixin
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>prop_id</parameter>&nbsp;:</term>
<listitem><simpara> an integer property ID
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the given property has the READ flag
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-properties-mixin-is-writable" role="function">
<title>tp_properties_mixin_is_writable ()</title>
<indexterm zone="tp-properties-mixin-is-writable"><primary>tp_properties_mixin_is_writable</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            tp_properties_mixin_is_writable     (<link linkend="GObject">GObject</link> *obj,
                                                         <link linkend="guint">guint</link> prop_id);</programlisting>
<para>
<!--Returns: says it all; this comment is to keep gtkdoc happy--></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&nbsp;:</term>
<listitem><simpara> an object with this mixin
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>prop_id</parameter>&nbsp;:</term>
<listitem><simpara> an integer property ID
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the given property has the WRITE flag
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-properties-mixin-iface-init" role="function">
<title>tp_properties_mixin_iface_init ()</title>
<indexterm zone="tp-properties-mixin-iface-init"><primary>tp_properties_mixin_iface_init</primary></indexterm><programlisting><link linkend="void">void</link>                tp_properties_mixin_iface_init      (<link linkend="gpointer">gpointer</link> g_iface,
                                                         <link linkend="gpointer">gpointer</link> iface_data);</programlisting>
<para>
Fill in this mixin's method implementations in the given interface vtable.
This function should usually be called via G_IMPLEMENT_INTERFACE
inside the G_DEFINE_TYPE_WITH_CODE macro.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>g_iface</parameter>&nbsp;:</term>
<listitem><simpara> A pointer to the <link linkend="TpSvcPropertiesInterfaceClass"><type>TpSvcPropertiesInterfaceClass</type></link> in an object class
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>iface_data</parameter>&nbsp;:</term>
<listitem><simpara> Ignored
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="TP-TYPE-PROPERTY-INFO-STRUCT:CAPS" role="macro">
<title>TP_TYPE_PROPERTY_INFO_STRUCT</title>
<indexterm zone="TP-TYPE-PROPERTY-INFO-STRUCT:CAPS"><primary>TP_TYPE_PROPERTY_INFO_STRUCT</primary></indexterm><programlisting>#define TP_TYPE_PROPERTY_INFO_STRUCT TP_STRUCT_TYPE_PROPERTY_SPEC
</programlisting>
<para>
The GType of the structures with D-Bus signature '(ussu)' returned by
ListProperties.
</para>
<para>
<parameter>Deprecated</parameter>: Since 0.7.0. Use TP_STRUCT_TYPE_PROPERTY_SPEC instead.</para>
<para>

</para></refsect2>
<refsect2 id="TP-TYPE-PROPERTY-INFO-LIST:CAPS" role="macro">
<title>TP_TYPE_PROPERTY_INFO_LIST</title>
<indexterm zone="TP-TYPE-PROPERTY-INFO-LIST:CAPS"><primary>TP_TYPE_PROPERTY_INFO_LIST</primary></indexterm><programlisting>#define TP_TYPE_PROPERTY_INFO_LIST TP_ARRAY_TYPE_PROPERTY_SPEC_LIST
</programlisting>
<para>
The GType of the return from ListProperties (i.e. a GPtrArray
of structures of type TP_TYPE_PROPERTY_INFO_STRUCT), corresponding to
D-Bus signature 'a(ussu)'.
</para>
<para>
<parameter>Deprecated</parameter>: Since 0.7.0. Use TP_ARRAY_TYPE_PROPERTY_SPEC_LIST instead.</para>
<para>

</para></refsect2>
<refsect2 id="TP-TYPE-PROPERTY-VALUE-STRUCT:CAPS" role="macro">
<title>TP_TYPE_PROPERTY_VALUE_STRUCT</title>
<indexterm zone="TP-TYPE-PROPERTY-VALUE-STRUCT:CAPS"><primary>TP_TYPE_PROPERTY_VALUE_STRUCT</primary></indexterm><programlisting>#define TP_TYPE_PROPERTY_VALUE_STRUCT TP_STRUCT_TYPE_PROPERTY_VALUE
</programlisting>
<para>
The GType of the structures with signature '(uv)' returned by
GetProperties and emitted in PropertiesChanged.
</para>
<para>
<parameter>Deprecated</parameter>: Since 0.7.0. Use TP_STRUCT_TYPE_PROPERTY_VALUE instead.</para>
<para>

</para></refsect2>
<refsect2 id="TP-TYPE-PROPERTY-VALUE-LIST:CAPS" role="macro">
<title>TP_TYPE_PROPERTY_VALUE_LIST</title>
<indexterm zone="TP-TYPE-PROPERTY-VALUE-LIST:CAPS"><primary>TP_TYPE_PROPERTY_VALUE_LIST</primary></indexterm><programlisting>#define TP_TYPE_PROPERTY_VALUE_LIST TP_ARRAY_TYPE_PROPERTY_VALUE_LIST
</programlisting>
<para>
The GType of the return from GetProperties and the parameter to
PropertiesChanged (i.e. a GPtrArray of structures of type
TP_TYPE_PROPERTY_VALUE_STRUCT), corresponding to D-Bus signature 'a(uv)'.
</para>
<para>
<parameter>Deprecated</parameter>: Since 0.7.0. Use TP_ARRAY_TYPE_PROPERTY_VALUE_LIST instead.</para>
<para>

</para></refsect2>
<refsect2 id="TP-TYPE-PROPERTY-FLAGS-STRUCT:CAPS" role="macro">
<title>TP_TYPE_PROPERTY_FLAGS_STRUCT</title>
<indexterm zone="TP-TYPE-PROPERTY-FLAGS-STRUCT:CAPS"><primary>TP_TYPE_PROPERTY_FLAGS_STRUCT</primary></indexterm><programlisting>#define TP_TYPE_PROPERTY_FLAGS_STRUCT TP_STRUCT_TYPE_PROPERTY_FLAGS_CHANGE
</programlisting>
<para>
The GType of the structures with D-Bus signature '(uu)' emitted in
PropertyFlagsChanged.
</para>
<para>
<parameter>Deprecated</parameter>: Since 0.7.0. Use TP_STRUCT_TYPE_PROPERTY_FLAGS_CHANGE instead.</para>
<para>

</para></refsect2>
<refsect2 id="TP-TYPE-PROPERTY-FLAGS-LIST:CAPS" role="macro">
<title>TP_TYPE_PROPERTY_FLAGS_LIST</title>
<indexterm zone="TP-TYPE-PROPERTY-FLAGS-LIST:CAPS"><primary>TP_TYPE_PROPERTY_FLAGS_LIST</primary></indexterm><programlisting>#define TP_TYPE_PROPERTY_FLAGS_LIST TP_ARRAY_TYPE_PROPERTY_FLAGS_CHANGE_LIST
</programlisting>
<para>
The GType of the parameter to PropertyFlagsChanged (i.e. a GPtrArray of
structures of type TP_TYPE_PROPERTY_FLAGS_STRUCT), corresponding to
D-Bus signature 'a(uu)'.
</para>
<para>
<parameter>Deprecated</parameter>: Since 0.7.0. Use TP_ARRAY_TYPE_PROPERTY_FLAGS_CHANGE_LIST
 instead.</para>
<para>

</para></refsect2>

</refsect1>



<refsect1 id="telepathy-glib-TpPropertiesMixin.see-also">
<title>See Also</title>
<link linkend="TpSvcPropertiesInterface"><type>TpSvcPropertiesInterface</type></link>
</refsect1>

</refentry>

<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="telepathy-glib-connection-caps">
<refmeta>
<refentrytitle role="top_of_page" id="telepathy-glib-connection-caps.top_of_page">Connection ContactCapabilities and Capabilities interfaces</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>TELEPATHY-GLIB Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>Connection ContactCapabilities and Capabilities interfaces</refname>
<refpurpose>client-side wrappers for the capabilities interfaces</refpurpose>
</refnamediv>

<refsynopsisdiv id="telepathy-glib-connection-caps.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>

#include &lt;telepathy-glib/connection.h&gt;

<link linkend="void">void</link>                (<link linkend="tp-cli-connection-interface-contact-capabilities-callback-for-get-contact-capabilities">*tp_cli_connection_interface_contact_capabilities_callback_for_get_contact_capabilities</link>)
                                                        (<link linkend="TpConnection">TpConnection</link> *proxy,
                                                         <link linkend="GHashTable">GHashTable</link> *out_Contact_Capabilities,
                                                         const <link linkend="GError">GError</link> *error,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);
<link linkend="TpProxyPendingCall">TpProxyPendingCall</link> * <link linkend="tp-cli-connection-interface-contact-capabilities-call-get-contact-capabilities">tp_cli_connection_interface_contact_capabilities_call_get_contact_capabilities</link>
                                                        (<link linkend="TpConnection">TpConnection</link> *proxy,
                                                         <link linkend="gint">gint</link> timeout_ms,
                                                         const <link linkend="GArray">GArray</link> *in_handles,
                                                         <link linkend="tp-cli-connection-interface-contact-capabilities-callback-for-get-contact-capabilities">tp_cli_connection_interface_contact_capabilities_callback_for_get_contact_capabilities</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object);
<link linkend="void">void</link>                (<link linkend="tp-cli-connection-interface-contact-capabilities-callback-for-update-capabilities">*tp_cli_connection_interface_contact_capabilities_callback_for_update_capabilities</link>)
                                                        (<link linkend="TpConnection">TpConnection</link> *proxy,
                                                         const <link linkend="GError">GError</link> *error,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);
<link linkend="TpProxyPendingCall">TpProxyPendingCall</link> * <link linkend="tp-cli-connection-interface-contact-capabilities-call-update-capabilities">tp_cli_connection_interface_contact_capabilities_call_update_capabilities</link>
                                                        (<link linkend="TpConnection">TpConnection</link> *proxy,
                                                         <link linkend="gint">gint</link> timeout_ms,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *in_Handler_Capabilities,
                                                         <link linkend="tp-cli-connection-interface-contact-capabilities-callback-for-update-capabilities">tp_cli_connection_interface_contact_capabilities_callback_for_update_capabilities</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object);
<link linkend="void">void</link>                (<link linkend="tp-cli-connection-interface-contact-capabilities-signal-callback-contact-capabilities-changed">*tp_cli_connection_interface_contact_capabilities_signal_callback_contact_capabilities_changed</link>)
                                                        (<link linkend="TpConnection">TpConnection</link> *proxy,
                                                         <link linkend="GHashTable">GHashTable</link> *arg_caps,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);
<link linkend="TpProxySignalConnection">TpProxySignalConnection</link> * <link linkend="tp-cli-connection-interface-contact-capabilities-connect-to-contact-capabilities-changed">tp_cli_connection_interface_contact_capabilities_connect_to_contact_capabilities_changed</link>
                                                        (<link linkend="TpConnection">TpConnection</link> *proxy,
                                                         <link linkend="tp-cli-connection-interface-contact-capabilities-signal-callback-contact-capabilities-changed">tp_cli_connection_interface_contact_capabilities_signal_callback_contact_capabilities_changed</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object,
                                                         <link linkend="GError">GError</link> **error);


<link linkend="TpProxyPendingCall">TpProxyPendingCall</link> * <link linkend="tp-cli-connection-interface-capabilities-call-advertise-capabilities">tp_cli_connection_interface_capabilities_call_advertise_capabilities</link>
                                                        (<link linkend="TpConnection">TpConnection</link> *proxy,
                                                         <link linkend="gint">gint</link> timeout_ms,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *in_Add,
                                                         const <link linkend="gchar">gchar</link> **in_Remove,
                                                         <link linkend="tp-cli-connection-interface-capabilities-callback-for-advertise-capabilities">tp_cli_connection_interface_capabilities_callback_for_advertise_capabilities</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object);
<link linkend="TpProxyPendingCall">TpProxyPendingCall</link> * <link linkend="tp-cli-connection-interface-capabilities-call-get-capabilities">tp_cli_connection_interface_capabilities_call_get_capabilities</link>
                                                        (<link linkend="TpConnection">TpConnection</link> *proxy,
                                                         <link linkend="gint">gint</link> timeout_ms,
                                                         const <link linkend="GArray">GArray</link> *in_Handles,
                                                         <link linkend="tp-cli-connection-interface-capabilities-callback-for-get-capabilities">tp_cli_connection_interface_capabilities_callback_for_get_capabilities</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object);
<link linkend="void">void</link>                (<link linkend="tp-cli-connection-interface-capabilities-callback-for-advertise-capabilities">*tp_cli_connection_interface_capabilities_callback_for_advertise_capabilities</link>)
                                                        (<link linkend="TpConnection">TpConnection</link> *proxy,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *out_Self_Capabilities,
                                                         const <link linkend="GError">GError</link> *error,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);
<link linkend="void">void</link>                (<link linkend="tp-cli-connection-interface-capabilities-callback-for-get-capabilities">*tp_cli_connection_interface_capabilities_callback_for_get_capabilities</link>)
                                                        (<link linkend="TpConnection">TpConnection</link> *proxy,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *out_Contact_Capabilities,
                                                         const <link linkend="GError">GError</link> *error,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);
<link linkend="TpProxySignalConnection">TpProxySignalConnection</link> * <link linkend="tp-cli-connection-interface-capabilities-connect-to-capabilities-changed">tp_cli_connection_interface_capabilities_connect_to_capabilities_changed</link>
                                                        (<link linkend="TpConnection">TpConnection</link> *proxy,
                                                         <link linkend="tp-cli-connection-interface-capabilities-signal-callback-capabilities-changed">tp_cli_connection_interface_capabilities_signal_callback_capabilities_changed</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object,
                                                         <link linkend="GError">GError</link> **error);
<link linkend="void">void</link>                (<link linkend="tp-cli-connection-interface-capabilities-signal-callback-capabilities-changed">*tp_cli_connection_interface_capabilities_signal_callback_capabilities_changed</link>)
                                                        (<link linkend="TpConnection">TpConnection</link> *proxy,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *arg_Caps,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);
</synopsis>
</refsynopsisdiv>









<refsect1 id="telepathy-glib-connection-caps.description" role="desc">
<title role="desc.title">Description</title>
<para>
Some instant messaging protocols allow discovery of the capabilities of
a user's client. In Telepathy, this is represented by the
ContactCapabilities interface, which lets applications advertise extra
capabilities for the local user, and query the interfaces supported by
their contacts.
</para>
<para>
The Capabilities interface is an older API with similar functionality.
</para>
<para>
This section documents the auto-generated C wrappers for the
ContactCapabilities and Capabilities interfaces, used with
<link linkend="TpConnection"><type>TpConnection</type></link> objects.</para>
<para>
</para>
</refsect1>

<refsect1 id="telepathy-glib-connection-caps.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="tp-cli-connection-interface-contact-capabilities-callback-for-get-contact-capabilities" role="function">
<title>tp_cli_connection_interface_contact_capabilities_callback_for_get_contact_capabilities ()</title>
<indexterm zone="tp-cli-connection-interface-contact-capabilities-callback-for-get-contact-capabilities"><primary sortas="tp_cli_connection_interface_contact_capabilities_callback_for_get_contact_capabilities">tp_cli_connection_interface_contact_capabilities_callback_for_get_contact_capabilities</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_cli_connection_interface_contact_capabilities_callback_for_get_contact_capabilities)
                                                        (<link linkend="TpConnection">TpConnection</link> *proxy,
                                                         <link linkend="GHashTable">GHashTable</link> *out_Contact_Capabilities,
                                                         const <link linkend="GError">GError</link> *error,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);</programlisting>
<para>
Signature of the callback called when a GetContactCapabilities method call
succeeds or fails.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> the proxy on which the call was made
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Contact_Capabilities</parameter>&#160;:</term>
<listitem><simpara> Used to return an 'out' argument if <parameter>error</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>: &lt;tp:docstring xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;           An array of structures containing:           &lt;ul&gt;             &lt;li&gt;a dictionary mapping the channel properties to their values.&lt;/li&gt;             &lt;li&gt;an array of additional allowed properties&lt;/li&gt;           &lt;/ul&gt;
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> <link linkend="NULL--CAPS"><literal>NULL</literal></link> on success, or an error on failure
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> user-supplied data
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> user-supplied object
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-cli-connection-interface-contact-capabilities-call-get-contact-capabilities" role="function">
<title>tp_cli_connection_interface_contact_capabilities_call_get_contact_capabilities ()</title>
<indexterm zone="tp-cli-connection-interface-contact-capabilities-call-get-contact-capabilities"><primary sortas="tp_cli_connection_interface_contact_capabilities_call_get_contact_capabilities">tp_cli_connection_interface_contact_capabilities_call_get_contact_capabilities</primary></indexterm><programlisting><link linkend="TpProxyPendingCall">TpProxyPendingCall</link> * tp_cli_connection_interface_contact_capabilities_call_get_contact_capabilities
                                                        (<link linkend="TpConnection">TpConnection</link> *proxy,
                                                         <link linkend="gint">gint</link> timeout_ms,
                                                         const <link linkend="GArray">GArray</link> *in_handles,
                                                         <link linkend="tp-cli-connection-interface-contact-capabilities-callback-for-get-contact-capabilities">tp_cli_connection_interface_contact_capabilities_callback_for_get_contact_capabilities</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object);</programlisting>
<para>
Start a GetContactCapabilities method call.
</para>
<para>
Returns an array of enhanced capabilities for the given contact handles.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="TpProxy"><type>TpProxy</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>timeout_ms</parameter>&#160;:</term>
<listitem><simpara> the timeout in milliseconds, or -1 to use the
  default
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_handles</parameter>&#160;:</term>
<listitem><simpara> Used to pass an 'in' argument: &lt;tp:docstring xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;           &lt;p&gt;An array of contact handles for this connection.&lt;/p&gt;            &lt;p&gt;The handle zero MUST NOT be included in the request.&lt;/p&gt;
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara> called when the method call succeeds or fails;
  may be <link linkend="NULL--CAPS"><literal>NULL</literal></link> to make a "fire and forget" call with no 
  reply tracking
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> user-supplied data passed to the callback;
  must be <link linkend="NULL--CAPS"><literal>NULL</literal></link> if <parameter>callback</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>destroy</parameter>&#160;:</term>
<listitem><simpara> called with the user_data as argument, after the
  call has succeeded, failed or been cancelled;
  must be <link linkend="NULL--CAPS"><literal>NULL</literal></link> if <parameter>callback</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> If not <link linkend="NULL--CAPS"><literal>NULL</literal></link>, a <link linkend="GObject"><type>GObject</type></link> which will be 
  weakly referenced; if it is destroyed, this call 
  will automatically be cancelled. Must be <link linkend="NULL--CAPS"><literal>NULL</literal></link> if 
  <parameter>callback</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a <link linkend="TpProxyPendingCall"><type>TpProxyPendingCall</type></link> representing the call in
 progress. It is borrowed from the object, and will become
 invalid when the callback is called, the call is
 cancelled or the <link linkend="TpProxy"><type>TpProxy</type></link> becomes invalid.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-cli-connection-interface-contact-capabilities-callback-for-update-capabilities" role="function">
<title>tp_cli_connection_interface_contact_capabilities_callback_for_update_capabilities ()</title>
<indexterm zone="tp-cli-connection-interface-contact-capabilities-callback-for-update-capabilities"><primary sortas="tp_cli_connection_interface_contact_capabilities_callback_for_update_capabilities">tp_cli_connection_interface_contact_capabilities_callback_for_update_capabilities</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_cli_connection_interface_contact_capabilities_callback_for_update_capabilities)
                                                        (<link linkend="TpConnection">TpConnection</link> *proxy,
                                                         const <link linkend="GError">GError</link> *error,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);</programlisting>
<para>
Signature of the callback called when a UpdateCapabilities method call
succeeds or fails.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> the proxy on which the call was made
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> <link linkend="NULL--CAPS"><literal>NULL</literal></link> on success, or an error on failure
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> user-supplied data
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> user-supplied object
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-cli-connection-interface-contact-capabilities-call-update-capabilities" role="function">
<title>tp_cli_connection_interface_contact_capabilities_call_update_capabilities ()</title>
<indexterm zone="tp-cli-connection-interface-contact-capabilities-call-update-capabilities"><primary sortas="tp_cli_connection_interface_contact_capabilities_call_update_capabilities">tp_cli_connection_interface_contact_capabilities_call_update_capabilities</primary></indexterm><programlisting><link linkend="TpProxyPendingCall">TpProxyPendingCall</link> * tp_cli_connection_interface_contact_capabilities_call_update_capabilities
                                                        (<link linkend="TpConnection">TpConnection</link> *proxy,
                                                         <link linkend="gint">gint</link> timeout_ms,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *in_Handler_Capabilities,
                                                         <link linkend="tp-cli-connection-interface-contact-capabilities-callback-for-update-capabilities">tp_cli_connection_interface_contact_capabilities_callback_for_update_capabilities</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object);</programlisting>
<para>
Start a UpdateCapabilities method call.
</para>
<para>
&lt;tp:docstring xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;         &lt;p&gt;Alter the connection&apos;s advertised capabilities to include           the intersection of the given clients&apos; capabilities with what the           connection manager is able to implement.&lt;/p&gt;          &lt;p&gt;On connections managed by the ChannelDispatcher, processes other           than the ChannelDispatcher SHOULD NOT call this method, and the           ChannelDispatcher SHOULD use this method to advertise the           capabilities of all the registered &lt;tp:dbus-ref namespace=&quot;org.freedesktop.Telepathy&quot;&gt;Client.Handler&lt;/tp:dbus-ref&gt;           implementations.On connections not managed by the ChannelDispatcher,           clients MAY use this method directly, to indicate the channels they           will handle and the extra capabilities they have.&lt;/p&gt;          &lt;p&gt;Upon a successful invocation of this method, the connection manager           will only emit the           &lt;tp:member-ref&gt;ContactCapabilitiesChanged&lt;/tp:member-ref&gt; signal           for the user&apos;s &lt;tp:dbus-ref namespace=&quot;org.freedesktop.Telepathy.Connection&quot;&gt;SelfHandle&lt;/tp:dbus-ref&gt;           if, in the underlying protocol, the new capabilities are distinct           from the previous state.&lt;/p&gt;          &lt;tp:rationale&gt;           &lt;p&gt;The connection manager will essentially intersect the provided             capabilities and the channel classes it implements. Therefore,             certain properties which are never fixed for a channel class             (such as the target handle, or the Parameters property of a tube             channel) will almost certainly not be advertised.&lt;/p&gt;         &lt;/tp:rationale&gt;          &lt;p&gt;This method MAY be called on a newly-created connection while it           is still in the DISCONNECTED state, to request that when the           connection connects, it will do so with the appropriate           capabilities. Doing so MUST NOT fail.&lt;/p&gt;</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="TpProxy"><type>TpProxy</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>timeout_ms</parameter>&#160;:</term>
<listitem><simpara> the timeout in milliseconds, or -1 to use the
  default
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Handler_Capabilities</parameter>&#160;:</term>
<listitem><simpara> Used to pass an 'in' argument: &lt;p&gt;The capabilities of one or more clients.&lt;/p&gt;            &lt;p&gt;For each client in the given list, any capabilities previously             advertised for the same client name are discarded, then replaced by             the capabilities indicated.&lt;/p&gt;            &lt;p&gt;As a result, if a client becomes unavailable, this method SHOULD             be called with a &lt;tp:type&gt;Handler_Capabilities&lt;/tp:type&gt; structure             containing its name, an empty list of channel classes, and an             empty list of capabilities. When this is done, the connection             manager SHOULD free all memory associated with that client name.&lt;/p&gt;            &lt;tp:rationale&gt;             &lt;p&gt;This method takes a list of clients so that               when the channel dispatcher first calls it (with a list of all               the Handlers that are initially available), the changes can be               made atomically, with only one transmission of updated               capabilities to the network. Afterwards, the channel dispatcher               will call this method with a single-element list every time               a Handler becomes available or unavailable.&lt;/p&gt;           &lt;/tp:rationale&gt;            &lt;p&gt;The connection manager MUST ignore any channel classes and client             capabilities for which there is no representation in the protocol             or no support in the connection manager.&lt;/p&gt;
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara> called when the method call succeeds or fails;
  may be <link linkend="NULL--CAPS"><literal>NULL</literal></link> to make a "fire and forget" call with no 
  reply tracking
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> user-supplied data passed to the callback;
  must be <link linkend="NULL--CAPS"><literal>NULL</literal></link> if <parameter>callback</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>destroy</parameter>&#160;:</term>
<listitem><simpara> called with the user_data as argument, after the
  call has succeeded, failed or been cancelled;
  must be <link linkend="NULL--CAPS"><literal>NULL</literal></link> if <parameter>callback</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> If not <link linkend="NULL--CAPS"><literal>NULL</literal></link>, a <link linkend="GObject"><type>GObject</type></link> which will be 
  weakly referenced; if it is destroyed, this call 
  will automatically be cancelled. Must be <link linkend="NULL--CAPS"><literal>NULL</literal></link> if 
  <parameter>callback</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a <link linkend="TpProxyPendingCall"><type>TpProxyPendingCall</type></link> representing the call in
 progress. It is borrowed from the object, and will become
 invalid when the callback is called, the call is
 cancelled or the <link linkend="TpProxy"><type>TpProxy</type></link> becomes invalid.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-cli-connection-interface-contact-capabilities-signal-callback-contact-capabilities-changed" role="function">
<title>tp_cli_connection_interface_contact_capabilities_signal_callback_contact_capabilities_changed ()</title>
<indexterm zone="tp-cli-connection-interface-contact-capabilities-signal-callback-contact-capabilities-changed"><primary sortas="tp_cli_connection_interface_contact_capabilities_signal_callback_contact_capabilities_changed">tp_cli_connection_interface_contact_capabilities_signal_callback_contact_capabilities_changed</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_cli_connection_interface_contact_capabilities_signal_callback_contact_capabilities_changed)
                                                        (<link linkend="TpConnection">TpConnection</link> *proxy,
                                                         <link linkend="GHashTable">GHashTable</link> *arg_caps,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);</programlisting>
<para>
Represents the signature of a callback for the signal ContactCapabilitiesChanged.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> The proxy on which <link linkend="tp-cli-connection-interface-contact-capabilities-connect-to-contact-capabilities-changed"><function>tp_cli_connection_interface_contact_capabilities_connect_to_contact_capabilities_changed()</function></link>
 was called
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_caps</parameter>&#160;:</term>
<listitem><simpara> &lt;tp:docstring xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;           All the capabilities of the contacts
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> User-supplied data
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> User-supplied weakly referenced object
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-cli-connection-interface-contact-capabilities-connect-to-contact-capabilities-changed" role="function">
<title>tp_cli_connection_interface_contact_capabilities_connect_to_contact_capabilities_changed ()</title>
<indexterm zone="tp-cli-connection-interface-contact-capabilities-connect-to-contact-capabilities-changed"><primary sortas="tp_cli_connection_interface_contact_capabilities_connect_to_contact_capabilities_changed">tp_cli_connection_interface_contact_capabilities_connect_to_contact_capabilities_changed</primary></indexterm><programlisting><link linkend="TpProxySignalConnection">TpProxySignalConnection</link> * tp_cli_connection_interface_contact_capabilities_connect_to_contact_capabilities_changed
                                                        (<link linkend="TpConnection">TpConnection</link> *proxy,
                                                         <link linkend="tp-cli-connection-interface-contact-capabilities-signal-callback-contact-capabilities-changed">tp_cli_connection_interface_contact_capabilities_signal_callback_contact_capabilities_changed</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>
Connect a handler to the signal ContactCapabilitiesChanged.
</para>
<para>
&lt;tp:docstring xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;         &lt;p&gt;Announce that there has been a change of capabilities on the           given handles. A single signal can be emitted for several         contacts.&lt;/p&gt;          &lt;tp:rationale&gt;           &lt;p&gt;The underlying protocol can get several contacts&apos; capabilities at             the same time.&lt;/p&gt;         &lt;/tp:rationale&gt;</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="TpConnection"><type>TpConnection</type></link> or subclass
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara> Callback to be called when the signal is
  received
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> User-supplied data for the callback
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>destroy</parameter>&#160;:</term>
<listitem><simpara> Destructor for the user-supplied data, which
  will be called when this signal is disconnected, or
  before this function returns <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GObject"><type>GObject</type></link> which will be weakly referenced; 
  if it is destroyed, this callback will automatically be
  disconnected
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> If not <link linkend="NULL--CAPS"><literal>NULL</literal></link>, used to raise an error if <link linkend="NULL--CAPS"><literal>NULL</literal></link> is
  returned
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a <link linkend="TpProxySignalConnection"><type>TpProxySignalConnection</type></link> containing all of the
above, which can be used to disconnect the signal; or
<link linkend="NULL--CAPS"><literal>NULL</literal></link> if the proxy does not have the desired interface
or has become invalid.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-cli-connection-interface-capabilities-call-advertise-capabilities" role="function">
<title>tp_cli_connection_interface_capabilities_call_advertise_capabilities ()</title>
<indexterm zone="tp-cli-connection-interface-capabilities-call-advertise-capabilities"><primary sortas="tp_cli_connection_interface_capabilities_call_advertise_capabilities">tp_cli_connection_interface_capabilities_call_advertise_capabilities</primary></indexterm><programlisting><link linkend="TpProxyPendingCall">TpProxyPendingCall</link> * tp_cli_connection_interface_capabilities_call_advertise_capabilities
                                                        (<link linkend="TpConnection">TpConnection</link> *proxy,
                                                         <link linkend="gint">gint</link> timeout_ms,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *in_Add,
                                                         const <link linkend="gchar">gchar</link> **in_Remove,
                                                         <link linkend="tp-cli-connection-interface-capabilities-callback-for-advertise-capabilities">tp_cli_connection_interface_capabilities_callback_for_advertise_capabilities</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object);</programlisting>
<para>
Start a AdvertiseCapabilities method call.
</para>
<para>
&lt;tp:docstring xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;         &lt;p&gt;Used by user interfaces to indicate which channel types they are able         to handle on this connection. Because these may be provided by         different client processes, this method accepts channel types to add         and remove from the set already advertised on this connection. The type         of advertised capabilities (create versus invite) is protocol-dependent         and hence cannot be set by the this method. In the case of a client         adding an already advertised channel type but with new channel type         specific flags, the connection manager should simply add the new flags         to the set of advertised capabilities.&lt;/p&gt;          &lt;p&gt;Upon a successful invocation of this method, the         &lt;tp:member-ref&gt;CapabilitiesChanged&lt;/tp:member-ref&gt;         signal will be emitted for the user&apos;s own handle ( &lt;tp:dbus-ref namespace=&quot;org.freedesktop.Telepathy&quot;&gt;Connection.GetSelfHandle&lt;/tp:dbus-ref&gt;)         by the connection manager to indicate the changes         that have been made.  This signal should also be monitored to ensure         that the set is kept accurate - for example, a client may remove         capabilities or type specific capability flags when it exits         which are still provided by another client.&lt;/p&gt;          &lt;p&gt;On connections managed by the &lt;tp:dbus-ref namespace=&quot;org.freedesktop.Telepathy&quot;&gt;ChannelDispatcher&lt;/tp:dbus-ref&gt;,           this method SHOULD NOT be used by clients other than the           ChannelDispatcher itself.&lt;/p&gt;</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="TpProxy"><type>TpProxy</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>timeout_ms</parameter>&#160;:</term>
<listitem><simpara> the timeout in milliseconds, or -1 to use the
  default
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Add</parameter>&#160;:</term>
<listitem><simpara> Used to pass an 'in' argument: &lt;tp:docstring xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;           An array of structures containing:           &lt;ul&gt;             &lt;li&gt;a string channel type&lt;/li&gt;             &lt;li&gt;a bitwise OR of type specific capability flags&lt;/li&gt;           &lt;/ul&gt;
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Remove</parameter>&#160;:</term>
<listitem><simpara> Used to pass an 'in' argument: An array of D-Bus interface names of channel types to remove
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara> called when the method call succeeds or fails;
  may be <link linkend="NULL--CAPS"><literal>NULL</literal></link> to make a "fire and forget" call with no 
  reply tracking
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> user-supplied data passed to the callback;
  must be <link linkend="NULL--CAPS"><literal>NULL</literal></link> if <parameter>callback</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>destroy</parameter>&#160;:</term>
<listitem><simpara> called with the user_data as argument, after the
  call has succeeded, failed or been cancelled;
  must be <link linkend="NULL--CAPS"><literal>NULL</literal></link> if <parameter>callback</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> If not <link linkend="NULL--CAPS"><literal>NULL</literal></link>, a <link linkend="GObject"><type>GObject</type></link> which will be 
  weakly referenced; if it is destroyed, this call 
  will automatically be cancelled. Must be <link linkend="NULL--CAPS"><literal>NULL</literal></link> if 
  <parameter>callback</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a <link linkend="TpProxyPendingCall"><type>TpProxyPendingCall</type></link> representing the call in
 progress. It is borrowed from the object, and will become
 invalid when the callback is called, the call is
 cancelled or the <link linkend="TpProxy"><type>TpProxy</type></link> becomes invalid.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-cli-connection-interface-capabilities-call-get-capabilities" role="function">
<title>tp_cli_connection_interface_capabilities_call_get_capabilities ()</title>
<indexterm zone="tp-cli-connection-interface-capabilities-call-get-capabilities"><primary sortas="tp_cli_connection_interface_capabilities_call_get_capabilities">tp_cli_connection_interface_capabilities_call_get_capabilities</primary></indexterm><programlisting><link linkend="TpProxyPendingCall">TpProxyPendingCall</link> * tp_cli_connection_interface_capabilities_call_get_capabilities
                                                        (<link linkend="TpConnection">TpConnection</link> *proxy,
                                                         <link linkend="gint">gint</link> timeout_ms,
                                                         const <link linkend="GArray">GArray</link> *in_Handles,
                                                         <link linkend="tp-cli-connection-interface-capabilities-callback-for-get-capabilities">tp_cli_connection_interface_capabilities_callback_for_get_capabilities</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object);</programlisting>
<para>
Start a GetCapabilities method call.
</para>
<para>
Returns an array of capabilities for the given contact handles.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="TpProxy"><type>TpProxy</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>timeout_ms</parameter>&#160;:</term>
<listitem><simpara> the timeout in milliseconds, or -1 to use the
  default
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Handles</parameter>&#160;:</term>
<listitem><simpara> Used to pass an 'in' argument: &lt;tp:docstring xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;           &lt;p&gt;An array of contact handles for this connection.&lt;/p&gt;            &lt;p&gt;This may include zero, which originally meant a query for             capabilities available on the connection itself. This usage             is deprecated; clients SHOULD NOT do this, and connection managers             SHOULD proceed as though zero had not been present in this             list.&lt;/p&gt;
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara> called when the method call succeeds or fails;
  may be <link linkend="NULL--CAPS"><literal>NULL</literal></link> to make a "fire and forget" call with no 
  reply tracking
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> user-supplied data passed to the callback;
  must be <link linkend="NULL--CAPS"><literal>NULL</literal></link> if <parameter>callback</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>destroy</parameter>&#160;:</term>
<listitem><simpara> called with the user_data as argument, after the
  call has succeeded, failed or been cancelled;
  must be <link linkend="NULL--CAPS"><literal>NULL</literal></link> if <parameter>callback</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> If not <link linkend="NULL--CAPS"><literal>NULL</literal></link>, a <link linkend="GObject"><type>GObject</type></link> which will be 
  weakly referenced; if it is destroyed, this call 
  will automatically be cancelled. Must be <link linkend="NULL--CAPS"><literal>NULL</literal></link> if 
  <parameter>callback</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a <link linkend="TpProxyPendingCall"><type>TpProxyPendingCall</type></link> representing the call in
 progress. It is borrowed from the object, and will become
 invalid when the callback is called, the call is
 cancelled or the <link linkend="TpProxy"><type>TpProxy</type></link> becomes invalid.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-cli-connection-interface-capabilities-callback-for-advertise-capabilities" role="function">
<title>tp_cli_connection_interface_capabilities_callback_for_advertise_capabilities ()</title>
<indexterm zone="tp-cli-connection-interface-capabilities-callback-for-advertise-capabilities"><primary sortas="tp_cli_connection_interface_capabilities_callback_for_advertise_capabilities">tp_cli_connection_interface_capabilities_callback_for_advertise_capabilities</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_cli_connection_interface_capabilities_callback_for_advertise_capabilities)
                                                        (<link linkend="TpConnection">TpConnection</link> *proxy,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *out_Self_Capabilities,
                                                         const <link linkend="GError">GError</link> *error,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);</programlisting>
<para>
Signature of the callback called when a AdvertiseCapabilities method call
succeeds or fails.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> the proxy on which the call was made
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Self_Capabilities</parameter>&#160;:</term>
<listitem><simpara> Used to return an 'out' argument if <parameter>error</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>: An array of structures describing the current capabilities containing:           &lt;ul&gt;             &lt;li&gt;a string channel type&lt;/li&gt;             &lt;li&gt;a bitwise OR of type specific capability flags&lt;/li&gt;           &lt;/ul&gt;
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> <link linkend="NULL--CAPS"><literal>NULL</literal></link> on success, or an error on failure
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> user-supplied data
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> user-supplied object
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-cli-connection-interface-capabilities-callback-for-get-capabilities" role="function">
<title>tp_cli_connection_interface_capabilities_callback_for_get_capabilities ()</title>
<indexterm zone="tp-cli-connection-interface-capabilities-callback-for-get-capabilities"><primary sortas="tp_cli_connection_interface_capabilities_callback_for_get_capabilities">tp_cli_connection_interface_capabilities_callback_for_get_capabilities</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_cli_connection_interface_capabilities_callback_for_get_capabilities)
                                                        (<link linkend="TpConnection">TpConnection</link> *proxy,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *out_Contact_Capabilities,
                                                         const <link linkend="GError">GError</link> *error,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);</programlisting>
<para>
Signature of the callback called when a GetCapabilities method call
succeeds or fails.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> the proxy on which the call was made
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Contact_Capabilities</parameter>&#160;:</term>
<listitem><simpara> Used to return an 'out' argument if <parameter>error</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>: &lt;tp:docstring xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;           An array of structures containing:           &lt;ul&gt;             &lt;li&gt;an integer handle representing the contact&lt;/li&gt;             &lt;li&gt;a string channel type&lt;/li&gt;             &lt;li&gt;a bitwise OR of generic capability flags for the type&lt;/li&gt;             &lt;li&gt;a bitwise OR of type specific capability flags for the type&lt;/li&gt;           &lt;/ul&gt;
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> <link linkend="NULL--CAPS"><literal>NULL</literal></link> on success, or an error on failure
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> user-supplied data
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> user-supplied object
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-cli-connection-interface-capabilities-connect-to-capabilities-changed" role="function">
<title>tp_cli_connection_interface_capabilities_connect_to_capabilities_changed ()</title>
<indexterm zone="tp-cli-connection-interface-capabilities-connect-to-capabilities-changed"><primary sortas="tp_cli_connection_interface_capabilities_connect_to_capabilities_changed">tp_cli_connection_interface_capabilities_connect_to_capabilities_changed</primary></indexterm><programlisting><link linkend="TpProxySignalConnection">TpProxySignalConnection</link> * tp_cli_connection_interface_capabilities_connect_to_capabilities_changed
                                                        (<link linkend="TpConnection">TpConnection</link> *proxy,
                                                         <link linkend="tp-cli-connection-interface-capabilities-signal-callback-capabilities-changed">tp_cli_connection_interface_capabilities_signal_callback_capabilities_changed</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>
Connect a handler to the signal CapabilitiesChanged.
</para>
<para>
&lt;tp:docstring xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;         &lt;p&gt;Announce that there has been a change of capabilities on the           given handle.&lt;/p&gt;          &lt;p&gt;If the handle is zero, the capabilities refer to the connection           itself, in some poorly defined way. This usage is deprecated and           clients should ignore it.&lt;/p&gt;</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="TpConnection"><type>TpConnection</type></link> or subclass
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara> Callback to be called when the signal is
  received
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> User-supplied data for the callback
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>destroy</parameter>&#160;:</term>
<listitem><simpara> Destructor for the user-supplied data, which
  will be called when this signal is disconnected, or
  before this function returns <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GObject"><type>GObject</type></link> which will be weakly referenced; 
  if it is destroyed, this callback will automatically be
  disconnected
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> If not <link linkend="NULL--CAPS"><literal>NULL</literal></link>, used to raise an error if <link linkend="NULL--CAPS"><literal>NULL</literal></link> is
  returned
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a <link linkend="TpProxySignalConnection"><type>TpProxySignalConnection</type></link> containing all of the
above, which can be used to disconnect the signal; or
<link linkend="NULL--CAPS"><literal>NULL</literal></link> if the proxy does not have the desired interface
or has become invalid.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-cli-connection-interface-capabilities-signal-callback-capabilities-changed" role="function">
<title>tp_cli_connection_interface_capabilities_signal_callback_capabilities_changed ()</title>
<indexterm zone="tp-cli-connection-interface-capabilities-signal-callback-capabilities-changed"><primary sortas="tp_cli_connection_interface_capabilities_signal_callback_capabilities_changed">tp_cli_connection_interface_capabilities_signal_callback_capabilities_changed</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_cli_connection_interface_capabilities_signal_callback_capabilities_changed)
                                                        (<link linkend="TpConnection">TpConnection</link> *proxy,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *arg_Caps,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);</programlisting>
<para>
Represents the signature of a callback for the signal CapabilitiesChanged.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> The proxy on which <link linkend="tp-cli-connection-interface-capabilities-connect-to-capabilities-changed"><function>tp_cli_connection_interface_capabilities_connect_to_capabilities_changed()</function></link>
 was called
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Caps</parameter>&#160;:</term>
<listitem><simpara> &lt;tp:docstring xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;           An array of structures containing:           &lt;ul&gt;             &lt;li&gt;an integer handle representing the contact&lt;/li&gt;             &lt;li&gt;a string channel type&lt;/li&gt;             &lt;li&gt;a bitwise OR of the contact&apos;s old generic capability flags&lt;/li&gt;             &lt;li&gt;a bitwise OR of the contact&apos;s new generic capability flags&lt;/li&gt;             &lt;li&gt;a bitwise OR of the contact&apos;s old type specific capability flags&lt;/li&gt;             &lt;li&gt;a bitwise OR of the contact&apos;s new type specific capability flags&lt;/li&gt;           &lt;/ul&gt;
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> User-supplied data
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> User-supplied weakly referenced object
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>



<refsect1 id="telepathy-glib-connection-caps.see-also">
<title>See Also</title>
#TpConnection
</refsect1>

</refentry>

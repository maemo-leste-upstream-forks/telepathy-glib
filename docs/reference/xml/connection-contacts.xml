<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="telepathy-glib-connection-contacts">
<refmeta>
<refentrytitle role="top_of_page" id="telepathy-glib-connection-contacts.top_of_page">Connection Contacts interface</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>TELEPATHY-GLIB Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>Connection Contacts interface</refname>
<refpurpose>client-side wrappers for the Contacts interface</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv id="telepathy-glib-connection-contacts.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>

#include &lt;telepathy-glib/connection.h&gt;

<link linkend="TpProxyPendingCall">TpProxyPendingCall</link>* <link linkend="tp-cli-connection-interface-contacts-call-get-contact-attributes">tp_cli_connection_interface_contacts_call_get_contact_attributes</link>
                                                        (<link linkend="TpConnection">TpConnection</link> *proxy,
                                                         <link linkend="gint">gint</link> timeout_ms,
                                                         const <link linkend="GArray">GArray</link> *in_Handles,
                                                         const <link linkend="gchar">gchar</link> **in_Interfaces,
                                                         <link linkend="gboolean">gboolean</link> in_Hold,
                                                         <link linkend="tp-cli-connection-interface-contacts-callback-for-get-contact-attributes">tp_cli_connection_interface_contacts_callback_for_get_contact_attributes</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object);
<link linkend="void">void</link>                (<link linkend="tp-cli-connection-interface-contacts-callback-for-get-contact-attributes">*tp_cli_connection_interface_contacts_callback_for_get_contact_attributes</link>)
                                                        (<link linkend="TpConnection">TpConnection</link> *proxy,
                                                         <link linkend="GHashTable">GHashTable</link> *out_Attributes,
                                                         const <link linkend="GError">GError</link> *error,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);
<link linkend="gboolean">gboolean</link>            <link linkend="tp-cli-connection-interface-contacts-run-get-contact-attributes">tp_cli_connection_interface_contacts_run_get_contact_attributes</link>
                                                        (<link linkend="TpConnection">TpConnection</link> *proxy,
                                                         <link linkend="gint">gint</link> timeout_ms,
                                                         const <link linkend="GArray">GArray</link> *in_Handles,
                                                         const <link linkend="gchar">gchar</link> **in_Interfaces,
                                                         <link linkend="gboolean">gboolean</link> in_Hold,
                                                         <link linkend="GHashTable">GHashTable</link> **out_Attributes,
                                                         <link linkend="GError">GError</link> **error,
                                                         <link linkend="GMainLoop">GMainLoop</link> **loop);
</synopsis>
</refsynopsisdiv>









<refsect1 id="telepathy-glib-connection-contacts.description" role="desc">
<title role="desc.title">Description</title>
<para>
This interface allows a client to get information from various connection
interfaces in one dbus call.
</para>
<para>
This section documents the auto-generated C wrappers for the
Contacts interface, used with <link linkend="TpConnection"><type>TpConnection</type></link> objects.</para>
<para>

</para>
</refsect1>

<refsect1 id="telepathy-glib-connection-contacts.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="tp-cli-connection-interface-contacts-call-get-contact-attributes" role="function">
<title>tp_cli_connection_interface_contacts_call_get_contact_attributes ()</title>
<indexterm zone="tp-cli-connection-interface-contacts-call-get-contact-attributes"><primary>tp_cli_connection_interface_contacts_call_get_contact_attributes</primary></indexterm><programlisting><link linkend="TpProxyPendingCall">TpProxyPendingCall</link>* tp_cli_connection_interface_contacts_call_get_contact_attributes
                                                        (<link linkend="TpConnection">TpConnection</link> *proxy,
                                                         <link linkend="gint">gint</link> timeout_ms,
                                                         const <link linkend="GArray">GArray</link> *in_Handles,
                                                         const <link linkend="gchar">gchar</link> **in_Interfaces,
                                                         <link linkend="gboolean">gboolean</link> in_Hold,
                                                         <link linkend="tp-cli-connection-interface-contacts-callback-for-get-contact-attributes">tp_cli_connection_interface_contacts_callback_for_get_contact_attributes</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object);</programlisting>
<para>
Start a GetContactAttributes method call.
</para>
<para>
Return any number of contact attributes for the given handles.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="TpProxy"><type>TpProxy</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>timeout_ms</parameter>&nbsp;:</term>
<listitem><simpara> the timeout in milliseconds, or -1 to use the
  default
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Handles</parameter>&nbsp;:</term>
<listitem><simpara> Used to pass an 'in' argument: An array of handles representing contacts.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Interfaces</parameter>&nbsp;:</term>
<listitem><simpara> Used to pass an 'in' argument: &lt;tp:docstring xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;           &lt;p&gt;A list of strings indicating which D-Bus interfaces the calling             process is interested in. All supported attributes from these             interfaces, whose values can be obtained without additional network             activity, will be in the reply.&lt;/p&gt;            &lt;p&gt;It is an error to request interfaces that are not supported by             this Connection (i.e. mentioned in the             &lt;tp:member-ref&gt;ContactAttributeInterfaces&lt;/tp:member-ref&gt;             property).&lt;/p&gt;            &lt;tp:rationale&gt;             &lt;p&gt;This makes it possible to distinguish between interfaces for               which the Connection has nothing to say (e.g. we don&apos;t know the               avatar tokens of any of the contacts, so we omitted them all),               and interfaces for which this API isn&apos;t supported.&lt;/p&gt;           &lt;/tp:rationale&gt;            &lt;p&gt;Attributes from the interface             &lt;tp:dbus-ref&gt;org.freedesktop.Telepathy.Connection&lt;/tp:dbus-ref&gt;             are always returned, and need not be requested explicitly.&lt;/p&gt;            &lt;p&gt;As well as returning cached information immediately, the             connection MAY start asynchronous requests to obtain better             values for the contact attributes. If better values are later             obtained by this process, they will be indicated with the usual             signals (such as AliasesChanged).&lt;/p&gt;            &lt;tp:rationale&gt;             For instance, an XMPP connection manager could download vCards             in response to a request for Aliasing attributes.           &lt;/tp:rationale&gt;
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Hold</parameter>&nbsp;:</term>
<listitem><simpara> Used to pass an 'in' argument: If true, all handles in the result have been held on behalf of the           calling process, as if by a call to           &lt;tp:dbus-ref namespace=&quot;org.freedesktop.Telepathy&quot;&gt;Connection.HoldHandles&lt;/tp:dbus-ref&gt;.            &lt;tp:rationale&gt;             For further round-trip avoidance.           &lt;/tp:rationale&gt;
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&nbsp;:</term>
<listitem><simpara> called when the method call succeeds or fails;
  may be <link linkend="NULL:CAPS"><literal>NULL</literal></link> to make a "fire and forget" call with no 
  reply tracking
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara> user-supplied data passed to the callback;
  must be <link linkend="NULL:CAPS"><literal>NULL</literal></link> if <parameter>callback</parameter> is <link linkend="NULL:CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>destroy</parameter>&nbsp;:</term>
<listitem><simpara> called with the user_data as argument, after the
  call has succeeded, failed or been cancelled;
  must be <link linkend="NULL:CAPS"><literal>NULL</literal></link> if <parameter>callback</parameter> is <link linkend="NULL:CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&nbsp;:</term>
<listitem><simpara> If not <link linkend="NULL:CAPS"><literal>NULL</literal></link>, a <link linkend="GObject"><type>GObject</type></link> which will be 
  weakly referenced; if it is destroyed, this call 
  will automatically be cancelled. Must be <link linkend="NULL:CAPS"><literal>NULL</literal></link> if 
  <parameter>callback</parameter> is <link linkend="NULL:CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a <link linkend="TpProxyPendingCall"><type>TpProxyPendingCall</type></link> representing the call in
 progress. It is borrowed from the object, and will become
 invalid when the callback is called, the call is
 cancelled or the <link linkend="TpProxy"><type>TpProxy</type></link> becomes invalid.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-cli-connection-interface-contacts-callback-for-get-contact-attributes" role="function">
<title>tp_cli_connection_interface_contacts_callback_for_get_contact_attributes ()</title>
<indexterm zone="tp-cli-connection-interface-contacts-callback-for-get-contact-attributes"><primary>tp_cli_connection_interface_contacts_callback_for_get_contact_attributes</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_cli_connection_interface_contacts_callback_for_get_contact_attributes)
                                                        (<link linkend="TpConnection">TpConnection</link> *proxy,
                                                         <link linkend="GHashTable">GHashTable</link> *out_Attributes,
                                                         const <link linkend="GError">GError</link> *error,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);</programlisting>
<para>
Signature of the callback called when a GetContactAttributes method call
succeeds or fails.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&nbsp;:</term>
<listitem><simpara> the proxy on which the call was made
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Attributes</parameter>&nbsp;:</term>
<listitem><simpara> Used to return an 'out' argument if <parameter>error</parameter> is <link linkend="NULL:CAPS"><literal>NULL</literal></link>: &lt;tp:docstring xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;           &lt;p&gt;A dictionary mapping the contact handles to contact attributes.             If any of the requested handles are in fact invalid, they are             simply omitted from this mapping. If contact attributes are not             immediately known, the behaviour is defined by the interface;             the attribute should either be omitted from the result or             replaced with a default value.&lt;/p&gt;            &lt;p&gt;Each contact&apos;s attributes will always include at least the             identifier that would be obtained by inspecting the handle             (&lt;code&gt;org.freedesktop.Telepathy.Connection/contact-id&lt;/code&gt;).&lt;/p&gt;
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara> <link linkend="NULL:CAPS"><literal>NULL</literal></link> on success, or an error on failure
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara> user-supplied data
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&nbsp;:</term>
<listitem><simpara> user-supplied object
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-cli-connection-interface-contacts-run-get-contact-attributes" role="function">
<title>tp_cli_connection_interface_contacts_run_get_contact_attributes ()</title>
<indexterm zone="tp-cli-connection-interface-contacts-run-get-contact-attributes"><primary>tp_cli_connection_interface_contacts_run_get_contact_attributes</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            tp_cli_connection_interface_contacts_run_get_contact_attributes
                                                        (<link linkend="TpConnection">TpConnection</link> *proxy,
                                                         <link linkend="gint">gint</link> timeout_ms,
                                                         const <link linkend="GArray">GArray</link> *in_Handles,
                                                         const <link linkend="gchar">gchar</link> **in_Interfaces,
                                                         <link linkend="gboolean">gboolean</link> in_Hold,
                                                         <link linkend="GHashTable">GHashTable</link> **out_Attributes,
                                                         <link linkend="GError">GError</link> **error,
                                                         <link linkend="GMainLoop">GMainLoop</link> **loop);</programlisting>
<para>
Call the method GetContactAttributes and run the main loop
until it returns. Before calling this method, you must
add a reference to any borrowed objects you need to keep,
and generally ensure that everything is in a consistent
state.
</para>
<para>
Return any number of contact attributes for the given handles.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="TpConnection"><type>TpConnection</type></link> or subclass
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>timeout_ms</parameter>&nbsp;:</term>
<listitem><simpara> Timeout in milliseconds, or -1 for default
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Handles</parameter>&nbsp;:</term>
<listitem><simpara> Used to pass an 'in' argument: An array of handles representing contacts.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Interfaces</parameter>&nbsp;:</term>
<listitem><simpara> Used to pass an 'in' argument: &lt;tp:docstring xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;           &lt;p&gt;A list of strings indicating which D-Bus interfaces the calling             process is interested in. All supported attributes from these             interfaces, whose values can be obtained without additional network             activity, will be in the reply.&lt;/p&gt;            &lt;p&gt;It is an error to request interfaces that are not supported by             this Connection (i.e. mentioned in the             &lt;tp:member-ref&gt;ContactAttributeInterfaces&lt;/tp:member-ref&gt;             property).&lt;/p&gt;            &lt;tp:rationale&gt;             &lt;p&gt;This makes it possible to distinguish between interfaces for               which the Connection has nothing to say (e.g. we don&apos;t know the               avatar tokens of any of the contacts, so we omitted them all),               and interfaces for which this API isn&apos;t supported.&lt;/p&gt;           &lt;/tp:rationale&gt;            &lt;p&gt;Attributes from the interface             &lt;tp:dbus-ref&gt;org.freedesktop.Telepathy.Connection&lt;/tp:dbus-ref&gt;             are always returned, and need not be requested explicitly.&lt;/p&gt;            &lt;p&gt;As well as returning cached information immediately, the             connection MAY start asynchronous requests to obtain better             values for the contact attributes. If better values are later             obtained by this process, they will be indicated with the usual             signals (such as AliasesChanged).&lt;/p&gt;            &lt;tp:rationale&gt;             For instance, an XMPP connection manager could download vCards             in response to a request for Aliasing attributes.           &lt;/tp:rationale&gt;
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Hold</parameter>&nbsp;:</term>
<listitem><simpara> Used to pass an 'in' argument: If true, all handles in the result have been held on behalf of the           calling process, as if by a call to           &lt;tp:dbus-ref namespace=&quot;org.freedesktop.Telepathy&quot;&gt;Connection.HoldHandles&lt;/tp:dbus-ref&gt;.            &lt;tp:rationale&gt;             For further round-trip avoidance.           &lt;/tp:rationale&gt;
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Attributes</parameter>&nbsp;:</term>
<listitem><simpara> Used to return an 'out' argument if <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> is returned: &lt;tp:docstring xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;           &lt;p&gt;A dictionary mapping the contact handles to contact attributes.             If any of the requested handles are in fact invalid, they are             simply omitted from this mapping. If contact attributes are not             immediately known, the behaviour is defined by the interface;             the attribute should either be omitted from the result or             replaced with a default value.&lt;/p&gt;            &lt;p&gt;Each contact&apos;s attributes will always include at least the             identifier that would be obtained by inspecting the handle             (&lt;code&gt;org.freedesktop.Telepathy.Connection/contact-id&lt;/code&gt;).&lt;/p&gt;
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara> If not <link linkend="NULL:CAPS"><literal>NULL</literal></link>, used to return errors if <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> 
 is returned
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>loop</parameter>&nbsp;:</term>
<listitem><simpara> If not <link linkend="NULL:CAPS"><literal>NULL</literal></link>, set before re-entering 
 the main loop, to point to a <link linkend="GMainLoop"><type>GMainLoop</type></link> 
 which can be used to cancel this call with 
 <link linkend="g-main-loop-quit"><function>g_main_loop_quit()</function></link>, causing a return of 
 <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> with <parameter>error</parameter> set to <link linkend="TP-DBUS-ERROR-CANCELLED:CAPS"><literal>TP_DBUS_ERROR_CANCELLED</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> TRUE on success, FALSE and sets <parameter>error</parameter> on error
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>



<refsect1 id="telepathy-glib-connection-contacts.see-also">
<title>See Also</title>
<link linkend="TpConnection"><type>TpConnection</type></link>
</refsect1>

</refentry>

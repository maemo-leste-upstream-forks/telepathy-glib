<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="telepathy-glib-channel-file-transfer">
<refmeta>
<refentrytitle role="top_of_page" id="telepathy-glib-channel-file-transfer.top_of_page">File transfer</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>TELEPATHY-GLIB Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>File transfer</refname>
<refpurpose>client-side wrappers for the File Transfer channel type</refpurpose>
</refnamediv>

<refsynopsisdiv id="telepathy-glib-channel-file-transfer.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>

#include &lt;telepathy-glib/channel.h&gt;

<link linkend="TpProxyPendingCall">TpProxyPendingCall</link> * <link linkend="tp-cli-channel-type-file-transfer-call-accept-file">tp_cli_channel_type_file_transfer_call_accept_file</link>
                                                        (<link linkend="TpChannel">TpChannel</link> *proxy,
                                                         <link linkend="gint">gint</link> timeout_ms,
                                                         <link linkend="guint">guint</link> in_Address_Type,
                                                         <link linkend="guint">guint</link> in_Access_Control,
                                                         const <link linkend="GValue">GValue</link> *in_Access_Control_Param,
                                                         <link linkend="guint64">guint64</link> in_Offset,
                                                         <link linkend="tp-cli-channel-type-file-transfer-callback-for-accept-file">tp_cli_channel_type_file_transfer_callback_for_accept_file</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object);
<link linkend="TpProxyPendingCall">TpProxyPendingCall</link> * <link linkend="tp-cli-channel-type-file-transfer-call-provide-file">tp_cli_channel_type_file_transfer_call_provide_file</link>
                                                        (<link linkend="TpChannel">TpChannel</link> *proxy,
                                                         <link linkend="gint">gint</link> timeout_ms,
                                                         <link linkend="guint">guint</link> in_Address_Type,
                                                         <link linkend="guint">guint</link> in_Access_Control,
                                                         const <link linkend="GValue">GValue</link> *in_Access_Control_Param,
                                                         <link linkend="tp-cli-channel-type-file-transfer-callback-for-provide-file">tp_cli_channel_type_file_transfer_callback_for_provide_file</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object);
<link linkend="void">void</link>                (<link linkend="tp-cli-channel-type-file-transfer-callback-for-accept-file">*tp_cli_channel_type_file_transfer_callback_for_accept_file</link>)
                                                        (<link linkend="TpChannel">TpChannel</link> *proxy,
                                                         const <link linkend="GValue">GValue</link> *out_Address,
                                                         const <link linkend="GError">GError</link> *error,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);
<link linkend="void">void</link>                (<link linkend="tp-cli-channel-type-file-transfer-callback-for-provide-file">*tp_cli_channel_type_file_transfer_callback_for_provide_file</link>)
                                                        (<link linkend="TpChannel">TpChannel</link> *proxy,
                                                         const <link linkend="GValue">GValue</link> *out_Address,
                                                         const <link linkend="GError">GError</link> *error,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);
<link linkend="TpProxySignalConnection">TpProxySignalConnection</link> * <link linkend="tp-cli-channel-type-file-transfer-connect-to-file-transfer-state-changed">tp_cli_channel_type_file_transfer_connect_to_file_transfer_state_changed</link>
                                                        (<link linkend="TpChannel">TpChannel</link> *proxy,
                                                         <link linkend="tp-cli-channel-type-file-transfer-signal-callback-file-transfer-state-changed">tp_cli_channel_type_file_transfer_signal_callback_file_transfer_state_changed</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object,
                                                         <link linkend="GError">GError</link> **error);
<link linkend="TpProxySignalConnection">TpProxySignalConnection</link> * <link linkend="tp-cli-channel-type-file-transfer-connect-to-initial-offset-defined">tp_cli_channel_type_file_transfer_connect_to_initial_offset_defined</link>
                                                        (<link linkend="TpChannel">TpChannel</link> *proxy,
                                                         <link linkend="tp-cli-channel-type-file-transfer-signal-callback-initial-offset-defined">tp_cli_channel_type_file_transfer_signal_callback_initial_offset_defined</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object,
                                                         <link linkend="GError">GError</link> **error);
<link linkend="TpProxySignalConnection">TpProxySignalConnection</link> * <link linkend="tp-cli-channel-type-file-transfer-connect-to-transferred-bytes-changed">tp_cli_channel_type_file_transfer_connect_to_transferred_bytes_changed</link>
                                                        (<link linkend="TpChannel">TpChannel</link> *proxy,
                                                         <link linkend="tp-cli-channel-type-file-transfer-signal-callback-transferred-bytes-changed">tp_cli_channel_type_file_transfer_signal_callback_transferred_bytes_changed</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object,
                                                         <link linkend="GError">GError</link> **error);
<link linkend="gboolean">gboolean</link>            <link linkend="tp-cli-channel-type-file-transfer-run-accept-file">tp_cli_channel_type_file_transfer_run_accept_file</link>
                                                        (<link linkend="TpChannel">TpChannel</link> *proxy,
                                                         <link linkend="gint">gint</link> timeout_ms,
                                                         <link linkend="guint">guint</link> in_Address_Type,
                                                         <link linkend="guint">guint</link> in_Access_Control,
                                                         const <link linkend="GValue">GValue</link> *in_Access_Control_Param,
                                                         <link linkend="guint64">guint64</link> in_Offset,
                                                         <link linkend="GValue">GValue</link> **out_Address,
                                                         <link linkend="GError">GError</link> **error,
                                                         <link linkend="GMainLoop">GMainLoop</link> **loop);
<link linkend="gboolean">gboolean</link>            <link linkend="tp-cli-channel-type-file-transfer-run-provide-file">tp_cli_channel_type_file_transfer_run_provide_file</link>
                                                        (<link linkend="TpChannel">TpChannel</link> *proxy,
                                                         <link linkend="gint">gint</link> timeout_ms,
                                                         <link linkend="guint">guint</link> in_Address_Type,
                                                         <link linkend="guint">guint</link> in_Access_Control,
                                                         const <link linkend="GValue">GValue</link> *in_Access_Control_Param,
                                                         <link linkend="GValue">GValue</link> **out_Address,
                                                         <link linkend="GError">GError</link> **error,
                                                         <link linkend="GMainLoop">GMainLoop</link> **loop);
<link linkend="void">void</link>                (<link linkend="tp-cli-channel-type-file-transfer-signal-callback-file-transfer-state-changed">*tp_cli_channel_type_file_transfer_signal_callback_file_transfer_state_changed</link>)
                                                        (<link linkend="TpChannel">TpChannel</link> *proxy,
                                                         <link linkend="guint">guint</link> arg_State,
                                                         <link linkend="guint">guint</link> arg_Reason,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);
<link linkend="void">void</link>                (<link linkend="tp-cli-channel-type-file-transfer-signal-callback-initial-offset-defined">*tp_cli_channel_type_file_transfer_signal_callback_initial_offset_defined</link>)
                                                        (<link linkend="TpChannel">TpChannel</link> *proxy,
                                                         <link linkend="guint64">guint64</link> arg_InitialOffset,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);
<link linkend="void">void</link>                (<link linkend="tp-cli-channel-type-file-transfer-signal-callback-transferred-bytes-changed">*tp_cli_channel_type_file_transfer_signal_callback_transferred_bytes_changed</link>)
                                                        (<link linkend="TpChannel">TpChannel</link> *proxy,
                                                         <link linkend="guint64">guint64</link> arg_Count,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);
</synopsis>
</refsynopsisdiv>









<refsect1 id="telepathy-glib-channel-file-transfer.description" role="desc">
<title role="desc.title">Description</title>
<para>
This section documents the auto-generated C wrappers for the File Transfer
channel type.</para>
<para>
</para>
</refsect1>

<refsect1 id="telepathy-glib-channel-file-transfer.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="tp-cli-channel-type-file-transfer-call-accept-file" role="function">
<title>tp_cli_channel_type_file_transfer_call_accept_file ()</title>
<indexterm zone="tp-cli-channel-type-file-transfer-call-accept-file"><primary sortas="tp_cli_channel_type_file_transfer_call_accept_file">tp_cli_channel_type_file_transfer_call_accept_file</primary></indexterm><programlisting><link linkend="TpProxyPendingCall">TpProxyPendingCall</link> * tp_cli_channel_type_file_transfer_call_accept_file
                                                        (<link linkend="TpChannel">TpChannel</link> *proxy,
                                                         <link linkend="gint">gint</link> timeout_ms,
                                                         <link linkend="guint">guint</link> in_Address_Type,
                                                         <link linkend="guint">guint</link> in_Access_Control,
                                                         const <link linkend="GValue">GValue</link> *in_Access_Control_Param,
                                                         <link linkend="guint64">guint64</link> in_Offset,
                                                         <link linkend="tp-cli-channel-type-file-transfer-callback-for-accept-file">tp_cli_channel_type_file_transfer_callback_for_accept_file</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object);</programlisting>
<para>
Start a AcceptFile method call.
</para>
<para>
Accept a file transfer that&apos;s in the Pending state. The file         transfer&apos;s state becomes Accepted after this method is called.         At this point the client can connect to the socket. CM MUST emit         &lt;tp:member-ref&gt;InitialOffsetDefined&lt;/tp:member-ref&gt; and change         the state to Open before writing to the socket.         Then &lt;tp:member-ref&gt;InitialOffset&lt;/tp:member-ref&gt; should be respected in case         its value differs from the offset that was specified as an argument         to AcceptFile.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="TpProxy"><type>TpProxy</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>timeout_ms</parameter>&#160;:</term>
<listitem><simpara> the timeout in milliseconds, or -1 to use the
  default
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Address_Type</parameter>&#160;:</term>
<listitem><simpara> Used to pass an 'in' argument: The type of address the connection manager should listen on.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Access_Control</parameter>&#160;:</term>
<listitem><simpara> Used to pass an 'in' argument: The type of access control the connection manager should apply to           the socket.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Access_Control_Param</parameter>&#160;:</term>
<listitem><simpara> Used to pass an 'in' argument: A parameter for the access control type, to be interpreted as           specified in the documentation for the Socket_Access_Control enum.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Offset</parameter>&#160;:</term>
<listitem><simpara> Used to pass an 'in' argument: The desired offset in bytes where the file transfer should start.           The offset is taken from the beginning of the file. Specifying an           offset of zero will start the transfer from the beginning of the           file. The offset that is actually given in the           &lt;tp:member-ref&gt;InitialOffset&lt;/tp:member-ref&gt; property can differ           from this argument where the requested offset is not supported.           (For example, some protocols do not support offsets at all so           the InitialOffset property will always be 0.)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara> called when the method call succeeds or fails;
  may be <link linkend="NULL--CAPS"><literal>NULL</literal></link> to make a "fire and forget" call with no 
  reply tracking
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> user-supplied data passed to the callback;
  must be <link linkend="NULL--CAPS"><literal>NULL</literal></link> if <parameter>callback</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>destroy</parameter>&#160;:</term>
<listitem><simpara> called with the user_data as argument, after the
  call has succeeded, failed or been cancelled;
  must be <link linkend="NULL--CAPS"><literal>NULL</literal></link> if <parameter>callback</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> If not <link linkend="NULL--CAPS"><literal>NULL</literal></link>, a <link linkend="GObject"><type>GObject</type></link> which will be 
  weakly referenced; if it is destroyed, this call 
  will automatically be cancelled. Must be <link linkend="NULL--CAPS"><literal>NULL</literal></link> if 
  <parameter>callback</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a <link linkend="TpProxyPendingCall"><type>TpProxyPendingCall</type></link> representing the call in
 progress. It is borrowed from the object, and will become
 invalid when the callback is called, the call is
 cancelled or the <link linkend="TpProxy"><type>TpProxy</type></link> becomes invalid.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-cli-channel-type-file-transfer-call-provide-file" role="function">
<title>tp_cli_channel_type_file_transfer_call_provide_file ()</title>
<indexterm zone="tp-cli-channel-type-file-transfer-call-provide-file"><primary sortas="tp_cli_channel_type_file_transfer_call_provide_file">tp_cli_channel_type_file_transfer_call_provide_file</primary></indexterm><programlisting><link linkend="TpProxyPendingCall">TpProxyPendingCall</link> * tp_cli_channel_type_file_transfer_call_provide_file
                                                        (<link linkend="TpChannel">TpChannel</link> *proxy,
                                                         <link linkend="gint">gint</link> timeout_ms,
                                                         <link linkend="guint">guint</link> in_Address_Type,
                                                         <link linkend="guint">guint</link> in_Access_Control,
                                                         const <link linkend="GValue">GValue</link> *in_Access_Control_Param,
                                                         <link linkend="tp-cli-channel-type-file-transfer-callback-for-provide-file">tp_cli_channel_type_file_transfer_callback_for_provide_file</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object);</programlisting>
<para>
Start a ProvideFile method call.
</para>
<para>
Provide the file for an outgoing file transfer which has been offered.         Opens a socket that the client can use to provide a file to the connection manager.         The channel MUST have been requested, and will change state         to Open when this method is called if its state was Accepted.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="TpProxy"><type>TpProxy</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>timeout_ms</parameter>&#160;:</term>
<listitem><simpara> the timeout in milliseconds, or -1 to use the
  default
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Address_Type</parameter>&#160;:</term>
<listitem><simpara> Used to pass an 'in' argument: The type of address the connection manager should listen on.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Access_Control</parameter>&#160;:</term>
<listitem><simpara> Used to pass an 'in' argument: The type of access control the connection manager should apply to           the socket.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Access_Control_Param</parameter>&#160;:</term>
<listitem><simpara> Used to pass an 'in' argument: A parameter for the access control type, to be interpreted as           specified in the documentation for the Socket_Access_Control enum.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara> called when the method call succeeds or fails;
  may be <link linkend="NULL--CAPS"><literal>NULL</literal></link> to make a "fire and forget" call with no 
  reply tracking
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> user-supplied data passed to the callback;
  must be <link linkend="NULL--CAPS"><literal>NULL</literal></link> if <parameter>callback</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>destroy</parameter>&#160;:</term>
<listitem><simpara> called with the user_data as argument, after the
  call has succeeded, failed or been cancelled;
  must be <link linkend="NULL--CAPS"><literal>NULL</literal></link> if <parameter>callback</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> If not <link linkend="NULL--CAPS"><literal>NULL</literal></link>, a <link linkend="GObject"><type>GObject</type></link> which will be 
  weakly referenced; if it is destroyed, this call 
  will automatically be cancelled. Must be <link linkend="NULL--CAPS"><literal>NULL</literal></link> if 
  <parameter>callback</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a <link linkend="TpProxyPendingCall"><type>TpProxyPendingCall</type></link> representing the call in
 progress. It is borrowed from the object, and will become
 invalid when the callback is called, the call is
 cancelled or the <link linkend="TpProxy"><type>TpProxy</type></link> becomes invalid.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-cli-channel-type-file-transfer-callback-for-accept-file" role="function">
<title>tp_cli_channel_type_file_transfer_callback_for_accept_file ()</title>
<indexterm zone="tp-cli-channel-type-file-transfer-callback-for-accept-file"><primary sortas="tp_cli_channel_type_file_transfer_callback_for_accept_file">tp_cli_channel_type_file_transfer_callback_for_accept_file</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_cli_channel_type_file_transfer_callback_for_accept_file)
                                                        (<link linkend="TpChannel">TpChannel</link> *proxy,
                                                         const <link linkend="GValue">GValue</link> *out_Address,
                                                         const <link linkend="GError">GError</link> *error,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);</programlisting>
<para>
Signature of the callback called when a AcceptFile method call
succeeds or fails.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> the proxy on which the call was made
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Address</parameter>&#160;:</term>
<listitem><simpara> Used to return an 'out' argument if <parameter>error</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>: The address on which the connection manager will listen for           connections for this file transfer.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> <link linkend="NULL--CAPS"><literal>NULL</literal></link> on success, or an error on failure
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> user-supplied data
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> user-supplied object
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-cli-channel-type-file-transfer-callback-for-provide-file" role="function">
<title>tp_cli_channel_type_file_transfer_callback_for_provide_file ()</title>
<indexterm zone="tp-cli-channel-type-file-transfer-callback-for-provide-file"><primary sortas="tp_cli_channel_type_file_transfer_callback_for_provide_file">tp_cli_channel_type_file_transfer_callback_for_provide_file</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_cli_channel_type_file_transfer_callback_for_provide_file)
                                                        (<link linkend="TpChannel">TpChannel</link> *proxy,
                                                         const <link linkend="GValue">GValue</link> *out_Address,
                                                         const <link linkend="GError">GError</link> *error,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);</programlisting>
<para>
Signature of the callback called when a ProvideFile method call
succeeds or fails.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> the proxy on which the call was made
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Address</parameter>&#160;:</term>
<listitem><simpara> Used to return an 'out' argument if <parameter>error</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>: The address on which the connection manager will listen for           connections for this file transfer.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> <link linkend="NULL--CAPS"><literal>NULL</literal></link> on success, or an error on failure
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> user-supplied data
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> user-supplied object
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-cli-channel-type-file-transfer-connect-to-file-transfer-state-changed" role="function">
<title>tp_cli_channel_type_file_transfer_connect_to_file_transfer_state_changed ()</title>
<indexterm zone="tp-cli-channel-type-file-transfer-connect-to-file-transfer-state-changed"><primary sortas="tp_cli_channel_type_file_transfer_connect_to_file_transfer_state_changed">tp_cli_channel_type_file_transfer_connect_to_file_transfer_state_changed</primary></indexterm><programlisting><link linkend="TpProxySignalConnection">TpProxySignalConnection</link> * tp_cli_channel_type_file_transfer_connect_to_file_transfer_state_changed
                                                        (<link linkend="TpChannel">TpChannel</link> *proxy,
                                                         <link linkend="tp-cli-channel-type-file-transfer-signal-callback-file-transfer-state-changed">tp_cli_channel_type_file_transfer_signal_callback_file_transfer_state_changed</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>
Connect a handler to the signal FileTransferStateChanged.
</para>
<para>
Emitted when the state of a file transfer changes.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="TpChannel"><type>TpChannel</type></link> or subclass
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara> Callback to be called when the signal is
  received
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> User-supplied data for the callback
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>destroy</parameter>&#160;:</term>
<listitem><simpara> Destructor for the user-supplied data, which
  will be called when this signal is disconnected, or
  before this function returns <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GObject"><type>GObject</type></link> which will be weakly referenced; 
  if it is destroyed, this callback will automatically be
  disconnected
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> If not <link linkend="NULL--CAPS"><literal>NULL</literal></link>, used to raise an error if <link linkend="NULL--CAPS"><literal>NULL</literal></link> is
  returned
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a <link linkend="TpProxySignalConnection"><type>TpProxySignalConnection</type></link> containing all of the
above, which can be used to disconnect the signal; or
<link linkend="NULL--CAPS"><literal>NULL</literal></link> if the proxy does not have the desired interface
or has become invalid.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-cli-channel-type-file-transfer-connect-to-initial-offset-defined" role="function">
<title>tp_cli_channel_type_file_transfer_connect_to_initial_offset_defined ()</title>
<indexterm zone="tp-cli-channel-type-file-transfer-connect-to-initial-offset-defined"><primary sortas="tp_cli_channel_type_file_transfer_connect_to_initial_offset_defined">tp_cli_channel_type_file_transfer_connect_to_initial_offset_defined</primary></indexterm><programlisting><link linkend="TpProxySignalConnection">TpProxySignalConnection</link> * tp_cli_channel_type_file_transfer_connect_to_initial_offset_defined
                                                        (<link linkend="TpChannel">TpChannel</link> *proxy,
                                                         <link linkend="tp-cli-channel-type-file-transfer-signal-callback-initial-offset-defined">tp_cli_channel_type_file_transfer_signal_callback_initial_offset_defined</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>
Connect a handler to the signal InitialOffsetDefined.
</para>
<para>
Emitted when the value of the &lt;tp:member-ref&gt;InitialOffset&lt;/tp:member-ref&gt;         property has been negotiated. This signal MUST be emitted before the channel         becomes Open and clients have to use this offset when transferring the         file.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="TpChannel"><type>TpChannel</type></link> or subclass
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara> Callback to be called when the signal is
  received
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> User-supplied data for the callback
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>destroy</parameter>&#160;:</term>
<listitem><simpara> Destructor for the user-supplied data, which
  will be called when this signal is disconnected, or
  before this function returns <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GObject"><type>GObject</type></link> which will be weakly referenced; 
  if it is destroyed, this callback will automatically be
  disconnected
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> If not <link linkend="NULL--CAPS"><literal>NULL</literal></link>, used to raise an error if <link linkend="NULL--CAPS"><literal>NULL</literal></link> is
  returned
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a <link linkend="TpProxySignalConnection"><type>TpProxySignalConnection</type></link> containing all of the
above, which can be used to disconnect the signal; or
<link linkend="NULL--CAPS"><literal>NULL</literal></link> if the proxy does not have the desired interface
or has become invalid.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-cli-channel-type-file-transfer-connect-to-transferred-bytes-changed" role="function">
<title>tp_cli_channel_type_file_transfer_connect_to_transferred_bytes_changed ()</title>
<indexterm zone="tp-cli-channel-type-file-transfer-connect-to-transferred-bytes-changed"><primary sortas="tp_cli_channel_type_file_transfer_connect_to_transferred_bytes_changed">tp_cli_channel_type_file_transfer_connect_to_transferred_bytes_changed</primary></indexterm><programlisting><link linkend="TpProxySignalConnection">TpProxySignalConnection</link> * tp_cli_channel_type_file_transfer_connect_to_transferred_bytes_changed
                                                        (<link linkend="TpChannel">TpChannel</link> *proxy,
                                                         <link linkend="tp-cli-channel-type-file-transfer-signal-callback-transferred-bytes-changed">tp_cli_channel_type_file_transfer_signal_callback_transferred_bytes_changed</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>
Connect a handler to the signal TransferredBytesChanged.
</para>
<para>
Emitted when the number of transferred bytes changes. This will not be         signalled with every single byte change. Instead, the most frequent         this signal will be emitted is once a second. This should be         sufficient, and the &lt;tp:member-ref&gt;TransferredBytes&lt;/tp:member-ref&gt;         property SHOULD NOT be polled.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="TpChannel"><type>TpChannel</type></link> or subclass
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara> Callback to be called when the signal is
  received
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> User-supplied data for the callback
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>destroy</parameter>&#160;:</term>
<listitem><simpara> Destructor for the user-supplied data, which
  will be called when this signal is disconnected, or
  before this function returns <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GObject"><type>GObject</type></link> which will be weakly referenced; 
  if it is destroyed, this callback will automatically be
  disconnected
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> If not <link linkend="NULL--CAPS"><literal>NULL</literal></link>, used to raise an error if <link linkend="NULL--CAPS"><literal>NULL</literal></link> is
  returned
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a <link linkend="TpProxySignalConnection"><type>TpProxySignalConnection</type></link> containing all of the
above, which can be used to disconnect the signal; or
<link linkend="NULL--CAPS"><literal>NULL</literal></link> if the proxy does not have the desired interface
or has become invalid.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-cli-channel-type-file-transfer-run-accept-file" role="function">
<title>tp_cli_channel_type_file_transfer_run_accept_file ()</title>
<indexterm zone="tp-cli-channel-type-file-transfer-run-accept-file"><primary sortas="tp_cli_channel_type_file_transfer_run_accept_file">tp_cli_channel_type_file_transfer_run_accept_file</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            tp_cli_channel_type_file_transfer_run_accept_file
                                                        (<link linkend="TpChannel">TpChannel</link> *proxy,
                                                         <link linkend="gint">gint</link> timeout_ms,
                                                         <link linkend="guint">guint</link> in_Address_Type,
                                                         <link linkend="guint">guint</link> in_Access_Control,
                                                         const <link linkend="GValue">GValue</link> *in_Access_Control_Param,
                                                         <link linkend="guint64">guint64</link> in_Offset,
                                                         <link linkend="GValue">GValue</link> **out_Address,
                                                         <link linkend="GError">GError</link> **error,
                                                         <link linkend="GMainLoop">GMainLoop</link> **loop);</programlisting>
<para>
Call the method AcceptFile and run the main loop
until it returns. Before calling this method, you must
add a reference to any borrowed objects you need to keep,
and generally ensure that everything is in a consistent
state.
</para>
<para>
Accept a file transfer that&apos;s in the Pending state. The file         transfer&apos;s state becomes Accepted after this method is called.         At this point the client can connect to the socket. CM MUST emit         &lt;tp:member-ref&gt;InitialOffsetDefined&lt;/tp:member-ref&gt; and change         the state to Open before writing to the socket.         Then &lt;tp:member-ref&gt;InitialOffset&lt;/tp:member-ref&gt; should be respected in case         its value differs from the offset that was specified as an argument         to AcceptFile.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="TpChannel"><type>TpChannel</type></link> or subclass
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>timeout_ms</parameter>&#160;:</term>
<listitem><simpara> Timeout in milliseconds, or -1 for default
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Address_Type</parameter>&#160;:</term>
<listitem><simpara> Used to pass an 'in' argument: The type of address the connection manager should listen on.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Access_Control</parameter>&#160;:</term>
<listitem><simpara> Used to pass an 'in' argument: The type of access control the connection manager should apply to           the socket.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Access_Control_Param</parameter>&#160;:</term>
<listitem><simpara> Used to pass an 'in' argument: A parameter for the access control type, to be interpreted as           specified in the documentation for the Socket_Access_Control enum.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Offset</parameter>&#160;:</term>
<listitem><simpara> Used to pass an 'in' argument: The desired offset in bytes where the file transfer should start.           The offset is taken from the beginning of the file. Specifying an           offset of zero will start the transfer from the beginning of the           file. The offset that is actually given in the           &lt;tp:member-ref&gt;InitialOffset&lt;/tp:member-ref&gt; property can differ           from this argument where the requested offset is not supported.           (For example, some protocols do not support offsets at all so           the InitialOffset property will always be 0.)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Address</parameter>&#160;:</term>
<listitem><simpara> Used to return an 'out' argument if <link linkend="TRUE--CAPS"><literal>TRUE</literal></link> is returned: The address on which the connection manager will listen for           connections for this file transfer.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> If not <link linkend="NULL--CAPS"><literal>NULL</literal></link>, used to return errors if <link linkend="FALSE--CAPS"><literal>FALSE</literal></link> 
 is returned
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>loop</parameter>&#160;:</term>
<listitem><simpara> If not <link linkend="NULL--CAPS"><literal>NULL</literal></link>, set before re-entering 
 the main loop, to point to a <link linkend="GMainLoop"><type>GMainLoop</type></link> 
 which can be used to cancel this call with 
 <link linkend="g-main-loop-quit"><function>g_main_loop_quit()</function></link>, causing a return of 
 <link linkend="FALSE--CAPS"><literal>FALSE</literal></link> with <parameter>error</parameter> set to <link linkend="TP-DBUS-ERROR-CANCELLED--CAPS"><literal>TP_DBUS_ERROR_CANCELLED</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE on success, FALSE and sets <parameter>error</parameter> on error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-cli-channel-type-file-transfer-run-provide-file" role="function">
<title>tp_cli_channel_type_file_transfer_run_provide_file ()</title>
<indexterm zone="tp-cli-channel-type-file-transfer-run-provide-file"><primary sortas="tp_cli_channel_type_file_transfer_run_provide_file">tp_cli_channel_type_file_transfer_run_provide_file</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            tp_cli_channel_type_file_transfer_run_provide_file
                                                        (<link linkend="TpChannel">TpChannel</link> *proxy,
                                                         <link linkend="gint">gint</link> timeout_ms,
                                                         <link linkend="guint">guint</link> in_Address_Type,
                                                         <link linkend="guint">guint</link> in_Access_Control,
                                                         const <link linkend="GValue">GValue</link> *in_Access_Control_Param,
                                                         <link linkend="GValue">GValue</link> **out_Address,
                                                         <link linkend="GError">GError</link> **error,
                                                         <link linkend="GMainLoop">GMainLoop</link> **loop);</programlisting>
<para>
Call the method ProvideFile and run the main loop
until it returns. Before calling this method, you must
add a reference to any borrowed objects you need to keep,
and generally ensure that everything is in a consistent
state.
</para>
<para>
Provide the file for an outgoing file transfer which has been offered.         Opens a socket that the client can use to provide a file to the connection manager.         The channel MUST have been requested, and will change state         to Open when this method is called if its state was Accepted.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="TpChannel"><type>TpChannel</type></link> or subclass
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>timeout_ms</parameter>&#160;:</term>
<listitem><simpara> Timeout in milliseconds, or -1 for default
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Address_Type</parameter>&#160;:</term>
<listitem><simpara> Used to pass an 'in' argument: The type of address the connection manager should listen on.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Access_Control</parameter>&#160;:</term>
<listitem><simpara> Used to pass an 'in' argument: The type of access control the connection manager should apply to           the socket.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Access_Control_Param</parameter>&#160;:</term>
<listitem><simpara> Used to pass an 'in' argument: A parameter for the access control type, to be interpreted as           specified in the documentation for the Socket_Access_Control enum.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Address</parameter>&#160;:</term>
<listitem><simpara> Used to return an 'out' argument if <link linkend="TRUE--CAPS"><literal>TRUE</literal></link> is returned: The address on which the connection manager will listen for           connections for this file transfer.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> If not <link linkend="NULL--CAPS"><literal>NULL</literal></link>, used to return errors if <link linkend="FALSE--CAPS"><literal>FALSE</literal></link> 
 is returned
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>loop</parameter>&#160;:</term>
<listitem><simpara> If not <link linkend="NULL--CAPS"><literal>NULL</literal></link>, set before re-entering 
 the main loop, to point to a <link linkend="GMainLoop"><type>GMainLoop</type></link> 
 which can be used to cancel this call with 
 <link linkend="g-main-loop-quit"><function>g_main_loop_quit()</function></link>, causing a return of 
 <link linkend="FALSE--CAPS"><literal>FALSE</literal></link> with <parameter>error</parameter> set to <link linkend="TP-DBUS-ERROR-CANCELLED--CAPS"><literal>TP_DBUS_ERROR_CANCELLED</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE on success, FALSE and sets <parameter>error</parameter> on error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-cli-channel-type-file-transfer-signal-callback-file-transfer-state-changed" role="function">
<title>tp_cli_channel_type_file_transfer_signal_callback_file_transfer_state_changed ()</title>
<indexterm zone="tp-cli-channel-type-file-transfer-signal-callback-file-transfer-state-changed"><primary sortas="tp_cli_channel_type_file_transfer_signal_callback_file_transfer_state_changed">tp_cli_channel_type_file_transfer_signal_callback_file_transfer_state_changed</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_cli_channel_type_file_transfer_signal_callback_file_transfer_state_changed)
                                                        (<link linkend="TpChannel">TpChannel</link> *proxy,
                                                         <link linkend="guint">guint</link> arg_State,
                                                         <link linkend="guint">guint</link> arg_Reason,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);</programlisting>
<para>
Represents the signature of a callback for the signal FileTransferStateChanged.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> The proxy on which <link linkend="tp-cli-channel-type-file-transfer-connect-to-file-transfer-state-changed"><function>tp_cli_channel_type_file_transfer_connect_to_file_transfer_state_changed()</function></link>
 was called
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_State</parameter>&#160;:</term>
<listitem><simpara> The new state of the file transfer; see the File_Transfer_State enumeration.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Reason</parameter>&#160;:</term>
<listitem><simpara> The reason for the state change; see the File_Transfer_State_Change_Reason           enumeration.           The value will always be File_Transfer_State_Change_Reason_None, except           when changing state to cancelled.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> User-supplied data
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> User-supplied weakly referenced object
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-cli-channel-type-file-transfer-signal-callback-initial-offset-defined" role="function">
<title>tp_cli_channel_type_file_transfer_signal_callback_initial_offset_defined ()</title>
<indexterm zone="tp-cli-channel-type-file-transfer-signal-callback-initial-offset-defined"><primary sortas="tp_cli_channel_type_file_transfer_signal_callback_initial_offset_defined">tp_cli_channel_type_file_transfer_signal_callback_initial_offset_defined</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_cli_channel_type_file_transfer_signal_callback_initial_offset_defined)
                                                        (<link linkend="TpChannel">TpChannel</link> *proxy,
                                                         <link linkend="guint64">guint64</link> arg_InitialOffset,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);</programlisting>
<para>
Represents the signature of a callback for the signal InitialOffsetDefined.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> The proxy on which <link linkend="tp-cli-channel-type-file-transfer-connect-to-initial-offset-defined"><function>tp_cli_channel_type_file_transfer_connect_to_initial_offset_defined()</function></link>
 was called
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_InitialOffset</parameter>&#160;:</term>
<listitem><simpara> The value of the &lt;tp:member-ref&gt;InitialOffset&lt;/tp:member-ref&gt; property.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> User-supplied data
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> User-supplied weakly referenced object
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-cli-channel-type-file-transfer-signal-callback-transferred-bytes-changed" role="function">
<title>tp_cli_channel_type_file_transfer_signal_callback_transferred_bytes_changed ()</title>
<indexterm zone="tp-cli-channel-type-file-transfer-signal-callback-transferred-bytes-changed"><primary sortas="tp_cli_channel_type_file_transfer_signal_callback_transferred_bytes_changed">tp_cli_channel_type_file_transfer_signal_callback_transferred_bytes_changed</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_cli_channel_type_file_transfer_signal_callback_transferred_bytes_changed)
                                                        (<link linkend="TpChannel">TpChannel</link> *proxy,
                                                         <link linkend="guint64">guint64</link> arg_Count,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);</programlisting>
<para>
Represents the signature of a callback for the signal TransferredBytesChanged.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> The proxy on which <link linkend="tp-cli-channel-type-file-transfer-connect-to-transferred-bytes-changed"><function>tp_cli_channel_type_file_transfer_connect_to_transferred_bytes_changed()</function></link>
 was called
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Count</parameter>&#160;:</term>
<listitem><simpara> The number of already transferred bytes.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> User-supplied data
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> User-supplied weakly referenced object
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>



<refsect1 id="telepathy-glib-channel-file-transfer.see-also">
<title>See Also</title>
#TpChannel
</refsect1>

</refentry>

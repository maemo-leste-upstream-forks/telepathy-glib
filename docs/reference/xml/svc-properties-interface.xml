<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="telepathy-glib-svc-properties-interface">
<refmeta>
<refentrytitle role="top_of_page" id="telepathy-glib-svc-properties-interface.top_of_page">Service-side Properties interface</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>TELEPATHY-GLIB Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>Service-side Properties interface</refname>
<refpurpose>GInterface for D-Bus objects exporting Telepathy
 properties</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv id="telepathy-glib-svc-properties-interface.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>

#include &lt;telepathy-glib/svc-properties-interface.h&gt;

                    <link linkend="TpSvcPropertiesInterface">TpSvcPropertiesInterface</link>;
                    <link linkend="TpSvcPropertiesInterfaceClass">TpSvcPropertiesInterfaceClass</link>;
<link linkend="void">void</link>                (<link linkend="tp-svc-properties-interface-get-properties-impl">*tp_svc_properties_interface_get_properties_impl</link>)
                                                        (<link linkend="TpSvcPropertiesInterface">TpSvcPropertiesInterface</link> *self,
                                                         const <link linkend="GArray">GArray</link> *properties,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-properties-interface-return-from-get-properties">tp_svc_properties_interface_return_from_get_properties</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *ret);
<link linkend="void">void</link>                <link linkend="tp-svc-properties-interface-implement-get-properties">tp_svc_properties_interface_implement_get_properties</link>
                                                        (<link linkend="TpSvcPropertiesInterfaceClass">TpSvcPropertiesInterfaceClass</link> *klass,
                                                         <link linkend="tp-svc-properties-interface-get-properties-impl">tp_svc_properties_interface_get_properties_impl</link> impl);
<link linkend="void">void</link>                (<link linkend="tp-svc-properties-interface-list-properties-impl">*tp_svc_properties_interface_list_properties_impl</link>)
                                                        (<link linkend="TpSvcPropertiesInterface">TpSvcPropertiesInterface</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-properties-interface-return-from-list-properties">tp_svc_properties_interface_return_from_list_properties</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *ret);
<link linkend="void">void</link>                <link linkend="tp-svc-properties-interface-implement-list-properties">tp_svc_properties_interface_implement_list_properties</link>
                                                        (<link linkend="TpSvcPropertiesInterfaceClass">TpSvcPropertiesInterfaceClass</link> *klass,
                                                         <link linkend="tp-svc-properties-interface-list-properties-impl">tp_svc_properties_interface_list_properties_impl</link> impl);
<link linkend="void">void</link>                (<link linkend="tp-svc-properties-interface-set-properties-impl">*tp_svc_properties_interface_set_properties_impl</link>)
                                                        (<link linkend="TpSvcPropertiesInterface">TpSvcPropertiesInterface</link> *self,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *properties,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-properties-interface-return-from-set-properties">tp_svc_properties_interface_return_from_set_properties</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);
<link linkend="void">void</link>                <link linkend="tp-svc-properties-interface-implement-set-properties">tp_svc_properties_interface_implement_set_properties</link>
                                                        (<link linkend="TpSvcPropertiesInterfaceClass">TpSvcPropertiesInterfaceClass</link> *klass,
                                                         <link linkend="tp-svc-properties-interface-set-properties-impl">tp_svc_properties_interface_set_properties_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-properties-interface-emit-properties-changed">tp_svc_properties_interface_emit_properties_changed</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *properties);
<link linkend="void">void</link>                <link linkend="tp-svc-properties-interface-emit-property-flags-changed">tp_svc_properties_interface_emit_property_flags_changed</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *properties);
</synopsis>
</refsynopsisdiv>









<refsect1 id="telepathy-glib-svc-properties-interface.description" role="desc">
<title role="desc.title">Description</title>
<para>
The Telepathy Properties interface associates a number of named properties
with a channel, connection or other D-Bus object. Signals are emitted
when the properties or their flags (readable/writable) change.</para>
<para>

</para>
</refsect1>

<refsect1 id="telepathy-glib-svc-properties-interface.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="TpSvcPropertiesInterface" role="struct">
<title>TpSvcPropertiesInterface</title>
<indexterm zone="TpSvcPropertiesInterface"><primary>TpSvcPropertiesInterface</primary></indexterm><programlisting>typedef struct _TpSvcPropertiesInterface TpSvcPropertiesInterface;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>

</para></refsect2>
<refsect2 id="TpSvcPropertiesInterfaceClass" role="struct">
<title>TpSvcPropertiesInterfaceClass</title>
<indexterm zone="TpSvcPropertiesInterfaceClass"><primary>TpSvcPropertiesInterfaceClass</primary></indexterm><programlisting>typedef struct _TpSvcPropertiesInterfaceClass TpSvcPropertiesInterfaceClass;</programlisting>
<para>
The class of TpSvcPropertiesInterface.</para>
<para>

</para></refsect2>
<refsect2 id="tp-svc-properties-interface-get-properties-impl" role="function">
<title>tp_svc_properties_interface_get_properties_impl ()</title>
<indexterm zone="tp-svc-properties-interface-get-properties-impl"><primary>tp_svc_properties_interface_get_properties_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_properties_interface_get_properties_impl)
                                                        (<link linkend="TpSvcPropertiesInterface">TpSvcPropertiesInterface</link> *self,
                                                         const <link linkend="GArray">GArray</link> *properties,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method GetProperties
on interface org.freedesktop.Telepathy.Properties</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>properties</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-properties-interface-return-from-get-properties" role="function">
<title>tp_svc_properties_interface_return_from_get_properties ()</title>
<indexterm zone="tp-svc-properties-interface-return-from-get-properties"><primary>tp_svc_properties_interface_return_from_get_properties</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_properties_interface_return_from_get_properties
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-properties-interface-implement-get-properties" role="function">
<title>tp_svc_properties_interface_implement_get_properties ()</title>
<indexterm zone="tp-svc-properties-interface-implement-get-properties"><primary>tp_svc_properties_interface_implement_get_properties</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_properties_interface_implement_get_properties
                                                        (<link linkend="TpSvcPropertiesInterfaceClass">TpSvcPropertiesInterfaceClass</link> *klass,
                                                         <link linkend="tp-svc-properties-interface-get-properties-impl">tp_svc_properties_interface_get_properties_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetProperties method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetProperties method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-properties-interface-list-properties-impl" role="function">
<title>tp_svc_properties_interface_list_properties_impl ()</title>
<indexterm zone="tp-svc-properties-interface-list-properties-impl"><primary>tp_svc_properties_interface_list_properties_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_properties_interface_list_properties_impl)
                                                        (<link linkend="TpSvcPropertiesInterface">TpSvcPropertiesInterface</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method ListProperties
on interface org.freedesktop.Telepathy.Properties</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-properties-interface-return-from-list-properties" role="function">
<title>tp_svc_properties_interface_return_from_list_properties ()</title>
<indexterm zone="tp-svc-properties-interface-return-from-list-properties"><primary>tp_svc_properties_interface_return_from_list_properties</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_properties_interface_return_from_list_properties
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-properties-interface-implement-list-properties" role="function">
<title>tp_svc_properties_interface_implement_list_properties ()</title>
<indexterm zone="tp-svc-properties-interface-implement-list-properties"><primary>tp_svc_properties_interface_implement_list_properties</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_properties_interface_implement_list_properties
                                                        (<link linkend="TpSvcPropertiesInterfaceClass">TpSvcPropertiesInterfaceClass</link> *klass,
                                                         <link linkend="tp-svc-properties-interface-list-properties-impl">tp_svc_properties_interface_list_properties_impl</link> impl);</programlisting>
<para>
Register an implementation for the ListProperties method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the ListProperties method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-properties-interface-set-properties-impl" role="function">
<title>tp_svc_properties_interface_set_properties_impl ()</title>
<indexterm zone="tp-svc-properties-interface-set-properties-impl"><primary>tp_svc_properties_interface_set_properties_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_properties_interface_set_properties_impl)
                                                        (<link linkend="TpSvcPropertiesInterface">TpSvcPropertiesInterface</link> *self,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *properties,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method SetProperties
on interface org.freedesktop.Telepathy.Properties</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>properties</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-properties-interface-return-from-set-properties" role="function">
<title>tp_svc_properties_interface_return_from_set_properties ()</title>
<indexterm zone="tp-svc-properties-interface-return-from-set-properties"><primary>tp_svc_properties_interface_return_from_set_properties</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_properties_interface_return_from_set_properties
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-properties-interface-implement-set-properties" role="function">
<title>tp_svc_properties_interface_implement_set_properties ()</title>
<indexterm zone="tp-svc-properties-interface-implement-set-properties"><primary>tp_svc_properties_interface_implement_set_properties</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_properties_interface_implement_set_properties
                                                        (<link linkend="TpSvcPropertiesInterfaceClass">TpSvcPropertiesInterfaceClass</link> *klass,
                                                         <link linkend="tp-svc-properties-interface-set-properties-impl">tp_svc_properties_interface_set_properties_impl</link> impl);</programlisting>
<para>
Register an implementation for the SetProperties method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the SetProperties method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-properties-interface-emit-properties-changed" role="function">
<title>tp_svc_properties_interface_emit_properties_changed ()</title>
<indexterm zone="tp-svc-properties-interface-emit-properties-changed"><primary>tp_svc_properties_interface_emit_properties_changed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_properties_interface_emit_properties_changed
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *properties);</programlisting>
<para>
Emit the PropertiesChanged D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>properties</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-properties-interface-emit-property-flags-changed" role="function">
<title>tp_svc_properties_interface_emit_property_flags_changed ()</title>
<indexterm zone="tp-svc-properties-interface-emit-property-flags-changed"><primary>tp_svc_properties_interface_emit_property_flags_changed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_properties_interface_emit_property_flags_changed
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *properties);</programlisting>
<para>
Emit the PropertyFlagsChanged D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>properties</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>



<refsect1 id="telepathy-glib-svc-properties-interface.see-also">
<title>See Also</title>
<link linkend="TpPropertiesMixin"><type>TpPropertiesMixin</type></link>
</refsect1>

</refentry>

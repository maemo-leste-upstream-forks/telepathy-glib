<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="telepathy-glib-svc-connection-manager">
<refmeta>
<refentrytitle role="top_of_page">Service-side Connection Manager interface</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>TELEPATHY-GLIB Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>Service-side Connection Manager interface</refname>
<refpurpose>GInterface for Telepathy ConnectionManager objects</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv role="synopsis">
<title role="synopsis.title">Synopsis</title>
<anchor id="TpSvcConnectionManager"/>
<synopsis>

#include &lt;telepathy-glib/svc-connection-manager.h&gt;


                    <link linkend="TpSvcConnectionManager-struct">TpSvcConnectionManager</link>;
                    <link linkend="TpSvcConnectionManagerClass">TpSvcConnectionManagerClass</link>;
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-manager-get-parameters-impl">*tp_svc_connection_manager_get_parameters_impl</link>)
                                                        (<link linkend="TpSvcConnectionManager">TpSvcConnectionManager</link> *self,
                                                         const <link linkend="gchar">gchar</link> *proto,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-manager-implement-get-parameters">tp_svc_connection_manager_implement_get_parameters</link>
                                                        (<link linkend="TpSvcConnectionManagerClass">TpSvcConnectionManagerClass</link> *klass,
                                                         <link linkend="tp-svc-connection-manager-get-parameters-impl">tp_svc_connection_manager_get_parameters_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-manager-return-from-get-parameters">tp_svc_connection_manager_return_from_get_parameters</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *ret);
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-manager-list-protocols-impl">*tp_svc_connection_manager_list_protocols_impl</link>)
                                                        (<link linkend="TpSvcConnectionManager">TpSvcConnectionManager</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-manager-implement-list-protocols">tp_svc_connection_manager_implement_list_protocols</link>
                                                        (<link linkend="TpSvcConnectionManagerClass">TpSvcConnectionManagerClass</link> *klass,
                                                         <link linkend="tp-svc-connection-manager-list-protocols-impl">tp_svc_connection_manager_list_protocols_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-manager-return-from-list-protocols">tp_svc_connection_manager_return_from_list_protocols</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="gchar">gchar</link> **ret);
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-manager-request-connection-impl">*tp_svc_connection_manager_request_connection_impl</link>)
                                                        (<link linkend="TpSvcConnectionManager">TpSvcConnectionManager</link> *self,
                                                         const <link linkend="gchar">gchar</link> *proto,
                                                         <link linkend="GHashTable">GHashTable</link> *parameters,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-manager-implement-request-connection">tp_svc_connection_manager_implement_request_connection</link>
                                                        (<link linkend="TpSvcConnectionManagerClass">TpSvcConnectionManagerClass</link> *klass,
                                                         <link linkend="tp-svc-connection-manager-request-connection-impl">tp_svc_connection_manager_request_connection_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-manager-return-from-request-connection">tp_svc_connection_manager_return_from_request_connection</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="gchar">gchar</link> *ret,
                                                         const <link linkend="gchar">gchar</link> *ret1);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-manager-emit-new-connection">tp_svc_connection_manager_emit_new_connection</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="gchar">gchar</link> *bus_name,
                                                         const <link linkend="gchar">gchar</link> *object_path,
                                                         const <link linkend="gchar">gchar</link> *proto);


</synopsis>
</refsynopsisdiv>

<refsect1 role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>

  <link linkend="GInterface">GInterface</link>
   +----TpSvcConnectionManager
</synopsis>

</refsect1>




<refsect1 role="implementations">
<title role="implementations.title">Known Implementations</title>
<para>
TpSvcConnectionManager is implemented by
 <link linkend="TpBaseConnectionManager">TpBaseConnectionManager</link>.</para>

</refsect1>




<refsect1 role="desc">
<title role="desc.title">Description</title>
<para>
The <link linkend="TpSvcConnectionManager"><type>TpSvcConnectionManager</type></link> interface (auto-generated from the Telepathy
spec) makes it easier to export an object implementing the Telepathy
ConnectionManager interface, with the correct method and signal signatures,
and emit signals from that object in a type-safe way.</para>
<para>

</para>
</refsect1>

<refsect1 role="details">
<title role="details.title">Details</title>
<refsect2>
<title><anchor id="TpSvcConnectionManager-struct" role="struct"/>TpSvcConnectionManager</title>
<indexterm><primary>TpSvcConnectionManager</primary></indexterm><programlisting>typedef struct _TpSvcConnectionManager TpSvcConnectionManager;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="TpSvcConnectionManagerClass" role="struct"/>TpSvcConnectionManagerClass</title>
<indexterm><primary>TpSvcConnectionManagerClass</primary></indexterm><programlisting>typedef struct _TpSvcConnectionManagerClass TpSvcConnectionManagerClass;</programlisting>
<para>
The class of TpSvcConnectionManager.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="tp-svc-connection-manager-get-parameters-impl" role="function"/>tp_svc_connection_manager_get_parameters_impl ()</title>
<indexterm><primary>tp_svc_connection_manager_get_parameters_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_manager_get_parameters_impl)
                                                        (<link linkend="TpSvcConnectionManager">TpSvcConnectionManager</link> *self,
                                                         const <link linkend="gchar">gchar</link> *proto,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method GetParameters
on interface org.freedesktop.Telepathy.ConnectionManager</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>proto</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-connection-manager-implement-get-parameters" role="function"/>tp_svc_connection_manager_implement_get_parameters ()</title>
<indexterm><primary>tp_svc_connection_manager_implement_get_parameters</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_manager_implement_get_parameters
                                                        (<link linkend="TpSvcConnectionManagerClass">TpSvcConnectionManagerClass</link> *klass,
                                                         <link linkend="tp-svc-connection-manager-get-parameters-impl">tp_svc_connection_manager_get_parameters_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetParameters method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetParameters method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-connection-manager-return-from-get-parameters" role="function"/>tp_svc_connection_manager_return_from_get_parameters ()</title>
<indexterm><primary>tp_svc_connection_manager_return_from_get_parameters</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_manager_return_from_get_parameters
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-connection-manager-list-protocols-impl" role="function"/>tp_svc_connection_manager_list_protocols_impl ()</title>
<indexterm><primary>tp_svc_connection_manager_list_protocols_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_manager_list_protocols_impl)
                                                        (<link linkend="TpSvcConnectionManager">TpSvcConnectionManager</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method ListProtocols
on interface org.freedesktop.Telepathy.ConnectionManager</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-connection-manager-implement-list-protocols" role="function"/>tp_svc_connection_manager_implement_list_protocols ()</title>
<indexterm><primary>tp_svc_connection_manager_implement_list_protocols</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_manager_implement_list_protocols
                                                        (<link linkend="TpSvcConnectionManagerClass">TpSvcConnectionManagerClass</link> *klass,
                                                         <link linkend="tp-svc-connection-manager-list-protocols-impl">tp_svc_connection_manager_list_protocols_impl</link> impl);</programlisting>
<para>
Register an implementation for the ListProtocols method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the ListProtocols method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-connection-manager-return-from-list-protocols" role="function"/>tp_svc_connection_manager_return_from_list_protocols ()</title>
<indexterm><primary>tp_svc_connection_manager_return_from_list_protocols</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_manager_return_from_list_protocols
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="gchar">gchar</link> **ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-connection-manager-request-connection-impl" role="function"/>tp_svc_connection_manager_request_connection_impl ()</title>
<indexterm><primary>tp_svc_connection_manager_request_connection_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_manager_request_connection_impl)
                                                        (<link linkend="TpSvcConnectionManager">TpSvcConnectionManager</link> *self,
                                                         const <link linkend="gchar">gchar</link> *proto,
                                                         <link linkend="GHashTable">GHashTable</link> *parameters,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method RequestConnection
on interface org.freedesktop.Telepathy.ConnectionManager</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>proto</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>parameters</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-connection-manager-implement-request-connection" role="function"/>tp_svc_connection_manager_implement_request_connection ()</title>
<indexterm><primary>tp_svc_connection_manager_implement_request_connection</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_manager_implement_request_connection
                                                        (<link linkend="TpSvcConnectionManagerClass">TpSvcConnectionManagerClass</link> *klass,
                                                         <link linkend="tp-svc-connection-manager-request-connection-impl">tp_svc_connection_manager_request_connection_impl</link> impl);</programlisting>
<para>
Register an implementation for the RequestConnection method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the RequestConnection method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-connection-manager-return-from-request-connection" role="function"/>tp_svc_connection_manager_return_from_request_connection ()</title>
<indexterm><primary>tp_svc_connection_manager_return_from_request_connection</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_manager_return_from_request_connection
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="gchar">gchar</link> *ret,
                                                         const <link linkend="gchar">gchar</link> *ret1);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret1</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-connection-manager-emit-new-connection" role="function"/>tp_svc_connection_manager_emit_new_connection ()</title>
<indexterm><primary>tp_svc_connection_manager_emit_new_connection</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_manager_emit_new_connection
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="gchar">gchar</link> *bus_name,
                                                         const <link linkend="gchar">gchar</link> *object_path,
                                                         const <link linkend="gchar">gchar</link> *proto);</programlisting>
<para>
Emit the NewConnection D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bus_name</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>object_path</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>proto</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>



<refsect1>
<title>See Also</title>
<link linkend="TpBaseConnection"><type>TpBaseConnection</type></link>
</refsect1>


<refsect1><refsect2 /><refsect2 /></refsect1>
</refentry>

<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="telepathy-glib-proxy-tp-properties">
<refmeta>
<refentrytitle role="top_of_page" id="telepathy-glib-proxy-tp-properties.top_of_page">TpProxy Telepathy Properties</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>TELEPATHY-GLIB Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>TpProxy Telepathy Properties</refname>
<refpurpose>The Telepathy Properties interface</refpurpose>
</refnamediv>

<refsynopsisdiv id="telepathy-glib-proxy-tp-properties.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>

#include &lt;telepathy-glib/proxy.h&gt;

<link linkend="void">void</link>                (<link linkend="tp-cli-properties-interface-callback-for-get-properties">*tp_cli_properties_interface_callback_for_get_properties</link>)
                                                        (<link linkend="TpProxy">TpProxy</link> *proxy,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *out_Values,
                                                         const <link linkend="GError">GError</link> *error,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);
<link linkend="TpProxyPendingCall">TpProxyPendingCall</link> * <link linkend="tp-cli-properties-interface-call-get-properties">tp_cli_properties_interface_call_get_properties</link>
                                                        (<link linkend="gpointer">gpointer</link> proxy,
                                                         <link linkend="gint">gint</link> timeout_ms,
                                                         const <link linkend="GArray">GArray</link> *in_Properties,
                                                         <link linkend="tp-cli-properties-interface-callback-for-get-properties">tp_cli_properties_interface_callback_for_get_properties</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object);
<link linkend="gboolean">gboolean</link>            <link linkend="tp-cli-properties-interface-run-get-properties">tp_cli_properties_interface_run_get_properties</link>
                                                        (<link linkend="gpointer">gpointer</link> proxy,
                                                         <link linkend="gint">gint</link> timeout_ms,
                                                         const <link linkend="GArray">GArray</link> *in_Properties,
                                                         <link linkend="GPtrArray">GPtrArray</link> **out_Values,
                                                         <link linkend="GError">GError</link> **error,
                                                         <link linkend="GMainLoop">GMainLoop</link> **loop);
<link linkend="void">void</link>                (<link linkend="tp-cli-properties-interface-callback-for-list-properties">*tp_cli_properties_interface_callback_for_list_properties</link>)
                                                        (<link linkend="TpProxy">TpProxy</link> *proxy,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *out_Available_Properties,
                                                         const <link linkend="GError">GError</link> *error,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);
<link linkend="TpProxyPendingCall">TpProxyPendingCall</link> * <link linkend="tp-cli-properties-interface-call-list-properties">tp_cli_properties_interface_call_list_properties</link>
                                                        (<link linkend="gpointer">gpointer</link> proxy,
                                                         <link linkend="gint">gint</link> timeout_ms,
                                                         <link linkend="tp-cli-properties-interface-callback-for-list-properties">tp_cli_properties_interface_callback_for_list_properties</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object);
<link linkend="gboolean">gboolean</link>            <link linkend="tp-cli-properties-interface-run-list-properties">tp_cli_properties_interface_run_list_properties</link>
                                                        (<link linkend="gpointer">gpointer</link> proxy,
                                                         <link linkend="gint">gint</link> timeout_ms,
                                                         <link linkend="GPtrArray">GPtrArray</link> **out_Available_Properties,
                                                         <link linkend="GError">GError</link> **error,
                                                         <link linkend="GMainLoop">GMainLoop</link> **loop);
<link linkend="void">void</link>                (<link linkend="tp-cli-properties-interface-callback-for-set-properties">*tp_cli_properties_interface_callback_for_set_properties</link>)
                                                        (<link linkend="TpProxy">TpProxy</link> *proxy,
                                                         const <link linkend="GError">GError</link> *error,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);
<link linkend="TpProxyPendingCall">TpProxyPendingCall</link> * <link linkend="tp-cli-properties-interface-call-set-properties">tp_cli_properties_interface_call_set_properties</link>
                                                        (<link linkend="gpointer">gpointer</link> proxy,
                                                         <link linkend="gint">gint</link> timeout_ms,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *in_Properties,
                                                         <link linkend="tp-cli-properties-interface-callback-for-set-properties">tp_cli_properties_interface_callback_for_set_properties</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object);
<link linkend="gboolean">gboolean</link>            <link linkend="tp-cli-properties-interface-run-set-properties">tp_cli_properties_interface_run_set_properties</link>
                                                        (<link linkend="gpointer">gpointer</link> proxy,
                                                         <link linkend="gint">gint</link> timeout_ms,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *in_Properties,
                                                         <link linkend="GError">GError</link> **error,
                                                         <link linkend="GMainLoop">GMainLoop</link> **loop);
<link linkend="void">void</link>                (<link linkend="tp-cli-properties-interface-signal-callback-properties-changed">*tp_cli_properties_interface_signal_callback_properties_changed</link>)
                                                        (<link linkend="TpProxy">TpProxy</link> *proxy,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *arg_Properties,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);
<link linkend="TpProxySignalConnection">TpProxySignalConnection</link> * <link linkend="tp-cli-properties-interface-connect-to-properties-changed">tp_cli_properties_interface_connect_to_properties_changed</link>
                                                        (<link linkend="gpointer">gpointer</link> proxy,
                                                         <link linkend="tp-cli-properties-interface-signal-callback-properties-changed">tp_cli_properties_interface_signal_callback_properties_changed</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object,
                                                         <link linkend="GError">GError</link> **error);
<link linkend="void">void</link>                (<link linkend="tp-cli-properties-interface-signal-callback-property-flags-changed">*tp_cli_properties_interface_signal_callback_property_flags_changed</link>)
                                                        (<link linkend="TpProxy">TpProxy</link> *proxy,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *arg_Properties,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);
<link linkend="TpProxySignalConnection">TpProxySignalConnection</link> * <link linkend="tp-cli-properties-interface-connect-to-property-flags-changed">tp_cli_properties_interface_connect_to_property_flags_changed</link>
                                                        (<link linkend="gpointer">gpointer</link> proxy,
                                                         <link linkend="tp-cli-properties-interface-signal-callback-property-flags-changed">tp_cli_properties_interface_signal_callback_property_flags_changed</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object,
                                                         <link linkend="GError">GError</link> **error);
</synopsis>
</refsynopsisdiv>









<refsect1 id="telepathy-glib-proxy-tp-properties.description" role="desc">
<title role="desc.title">Description</title>
<para>
As well as <link linkend="TpProxy"><type>TpProxy</type></link>, proxy.h includes auto-generated client wrappers for the
Telepathy Properties interface, which can be implemented by any type of
object.
</para>
<para>
The Telepathy Properties interface should not be confused with the D-Bus
core Properties interface.</para>
<para>
</para>
</refsect1>

<refsect1 id="telepathy-glib-proxy-tp-properties.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="tp-cli-properties-interface-callback-for-get-properties" role="function">
<title>tp_cli_properties_interface_callback_for_get_properties ()</title>
<indexterm zone="tp-cli-properties-interface-callback-for-get-properties"><primary sortas="tp_cli_properties_interface_callback_for_get_properties">tp_cli_properties_interface_callback_for_get_properties</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_cli_properties_interface_callback_for_get_properties)
                                                        (<link linkend="TpProxy">TpProxy</link> *proxy,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *out_Values,
                                                         const <link linkend="GError">GError</link> *error,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);</programlisting>
<para>
Signature of the callback called when a GetProperties method call
succeeds or fails.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> the proxy on which the call was made
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Values</parameter>&#160;:</term>
<listitem><simpara> Used to return an 'out' argument if <parameter>error</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>: &lt;tp:docstring xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;           &lt;p&gt;An array of structs containing:&lt;/p&gt;           &lt;ul&gt;             &lt;li&gt;integer identifiers&lt;/li&gt;             &lt;li&gt;variant boxed values&lt;/li&gt;           &lt;/ul&gt;
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> <link linkend="NULL--CAPS"><literal>NULL</literal></link> on success, or an error on failure
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> user-supplied data
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> user-supplied object
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-cli-properties-interface-call-get-properties" role="function">
<title>tp_cli_properties_interface_call_get_properties ()</title>
<indexterm zone="tp-cli-properties-interface-call-get-properties"><primary sortas="tp_cli_properties_interface_call_get_properties">tp_cli_properties_interface_call_get_properties</primary></indexterm><programlisting><link linkend="TpProxyPendingCall">TpProxyPendingCall</link> * tp_cli_properties_interface_call_get_properties
                                                        (<link linkend="gpointer">gpointer</link> proxy,
                                                         <link linkend="gint">gint</link> timeout_ms,
                                                         const <link linkend="GArray">GArray</link> *in_Properties,
                                                         <link linkend="tp-cli-properties-interface-callback-for-get-properties">tp_cli_properties_interface_callback_for_get_properties</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object);</programlisting>
<para>
Start a GetProperties method call.
</para>
<para>
Returns an array of (identifier, value) pairs containing the current         values of the given properties.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="TpProxy"><type>TpProxy</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>timeout_ms</parameter>&#160;:</term>
<listitem><simpara> the timeout in milliseconds, or -1 to use the
  default
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Properties</parameter>&#160;:</term>
<listitem><simpara> Used to pass an 'in' argument: An array of property identifiers
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara> called when the method call succeeds or fails;
  may be <link linkend="NULL--CAPS"><literal>NULL</literal></link> to make a "fire and forget" call with no 
  reply tracking
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> user-supplied data passed to the callback;
  must be <link linkend="NULL--CAPS"><literal>NULL</literal></link> if <parameter>callback</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>destroy</parameter>&#160;:</term>
<listitem><simpara> called with the user_data as argument, after the
  call has succeeded, failed or been cancelled;
  must be <link linkend="NULL--CAPS"><literal>NULL</literal></link> if <parameter>callback</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> If not <link linkend="NULL--CAPS"><literal>NULL</literal></link>, a <link linkend="GObject"><type>GObject</type></link> which will be 
  weakly referenced; if it is destroyed, this call 
  will automatically be cancelled. Must be <link linkend="NULL--CAPS"><literal>NULL</literal></link> if 
  <parameter>callback</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a <link linkend="TpProxyPendingCall"><type>TpProxyPendingCall</type></link> representing the call in
 progress. It is borrowed from the object, and will become
 invalid when the callback is called, the call is
 cancelled or the <link linkend="TpProxy"><type>TpProxy</type></link> becomes invalid.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-cli-properties-interface-run-get-properties" role="function">
<title>tp_cli_properties_interface_run_get_properties ()</title>
<indexterm zone="tp-cli-properties-interface-run-get-properties"><primary sortas="tp_cli_properties_interface_run_get_properties">tp_cli_properties_interface_run_get_properties</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            tp_cli_properties_interface_run_get_properties
                                                        (<link linkend="gpointer">gpointer</link> proxy,
                                                         <link linkend="gint">gint</link> timeout_ms,
                                                         const <link linkend="GArray">GArray</link> *in_Properties,
                                                         <link linkend="GPtrArray">GPtrArray</link> **out_Values,
                                                         <link linkend="GError">GError</link> **error,
                                                         <link linkend="GMainLoop">GMainLoop</link> **loop);</programlisting>
<para>
Call the method GetProperties and run the main loop
until it returns. Before calling this method, you must
add a reference to any borrowed objects you need to keep,
and generally ensure that everything is in a consistent
state.
</para>
<para>
Returns an array of (identifier, value) pairs containing the current         values of the given properties.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="TpProxy"><type>TpProxy</type></link> or subclass
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>timeout_ms</parameter>&#160;:</term>
<listitem><simpara> Timeout in milliseconds, or -1 for default
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Properties</parameter>&#160;:</term>
<listitem><simpara> Used to pass an 'in' argument: An array of property identifiers
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Values</parameter>&#160;:</term>
<listitem><simpara> Used to return an 'out' argument if <link linkend="TRUE--CAPS"><literal>TRUE</literal></link> is returned: &lt;tp:docstring xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;           &lt;p&gt;An array of structs containing:&lt;/p&gt;           &lt;ul&gt;             &lt;li&gt;integer identifiers&lt;/li&gt;             &lt;li&gt;variant boxed values&lt;/li&gt;           &lt;/ul&gt;
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> If not <link linkend="NULL--CAPS"><literal>NULL</literal></link>, used to return errors if <link linkend="FALSE--CAPS"><literal>FALSE</literal></link> 
 is returned
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>loop</parameter>&#160;:</term>
<listitem><simpara> If not <link linkend="NULL--CAPS"><literal>NULL</literal></link>, set before re-entering 
 the main loop, to point to a <link linkend="GMainLoop"><type>GMainLoop</type></link> 
 which can be used to cancel this call with 
 <link linkend="g-main-loop-quit"><function>g_main_loop_quit()</function></link>, causing a return of 
 <link linkend="FALSE--CAPS"><literal>FALSE</literal></link> with <parameter>error</parameter> set to <link linkend="TP-DBUS-ERROR-CANCELLED--CAPS"><literal>TP_DBUS_ERROR_CANCELLED</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE on success, FALSE and sets <parameter>error</parameter> on error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-cli-properties-interface-callback-for-list-properties" role="function">
<title>tp_cli_properties_interface_callback_for_list_properties ()</title>
<indexterm zone="tp-cli-properties-interface-callback-for-list-properties"><primary sortas="tp_cli_properties_interface_callback_for_list_properties">tp_cli_properties_interface_callback_for_list_properties</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_cli_properties_interface_callback_for_list_properties)
                                                        (<link linkend="TpProxy">TpProxy</link> *proxy,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *out_Available_Properties,
                                                         const <link linkend="GError">GError</link> *error,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);</programlisting>
<para>
Signature of the callback called when a ListProperties method call
succeeds or fails.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> the proxy on which the call was made
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Available_Properties</parameter>&#160;:</term>
<listitem><simpara> Used to return an 'out' argument if <parameter>error</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>: An array of structs containing:           &lt;ul&gt;             &lt;li&gt;an integer identifier&lt;/li&gt;             &lt;li&gt;a string property name&lt;/li&gt;             &lt;li&gt;a string representing the D-Bus signature of this property&lt;/li&gt;             &lt;li&gt;a bitwise OR of the flags applicable to this property&lt;/li&gt;           &lt;/ul&gt;
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> <link linkend="NULL--CAPS"><literal>NULL</literal></link> on success, or an error on failure
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> user-supplied data
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> user-supplied object
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-cli-properties-interface-call-list-properties" role="function">
<title>tp_cli_properties_interface_call_list_properties ()</title>
<indexterm zone="tp-cli-properties-interface-call-list-properties"><primary sortas="tp_cli_properties_interface_call_list_properties">tp_cli_properties_interface_call_list_properties</primary></indexterm><programlisting><link linkend="TpProxyPendingCall">TpProxyPendingCall</link> * tp_cli_properties_interface_call_list_properties
                                                        (<link linkend="gpointer">gpointer</link> proxy,
                                                         <link linkend="gint">gint</link> timeout_ms,
                                                         <link linkend="tp-cli-properties-interface-callback-for-list-properties">tp_cli_properties_interface_callback_for_list_properties</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object);</programlisting>
<para>
Start a ListProperties method call.
</para>
<para>
Returns a dictionary of the properties available on this channel.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="TpProxy"><type>TpProxy</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>timeout_ms</parameter>&#160;:</term>
<listitem><simpara> the timeout in milliseconds, or -1 to use the
  default
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara> called when the method call succeeds or fails;
  may be <link linkend="NULL--CAPS"><literal>NULL</literal></link> to make a "fire and forget" call with no 
  reply tracking
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> user-supplied data passed to the callback;
  must be <link linkend="NULL--CAPS"><literal>NULL</literal></link> if <parameter>callback</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>destroy</parameter>&#160;:</term>
<listitem><simpara> called with the user_data as argument, after the
  call has succeeded, failed or been cancelled;
  must be <link linkend="NULL--CAPS"><literal>NULL</literal></link> if <parameter>callback</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> If not <link linkend="NULL--CAPS"><literal>NULL</literal></link>, a <link linkend="GObject"><type>GObject</type></link> which will be 
  weakly referenced; if it is destroyed, this call 
  will automatically be cancelled. Must be <link linkend="NULL--CAPS"><literal>NULL</literal></link> if 
  <parameter>callback</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a <link linkend="TpProxyPendingCall"><type>TpProxyPendingCall</type></link> representing the call in
 progress. It is borrowed from the object, and will become
 invalid when the callback is called, the call is
 cancelled or the <link linkend="TpProxy"><type>TpProxy</type></link> becomes invalid.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-cli-properties-interface-run-list-properties" role="function">
<title>tp_cli_properties_interface_run_list_properties ()</title>
<indexterm zone="tp-cli-properties-interface-run-list-properties"><primary sortas="tp_cli_properties_interface_run_list_properties">tp_cli_properties_interface_run_list_properties</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            tp_cli_properties_interface_run_list_properties
                                                        (<link linkend="gpointer">gpointer</link> proxy,
                                                         <link linkend="gint">gint</link> timeout_ms,
                                                         <link linkend="GPtrArray">GPtrArray</link> **out_Available_Properties,
                                                         <link linkend="GError">GError</link> **error,
                                                         <link linkend="GMainLoop">GMainLoop</link> **loop);</programlisting>
<para>
Call the method ListProperties and run the main loop
until it returns. Before calling this method, you must
add a reference to any borrowed objects you need to keep,
and generally ensure that everything is in a consistent
state.
</para>
<para>
Returns a dictionary of the properties available on this channel.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="TpProxy"><type>TpProxy</type></link> or subclass
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>timeout_ms</parameter>&#160;:</term>
<listitem><simpara> Timeout in milliseconds, or -1 for default
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Available_Properties</parameter>&#160;:</term>
<listitem><simpara> Used to return an 'out' argument if <link linkend="TRUE--CAPS"><literal>TRUE</literal></link> is returned: An array of structs containing:           &lt;ul&gt;             &lt;li&gt;an integer identifier&lt;/li&gt;             &lt;li&gt;a string property name&lt;/li&gt;             &lt;li&gt;a string representing the D-Bus signature of this property&lt;/li&gt;             &lt;li&gt;a bitwise OR of the flags applicable to this property&lt;/li&gt;           &lt;/ul&gt;
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> If not <link linkend="NULL--CAPS"><literal>NULL</literal></link>, used to return errors if <link linkend="FALSE--CAPS"><literal>FALSE</literal></link> 
 is returned
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>loop</parameter>&#160;:</term>
<listitem><simpara> If not <link linkend="NULL--CAPS"><literal>NULL</literal></link>, set before re-entering 
 the main loop, to point to a <link linkend="GMainLoop"><type>GMainLoop</type></link> 
 which can be used to cancel this call with 
 <link linkend="g-main-loop-quit"><function>g_main_loop_quit()</function></link>, causing a return of 
 <link linkend="FALSE--CAPS"><literal>FALSE</literal></link> with <parameter>error</parameter> set to <link linkend="TP-DBUS-ERROR-CANCELLED--CAPS"><literal>TP_DBUS_ERROR_CANCELLED</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE on success, FALSE and sets <parameter>error</parameter> on error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-cli-properties-interface-callback-for-set-properties" role="function">
<title>tp_cli_properties_interface_callback_for_set_properties ()</title>
<indexterm zone="tp-cli-properties-interface-callback-for-set-properties"><primary sortas="tp_cli_properties_interface_callback_for_set_properties">tp_cli_properties_interface_callback_for_set_properties</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_cli_properties_interface_callback_for_set_properties)
                                                        (<link linkend="TpProxy">TpProxy</link> *proxy,
                                                         const <link linkend="GError">GError</link> *error,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);</programlisting>
<para>
Signature of the callback called when a SetProperties method call
succeeds or fails.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> the proxy on which the call was made
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> <link linkend="NULL--CAPS"><literal>NULL</literal></link> on success, or an error on failure
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> user-supplied data
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> user-supplied object
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-cli-properties-interface-call-set-properties" role="function">
<title>tp_cli_properties_interface_call_set_properties ()</title>
<indexterm zone="tp-cli-properties-interface-call-set-properties"><primary sortas="tp_cli_properties_interface_call_set_properties">tp_cli_properties_interface_call_set_properties</primary></indexterm><programlisting><link linkend="TpProxyPendingCall">TpProxyPendingCall</link> * tp_cli_properties_interface_call_set_properties
                                                        (<link linkend="gpointer">gpointer</link> proxy,
                                                         <link linkend="gint">gint</link> timeout_ms,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *in_Properties,
                                                         <link linkend="tp-cli-properties-interface-callback-for-set-properties">tp_cli_properties_interface_callback_for_set_properties</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object);</programlisting>
<para>
Start a SetProperties method call.
</para>
<para>
&lt;tp:docstring xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;         &lt;p&gt;Takes an array of (identifier, value) pairs containing desired           values to set the given properties. In the case of any errors, no           properties will be changed. When the changes have been acknowledged           by the server, the PropertiesChanged signal will be emitted.&lt;/p&gt;          &lt;p&gt;All properties given must have the PROPERTY_FLAG_WRITE flag, or         PermissionDenied will be returned. If any variants are of the wrong         type, NotAvailable will be returned.  If any given property identifiers         are invalid, InvalidArgument will be returned.&lt;/p&gt;</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="TpProxy"><type>TpProxy</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>timeout_ms</parameter>&#160;:</term>
<listitem><simpara> the timeout in milliseconds, or -1 to use the
  default
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Properties</parameter>&#160;:</term>
<listitem><simpara> Used to pass an 'in' argument: An array mapping integer property identifiers to boxed values
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara> called when the method call succeeds or fails;
  may be <link linkend="NULL--CAPS"><literal>NULL</literal></link> to make a "fire and forget" call with no 
  reply tracking
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> user-supplied data passed to the callback;
  must be <link linkend="NULL--CAPS"><literal>NULL</literal></link> if <parameter>callback</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>destroy</parameter>&#160;:</term>
<listitem><simpara> called with the user_data as argument, after the
  call has succeeded, failed or been cancelled;
  must be <link linkend="NULL--CAPS"><literal>NULL</literal></link> if <parameter>callback</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> If not <link linkend="NULL--CAPS"><literal>NULL</literal></link>, a <link linkend="GObject"><type>GObject</type></link> which will be 
  weakly referenced; if it is destroyed, this call 
  will automatically be cancelled. Must be <link linkend="NULL--CAPS"><literal>NULL</literal></link> if 
  <parameter>callback</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a <link linkend="TpProxyPendingCall"><type>TpProxyPendingCall</type></link> representing the call in
 progress. It is borrowed from the object, and will become
 invalid when the callback is called, the call is
 cancelled or the <link linkend="TpProxy"><type>TpProxy</type></link> becomes invalid.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-cli-properties-interface-run-set-properties" role="function">
<title>tp_cli_properties_interface_run_set_properties ()</title>
<indexterm zone="tp-cli-properties-interface-run-set-properties"><primary sortas="tp_cli_properties_interface_run_set_properties">tp_cli_properties_interface_run_set_properties</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            tp_cli_properties_interface_run_set_properties
                                                        (<link linkend="gpointer">gpointer</link> proxy,
                                                         <link linkend="gint">gint</link> timeout_ms,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *in_Properties,
                                                         <link linkend="GError">GError</link> **error,
                                                         <link linkend="GMainLoop">GMainLoop</link> **loop);</programlisting>
<para>
Call the method SetProperties and run the main loop
until it returns. Before calling this method, you must
add a reference to any borrowed objects you need to keep,
and generally ensure that everything is in a consistent
state.
</para>
<para>
&lt;tp:docstring xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;         &lt;p&gt;Takes an array of (identifier, value) pairs containing desired           values to set the given properties. In the case of any errors, no           properties will be changed. When the changes have been acknowledged           by the server, the PropertiesChanged signal will be emitted.&lt;/p&gt;          &lt;p&gt;All properties given must have the PROPERTY_FLAG_WRITE flag, or         PermissionDenied will be returned. If any variants are of the wrong         type, NotAvailable will be returned.  If any given property identifiers         are invalid, InvalidArgument will be returned.&lt;/p&gt;</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="TpProxy"><type>TpProxy</type></link> or subclass
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>timeout_ms</parameter>&#160;:</term>
<listitem><simpara> Timeout in milliseconds, or -1 for default
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Properties</parameter>&#160;:</term>
<listitem><simpara> Used to pass an 'in' argument: An array mapping integer property identifiers to boxed values
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> If not <link linkend="NULL--CAPS"><literal>NULL</literal></link>, used to return errors if <link linkend="FALSE--CAPS"><literal>FALSE</literal></link> 
 is returned
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>loop</parameter>&#160;:</term>
<listitem><simpara> If not <link linkend="NULL--CAPS"><literal>NULL</literal></link>, set before re-entering 
 the main loop, to point to a <link linkend="GMainLoop"><type>GMainLoop</type></link> 
 which can be used to cancel this call with 
 <link linkend="g-main-loop-quit"><function>g_main_loop_quit()</function></link>, causing a return of 
 <link linkend="FALSE--CAPS"><literal>FALSE</literal></link> with <parameter>error</parameter> set to <link linkend="TP-DBUS-ERROR-CANCELLED--CAPS"><literal>TP_DBUS_ERROR_CANCELLED</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE on success, FALSE and sets <parameter>error</parameter> on error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-cli-properties-interface-signal-callback-properties-changed" role="function">
<title>tp_cli_properties_interface_signal_callback_properties_changed ()</title>
<indexterm zone="tp-cli-properties-interface-signal-callback-properties-changed"><primary sortas="tp_cli_properties_interface_signal_callback_properties_changed">tp_cli_properties_interface_signal_callback_properties_changed</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_cli_properties_interface_signal_callback_properties_changed)
                                                        (<link linkend="TpProxy">TpProxy</link> *proxy,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *arg_Properties,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);</programlisting>
<para>
Represents the signature of a callback for the signal PropertiesChanged.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> The proxy on which <link linkend="tp-cli-properties-interface-connect-to-properties-changed"><function>tp_cli_properties_interface_connect_to_properties_changed()</function></link>
 was called
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Properties</parameter>&#160;:</term>
<listitem><simpara> &lt;tp:docstring xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;           &lt;p&gt;An array of structs containing:&lt;/p&gt;           &lt;ul&gt;             &lt;li&gt;integer identifiers&lt;/li&gt;             &lt;li&gt;variant boxed values&lt;/li&gt;           &lt;/ul&gt;           &lt;p&gt;The array should contain only properties whose values have             actually changed.&lt;/p&gt;
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> User-supplied data
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> User-supplied weakly referenced object
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-cli-properties-interface-connect-to-properties-changed" role="function">
<title>tp_cli_properties_interface_connect_to_properties_changed ()</title>
<indexterm zone="tp-cli-properties-interface-connect-to-properties-changed"><primary sortas="tp_cli_properties_interface_connect_to_properties_changed">tp_cli_properties_interface_connect_to_properties_changed</primary></indexterm><programlisting><link linkend="TpProxySignalConnection">TpProxySignalConnection</link> * tp_cli_properties_interface_connect_to_properties_changed
                                                        (<link linkend="gpointer">gpointer</link> proxy,
                                                         <link linkend="tp-cli-properties-interface-signal-callback-properties-changed">tp_cli_properties_interface_signal_callback_properties_changed</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>
Connect a handler to the signal PropertiesChanged.
</para>
<para>
Emitted when the value of readable properties has changed.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="TpProxy"><type>TpProxy</type></link> or subclass
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara> Callback to be called when the signal is
  received
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> User-supplied data for the callback
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>destroy</parameter>&#160;:</term>
<listitem><simpara> Destructor for the user-supplied data, which
  will be called when this signal is disconnected, or
  before this function returns <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GObject"><type>GObject</type></link> which will be weakly referenced; 
  if it is destroyed, this callback will automatically be
  disconnected
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> If not <link linkend="NULL--CAPS"><literal>NULL</literal></link>, used to raise an error if <link linkend="NULL--CAPS"><literal>NULL</literal></link> is
  returned
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a <link linkend="TpProxySignalConnection"><type>TpProxySignalConnection</type></link> containing all of the
above, which can be used to disconnect the signal; or
<link linkend="NULL--CAPS"><literal>NULL</literal></link> if the proxy does not have the desired interface
or has become invalid.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-cli-properties-interface-signal-callback-property-flags-changed" role="function">
<title>tp_cli_properties_interface_signal_callback_property_flags_changed ()</title>
<indexterm zone="tp-cli-properties-interface-signal-callback-property-flags-changed"><primary sortas="tp_cli_properties_interface_signal_callback_property_flags_changed">tp_cli_properties_interface_signal_callback_property_flags_changed</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_cli_properties_interface_signal_callback_property_flags_changed)
                                                        (<link linkend="TpProxy">TpProxy</link> *proxy,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *arg_Properties,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);</programlisting>
<para>
Represents the signature of a callback for the signal PropertyFlagsChanged.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> The proxy on which <link linkend="tp-cli-properties-interface-connect-to-property-flags-changed"><function>tp_cli_properties_interface_connect_to_property_flags_changed()</function></link>
 was called
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Properties</parameter>&#160;:</term>
<listitem><simpara> &lt;tp:docstring xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;           &lt;p&gt;An array of structs containing:&lt;/p&gt;           &lt;ul&gt;             &lt;li&gt;integer identifiers&lt;/li&gt;             &lt;li&gt;a bitwise OR of the current flags&lt;/li&gt;           &lt;/ul&gt;           &lt;p&gt;The array should contain only properties whose flags have actually             changed.&lt;/p&gt;
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> User-supplied data
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> User-supplied weakly referenced object
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-cli-properties-interface-connect-to-property-flags-changed" role="function">
<title>tp_cli_properties_interface_connect_to_property_flags_changed ()</title>
<indexterm zone="tp-cli-properties-interface-connect-to-property-flags-changed"><primary sortas="tp_cli_properties_interface_connect_to_property_flags_changed">tp_cli_properties_interface_connect_to_property_flags_changed</primary></indexterm><programlisting><link linkend="TpProxySignalConnection">TpProxySignalConnection</link> * tp_cli_properties_interface_connect_to_property_flags_changed
                                                        (<link linkend="gpointer">gpointer</link> proxy,
                                                         <link linkend="tp-cli-properties-interface-signal-callback-property-flags-changed">tp_cli_properties_interface_signal_callback_property_flags_changed</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>
Connect a handler to the signal PropertyFlagsChanged.
</para>
<para>
Emitted when the flags of some room properties have changed.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="TpProxy"><type>TpProxy</type></link> or subclass
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara> Callback to be called when the signal is
  received
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> User-supplied data for the callback
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>destroy</parameter>&#160;:</term>
<listitem><simpara> Destructor for the user-supplied data, which
  will be called when this signal is disconnected, or
  before this function returns <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GObject"><type>GObject</type></link> which will be weakly referenced; 
  if it is destroyed, this callback will automatically be
  disconnected
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> If not <link linkend="NULL--CAPS"><literal>NULL</literal></link>, used to raise an error if <link linkend="NULL--CAPS"><literal>NULL</literal></link> is
  returned
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a <link linkend="TpProxySignalConnection"><type>TpProxySignalConnection</type></link> containing all of the
above, which can be used to disconnect the signal; or
<link linkend="NULL--CAPS"><literal>NULL</literal></link> if the proxy does not have the desired interface
or has become invalid.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>



<refsect1 id="telepathy-glib-proxy-tp-properties.see-also">
<title>See Also</title>
#TpProxy
</refsect1>

</refentry>

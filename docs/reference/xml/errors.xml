<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="telepathy-glib-errors">
<refmeta>
<refentrytitle role="top_of_page">Telepathy protocol errors</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>TELEPATHY-GLIB Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>Telepathy protocol errors</refname>
<refpurpose>The errors from the Telepathy D-Bus spec, as a
 GLib error domain</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>

#include &lt;telepathy-glib/errors.h&gt;


#define             <link linkend="TP-ERROR-PREFIX:CAPS">TP_ERROR_PREFIX</link>
#define             <link linkend="TP-ERRORS:CAPS">TP_ERRORS</link>
#define             <link linkend="TP-TYPE-ERROR:CAPS">TP_TYPE_ERROR</link>
enum                <link linkend="TpError">TpError</link>;
<link linkend="void">void</link>                <link linkend="tp-g-set-error-invalid-handle-type">tp_g_set_error_invalid_handle_type</link>  (<link linkend="guint">guint</link> type,
                                                         <link linkend="GError">GError</link> **error);
<link linkend="void">void</link>                <link linkend="tp-g-set-error-unsupported-handle-type">tp_g_set_error_unsupported_handle_type</link>
                                                        (<link linkend="guint">guint</link> type,
                                                         <link linkend="GError">GError</link> **error);

</synopsis>
</refsynopsisdiv>









<refsect1 role="desc">
<title role="desc.title">Description</title>
<para>
This header provides the Telepathy D-Bus errors, in the form of a
GLib error domain. For D-Bus methods which fail with one of these errors,
dbus-glib will generate a reply message with the appropriate error.
</para>
<para>
It also provides utility functions used by functions which return an error.</para>
<para>

</para>
</refsect1>

<refsect1 role="details">
<title role="details.title">Details</title>
<refsect2>
<title><anchor id="TP-ERROR-PREFIX:CAPS" role="macro" condition="since:0.7.1"/>TP_ERROR_PREFIX</title>
<indexterm role="0.7.1"><primary>TP_ERROR_PREFIX</primary></indexterm><programlisting>#define TP_ERROR_PREFIX "org.freedesktop.Telepathy.Errors"
</programlisting>
<para>
The common prefix of Telepathy errors, as a string constant, without
the trailing '.' character.</para>
<para>

</para><para role="since">Since  0.7.1
</para></refsect2>
<refsect2>
<title><anchor id="TP-ERRORS:CAPS" role="macro"/>TP_ERRORS</title>
<indexterm><primary>TP_ERRORS</primary></indexterm><programlisting>#define TP_ERRORS tp_errors_quark ()
</programlisting>
<para>
The error domain for the D-Bus errors described in the Telepathy
specification.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="TP-TYPE-ERROR:CAPS" role="macro"/>TP_TYPE_ERROR</title>
<indexterm><primary>TP_TYPE_ERROR</primary></indexterm><programlisting>#define             TP_TYPE_ERROR</programlisting>
<para>
The GType of the Telepathy error enumeration.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="TpError" role="enum"/>enum TpError</title>
<indexterm><primary>TpError</primary></indexterm><programlisting>typedef enum {
    TP_ERROR_NETWORK_ERROR,
    TP_ERROR_NOT_IMPLEMENTED,
    TP_ERROR_INVALID_ARGUMENT,
    TP_ERROR_NOT_AVAILABLE,
    TP_ERROR_PERMISSION_DENIED,
    TP_ERROR_DISCONNECTED,
    TP_ERROR_INVALID_HANDLE,
    TP_ERROR_CHANNEL_BANNED,
    TP_ERROR_CHANNEL_FULL,
    TP_ERROR_CHANNEL_INVITE_ONLY,
} TpError;
</programlisting>
<para>
Enumerated type representing the Telepathy D-Bus errors.</para>
<para>

</para><variablelist role="enum">
<varlistentry>
<term><anchor id="TP-ERROR-NETWORK-ERROR:CAPS" role="constant"/><literal>TP_ERROR_NETWORK_ERROR</literal></term>
<listitem><simpara> org.freedesktop.Telepathy.Error.NetworkError:
    Raised when there is an error reading from or writing to the network.    
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><anchor id="TP-ERROR-NOT-IMPLEMENTED:CAPS" role="constant"/><literal>TP_ERROR_NOT_IMPLEMENTED</literal></term>
<listitem><simpara> org.freedesktop.Telepathy.Error.NotImplemented:
    Raised when the requested method, channel, etc is not available on this connection.    
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><anchor id="TP-ERROR-INVALID-ARGUMENT:CAPS" role="constant"/><literal>TP_ERROR_INVALID_ARGUMENT</literal></term>
<listitem><simpara> org.freedesktop.Telepathy.Error.InvalidArgument:
    Raised when one of the provided arguments is invalid.    
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><anchor id="TP-ERROR-NOT-AVAILABLE:CAPS" role="constant"/><literal>TP_ERROR_NOT_AVAILABLE</literal></term>
<listitem><simpara> org.freedesktop.Telepathy.Error.NotAvailable:
    Raised when the requested functionality is temporarily unavailable.    
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><anchor id="TP-ERROR-PERMISSION-DENIED:CAPS" role="constant"/><literal>TP_ERROR_PERMISSION_DENIED</literal></term>
<listitem><simpara> org.freedesktop.Telepathy.Error.PermissionDenied:
    The user is not permitted to perform the requested operation.    
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><anchor id="TP-ERROR-DISCONNECTED:CAPS" role="constant"/><literal>TP_ERROR_DISCONNECTED</literal></term>
<listitem><simpara> org.freedesktop.Telepathy.Error.Disconnected:
    The connection is not currently connected and cannot be used.    
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><anchor id="TP-ERROR-INVALID-HANDLE:CAPS" role="constant"/><literal>TP_ERROR_INVALID_HANDLE</literal></term>
<listitem><simpara> org.freedesktop.Telepathy.Error.InvalidHandle:
    The contact name specified is unknown on this channel or connection.    
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><anchor id="TP-ERROR-CHANNEL-BANNED:CAPS" role="constant"/><literal>TP_ERROR_CHANNEL_BANNED</literal></term>
<listitem><simpara> org.freedesktop.Telepathy.Error.Channel.Banned:
    You are banned from the channel.    
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><anchor id="TP-ERROR-CHANNEL-FULL:CAPS" role="constant"/><literal>TP_ERROR_CHANNEL_FULL</literal></term>
<listitem><simpara> org.freedesktop.Telepathy.Error.Channel.Full:
    The channel is full.    
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><anchor id="TP-ERROR-CHANNEL-INVITE-ONLY:CAPS" role="constant"/><literal>TP_ERROR_CHANNEL_INVITE_ONLY</literal></term>
<listitem><simpara> org.freedesktop.Telepathy.Error.Channel.InviteOnly:
    The requested channel is invite-only.    
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-g-set-error-invalid-handle-type" role="function"/>tp_g_set_error_invalid_handle_type ()</title>
<indexterm><primary>tp_g_set_error_invalid_handle_type</primary></indexterm><programlisting><link linkend="void">void</link>                tp_g_set_error_invalid_handle_type  (<link linkend="guint">guint</link> type,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>
Set the error InvalidArgument corresponding to an invalid handle type,
with an appropriate message.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara> An invalid handle type
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara> Either <link linkend="NULL:CAPS"><literal>NULL</literal></link>, or used to return an error (as for g_set_error)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-g-set-error-unsupported-handle-type" role="function"/>tp_g_set_error_unsupported_handle_type ()</title>
<indexterm><primary>tp_g_set_error_unsupported_handle_type</primary></indexterm><programlisting><link linkend="void">void</link>                tp_g_set_error_unsupported_handle_type
                                                        (<link linkend="guint">guint</link> type,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>
Set the error InvalidArgument for a handle type which is valid but is not
supported by this connection manager, with an appropriate message.
</para>
<para>
FIXME: Shouldn't the error be NotImplemented? The spec doesn't always
allow us to return that, though.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara> An unsupported handle type
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara> Either <link linkend="NULL:CAPS"><literal>NULL</literal></link>, or used to return an error (as for g_set_error)
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>





<refsect1><refsect2 /><refsect2 /></refsect1>
</refentry>

<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="telepathy-glib-errors">
<refmeta>
<refentrytitle role="top_of_page" id="telepathy-glib-errors.top_of_page">Telepathy protocol errors</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>TELEPATHY-GLIB Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>Telepathy protocol errors</refname>
<refpurpose>The errors from the Telepathy D-Bus spec, as a
 GLib error domain</refpurpose>
</refnamediv>

<refsynopsisdiv id="telepathy-glib-errors.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>

#include &lt;telepathy-glib/errors.h&gt;

#define             <link linkend="TP-ERROR-PREFIX--CAPS">TP_ERROR_PREFIX</link>
#define             <link linkend="TP-ERRORS--CAPS">TP_ERRORS</link>
#define             <link linkend="TP-TYPE-ERROR--CAPS">TP_TYPE_ERROR</link>
enum                <link linkend="TpError">TpError</link>;
<link linkend="void">void</link>                <link linkend="tp-g-set-error-invalid-handle-type">tp_g_set_error_invalid_handle_type</link>  (<link linkend="guint">guint</link> type,
                                                         <link linkend="GError">GError</link> **error);
<link linkend="void">void</link>                <link linkend="tp-g-set-error-unsupported-handle-type">tp_g_set_error_unsupported_handle_type</link>
                                                        (<link linkend="guint">guint</link> type,
                                                         <link linkend="GError">GError</link> **error);
</synopsis>
</refsynopsisdiv>









<refsect1 id="telepathy-glib-errors.description" role="desc">
<title role="desc.title">Description</title>
<para>
This header provides the Telepathy D-Bus errors, in the form of a
GLib error domain. For D-Bus methods which fail with one of these errors,
dbus-glib will generate a reply message with the appropriate error.
</para>
<para>
It also provides utility functions used by functions which return an error.</para>
<para>
</para>
</refsect1>

<refsect1 id="telepathy-glib-errors.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="TP-ERROR-PREFIX--CAPS" role="macro" condition="since:0.7.1">
<title>TP_ERROR_PREFIX</title>
<indexterm zone="TP-ERROR-PREFIX--CAPS" role="0.7.1"><primary sortas="TP_ERROR_PREFIX">TP_ERROR_PREFIX</primary></indexterm><programlisting>#define TP_ERROR_PREFIX "org.freedesktop.Telepathy.Error"
</programlisting>
<para>
The common prefix of Telepathy errors, as a string constant, without
the trailing '.' character.</para>
<para>
</para><para role="since">Since 0.7.1</para></refsect2>
<refsect2 id="TP-ERRORS--CAPS" role="macro">
<title>TP_ERRORS</title>
<indexterm zone="TP-ERRORS--CAPS"><primary sortas="TP_ERRORS">TP_ERRORS</primary></indexterm><programlisting>#define TP_ERRORS (tp_errors_quark ())
</programlisting>
<para>
The error domain for the D-Bus errors described in the Telepathy
specification. Error codes in this domain come from the <link linkend="TpError"><type>TpError</type></link>
enumeration.
</para>
<para>
This macro expands to a call to a function returning the Telepathy error
domain. Since 0.7.17, this function automatically registers the domain with
dbus-glib for server-side use (using <link linkend="dbus-g-error-domain-register"><function>dbus_g_error_domain_register()</function></link>) when
called.</para>
<para>
</para></refsect2>
<refsect2 id="TP-TYPE-ERROR--CAPS" role="macro">
<title>TP_TYPE_ERROR</title>
<indexterm zone="TP-TYPE-ERROR--CAPS"><primary sortas="TP_TYPE_ERROR">TP_TYPE_ERROR</primary></indexterm><programlisting>#define TP_TYPE_ERROR (tp_error_get_type())
</programlisting>
<para>
The GType of the Telepathy error enumeration.</para>
<para>
</para></refsect2>
<refsect2 id="TpError" role="enum">
<title>enum TpError</title>
<indexterm zone="TpError"><primary sortas="TpError">TpError</primary></indexterm><programlisting>typedef enum {
    TP_ERROR_NETWORK_ERROR,
    TP_ERROR_NOT_IMPLEMENTED,
    TP_ERROR_INVALID_ARGUMENT,
    TP_ERROR_NOT_AVAILABLE,
    TP_ERROR_PERMISSION_DENIED,
    TP_ERROR_DISCONNECTED,
    TP_ERROR_INVALID_HANDLE,
    TP_ERROR_CHANNEL_BANNED,
    TP_ERROR_CHANNEL_FULL,
    TP_ERROR_CHANNEL_INVITE_ONLY,
    TP_ERROR_NOT_YOURS,
    TP_ERROR_CANCELLED,
    TP_ERROR_AUTHENTICATION_FAILED,
    TP_ERROR_ENCRYPTION_NOT_AVAILABLE,
    TP_ERROR_ENCRYPTION_ERROR,
    TP_ERROR_CERT_NOT_PROVIDED,
    TP_ERROR_CERT_UNTRUSTED,
    TP_ERROR_CERT_EXPIRED,
    TP_ERROR_CERT_NOT_ACTIVATED,
    TP_ERROR_CERT_FINGERPRINT_MISMATCH,
    TP_ERROR_CERT_HOSTNAME_MISMATCH,
    TP_ERROR_CERT_SELF_SIGNED,
    TP_ERROR_CERT_INVALID,
    TP_ERROR_NOT_CAPABLE,
    TP_ERROR_OFFLINE,
    TP_ERROR_CHANNEL_KICKED,
    TP_ERROR_BUSY,
    TP_ERROR_NO_ANSWER,
    TP_ERROR_DOES_NOT_EXIST,
} TpError;
</programlisting>
<para>
Enumerated type representing the Telepathy D-Bus errors.</para>
<para>
</para><variablelist role="enum">
<varlistentry id="TP-ERROR-NETWORK-ERROR--CAPS" role="constant">
<term><literal>TP_ERROR_NETWORK_ERROR</literal></term>
<listitem><simpara> org.freedesktop.Telepathy.Error.NetworkError:
    Raised when there is an error reading from or writing to the network.
</simpara></listitem>
</varlistentry>
<varlistentry id="TP-ERROR-NOT-IMPLEMENTED--CAPS" role="constant">
<term><literal>TP_ERROR_NOT_IMPLEMENTED</literal></term>
<listitem><simpara> org.freedesktop.Telepathy.Error.NotImplemented:
    Raised when the requested method, channel, etc is not available on this
    connection.
</simpara></listitem>
</varlistentry>
<varlistentry id="TP-ERROR-INVALID-ARGUMENT--CAPS" role="constant">
<term><literal>TP_ERROR_INVALID_ARGUMENT</literal></term>
<listitem><simpara> org.freedesktop.Telepathy.Error.InvalidArgument:
    Raised when one of the provided arguments is invalid.
</simpara></listitem>
</varlistentry>
<varlistentry id="TP-ERROR-NOT-AVAILABLE--CAPS" role="constant">
<term><literal>TP_ERROR_NOT_AVAILABLE</literal></term>
<listitem><simpara> org.freedesktop.Telepathy.Error.NotAvailable:
    Raised when the requested functionality is temporarily unavailable.
</simpara></listitem>
</varlistentry>
<varlistentry id="TP-ERROR-PERMISSION-DENIED--CAPS" role="constant">
<term><literal>TP_ERROR_PERMISSION_DENIED</literal></term>
<listitem><simpara> org.freedesktop.Telepathy.Error.PermissionDenied:
    The user is not permitted to perform the requested operation.
</simpara></listitem>
</varlistentry>
<varlistentry id="TP-ERROR-DISCONNECTED--CAPS" role="constant">
<term><literal>TP_ERROR_DISCONNECTED</literal></term>
<listitem><simpara> org.freedesktop.Telepathy.Error.Disconnected:
    The connection is not currently connected and cannot be used.
    This error may also be raised when operations are performed on a
    Connection for which StatusChanged has signalled status Disconnected
    for reason None.
</simpara></listitem>
</varlistentry>
<varlistentry id="TP-ERROR-INVALID-HANDLE--CAPS" role="constant">
<term><literal>TP_ERROR_INVALID_HANDLE</literal></term>
<listitem><simpara> org.freedesktop.Telepathy.Error.InvalidHandle:
    An identifier being converted to a handle was syntactically invalid,
    or an invalid handle was used.
</simpara></listitem>
</varlistentry>
<varlistentry id="TP-ERROR-CHANNEL-BANNED--CAPS" role="constant">
<term><literal>TP_ERROR_CHANNEL_BANNED</literal></term>
<listitem><simpara> org.freedesktop.Telepathy.Error.Channel.Banned:
    You are banned from the channel.
</simpara></listitem>
</varlistentry>
<varlistentry id="TP-ERROR-CHANNEL-FULL--CAPS" role="constant">
<term><literal>TP_ERROR_CHANNEL_FULL</literal></term>
<listitem><simpara> org.freedesktop.Telepathy.Error.Channel.Full:
    The channel is full.
</simpara></listitem>
</varlistentry>
<varlistentry id="TP-ERROR-CHANNEL-INVITE-ONLY--CAPS" role="constant">
<term><literal>TP_ERROR_CHANNEL_INVITE_ONLY</literal></term>
<listitem><simpara> org.freedesktop.Telepathy.Error.Channel.InviteOnly:
    The requested channel is invite-only.
</simpara></listitem>
</varlistentry>
<varlistentry id="TP-ERROR-NOT-YOURS--CAPS" role="constant">
<term><literal>TP_ERROR_NOT_YOURS</literal></term>
<listitem><simpara> org.freedesktop.Telepathy.Error.NotYours:
    The requested channel or other resource already exists, and another
    client is responsible for it
</simpara></listitem>
</varlistentry>
<varlistentry id="TP-ERROR-CANCELLED--CAPS" role="constant">
<term><literal>TP_ERROR_CANCELLED</literal></term>
<listitem><simpara> org.freedesktop.Telepathy.Error.Cancelled:
    Raised by an ongoing request if it is cancelled by user request before
    it has completed, or when operations are performed on an object which
    the user has asked to close (for instance, a Connection where the user
    has called Disconnect, or a Channel where the user has called Close).
</simpara></listitem>
</varlistentry>
<varlistentry id="TP-ERROR-AUTHENTICATION-FAILED--CAPS" role="constant">
<term><literal>TP_ERROR_AUTHENTICATION_FAILED</literal></term>
<listitem><simpara> org.freedesktop.Telepathy.Error.AuthenticationFailed:
    Raised when authentication with a service was unsuccessful.
</simpara></listitem>
</varlistentry>
<varlistentry id="TP-ERROR-ENCRYPTION-NOT-AVAILABLE--CAPS" role="constant">
<term><literal>TP_ERROR_ENCRYPTION_NOT_AVAILABLE</literal></term>
<listitem><simpara> org.freedesktop.Telepathy.Error.EncryptionNotAvailable:
    Raised if a user request insisted that encryption should be used,
    but encryption was not actually available.
</simpara></listitem>
</varlistentry>
<varlistentry id="TP-ERROR-ENCRYPTION-ERROR--CAPS" role="constant">
<term><literal>TP_ERROR_ENCRYPTION_ERROR</literal></term>
<listitem><simpara> org.freedesktop.Telepathy.Error.EncryptionError:
    Raised if encryption appears to be available, but could not actually be
    used (for instance if SSL/TLS negotiation fails).
</simpara></listitem>
</varlistentry>
<varlistentry id="TP-ERROR-CERT-NOT-PROVIDED--CAPS" role="constant">
<term><literal>TP_ERROR_CERT_NOT_PROVIDED</literal></term>
<listitem><simpara> org.freedesktop.Telepathy.Error.Cert.NotProvided:
    Raised if the server did not provide a SSL/TLS certificate.
</simpara></listitem>
</varlistentry>
<varlistentry id="TP-ERROR-CERT-UNTRUSTED--CAPS" role="constant">
<term><literal>TP_ERROR_CERT_UNTRUSTED</literal></term>
<listitem><simpara> org.freedesktop.Telepathy.Error.Cert.Untrusted:
    Raised if the server provided a SSL/TLS certificate signed by an
    untrusted certifying authority.
</simpara></listitem>
</varlistentry>
<varlistentry id="TP-ERROR-CERT-EXPIRED--CAPS" role="constant">
<term><literal>TP_ERROR_CERT_EXPIRED</literal></term>
<listitem><simpara> org.freedesktop.Telepathy.Error.Cert.Expired:
    Raised if the server provided an expired SSL/TLS certificate.
</simpara></listitem>
</varlistentry>
<varlistentry id="TP-ERROR-CERT-NOT-ACTIVATED--CAPS" role="constant">
<term><literal>TP_ERROR_CERT_NOT_ACTIVATED</literal></term>
<listitem><simpara> org.freedesktop.Telepathy.Error.Cert.NotActivated:
    Raised if the server provided an SSL/TLS certificate that will become
    valid at some point in the future.
</simpara></listitem>
</varlistentry>
<varlistentry id="TP-ERROR-CERT-FINGERPRINT-MISMATCH--CAPS" role="constant">
<term><literal>TP_ERROR_CERT_FINGERPRINT_MISMATCH</literal></term>
<listitem><simpara> org.freedesktop.Telepathy.Error.Cert.FingerprintMismatch:
    Raised if the server provided an SSL/TLS certificate that did not have
    the expected fingerprint.
</simpara></listitem>
</varlistentry>
<varlistentry id="TP-ERROR-CERT-HOSTNAME-MISMATCH--CAPS" role="constant">
<term><literal>TP_ERROR_CERT_HOSTNAME_MISMATCH</literal></term>
<listitem><simpara> org.freedesktop.Telepathy.Error.Cert.HostnameMismatch:
    Raised if the server provided an SSL/TLS certificate that did not
    match its hostname.
</simpara></listitem>
</varlistentry>
<varlistentry id="TP-ERROR-CERT-SELF-SIGNED--CAPS" role="constant">
<term><literal>TP_ERROR_CERT_SELF_SIGNED</literal></term>
<listitem><simpara> org.freedesktop.Telepathy.Error.Cert.SelfSigned:
    Raised if the server provided an SSL/TLS certificate that is
    self-signed and untrusted.
</simpara></listitem>
</varlistentry>
<varlistentry id="TP-ERROR-CERT-INVALID--CAPS" role="constant">
<term><literal>TP_ERROR_CERT_INVALID</literal></term>
<listitem><simpara> org.freedesktop.Telepathy.Error.Cert.Invalid:
    Raised if the server provided an SSL/TLS certificate that is
    unacceptable in some way that does not have a more specific error.
</simpara></listitem>
</varlistentry>
<varlistentry id="TP-ERROR-NOT-CAPABLE--CAPS" role="constant">
<term><literal>TP_ERROR_NOT_CAPABLE</literal></term>
<listitem><simpara> org.freedesktop.Telepathy.Error.NotCapable:
    Raised when requested functionality is unavailable due to a contact
    not having the required capabilities.
</simpara></listitem>
</varlistentry>
<varlistentry id="TP-ERROR-OFFLINE--CAPS" role="constant">
<term><literal>TP_ERROR_OFFLINE</literal></term>
<listitem><simpara> org.freedesktop.Telepathy.Error.Offline:
    Raised when requested functionality is unavailable because a contact is
    offline.
</simpara></listitem>
</varlistentry>
<varlistentry id="TP-ERROR-CHANNEL-KICKED--CAPS" role="constant">
<term><literal>TP_ERROR_CHANNEL_KICKED</literal></term>
<listitem><simpara> org.freedesktop.Telepathy.Error.Channel.Kicked:
    Used to represent a user being ejected from a channel by another user,
    for instance being kicked from a chatroom.
</simpara></listitem>
</varlistentry>
<varlistentry id="TP-ERROR-BUSY--CAPS" role="constant">
<term><literal>TP_ERROR_BUSY</literal></term>
<listitem><simpara> org.freedesktop.Telepathy.Error.Busy:
    Used to represent a user being removed from a channel because of a
    "busy" indication.
</simpara></listitem>
</varlistentry>
<varlistentry id="TP-ERROR-NO-ANSWER--CAPS" role="constant">
<term><literal>TP_ERROR_NO_ANSWER</literal></term>
<listitem><simpara> org.freedesktop.Telepathy.Error.NoAnswer:
    Used to represent a user being removed from a channel because they did
    not respond, e.g. to a StreamedMedia call.
</simpara></listitem>
</varlistentry>
<varlistentry id="TP-ERROR-DOES-NOT-EXIST--CAPS" role="constant">
<term><literal>TP_ERROR_DOES_NOT_EXIST</literal></term>
<listitem><simpara> org.freedesktop.Telepathy.Error.DoesNotExist:
    Raised when the requested user does not, in fact, exist.
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-g-set-error-invalid-handle-type" role="function">
<title>tp_g_set_error_invalid_handle_type ()</title>
<indexterm zone="tp-g-set-error-invalid-handle-type"><primary sortas="tp_g_set_error_invalid_handle_type">tp_g_set_error_invalid_handle_type</primary></indexterm><programlisting><link linkend="void">void</link>                tp_g_set_error_invalid_handle_type  (<link linkend="guint">guint</link> type,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>
Set the error NotImplemented for an invalid handle type,
with an appropriate message.
</para>
<para>
Changed in version 0.7.23: previously, the error was
InvalidArgument.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>type</parameter>&#160;:</term>
<listitem><simpara> An invalid handle type
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> Either <link linkend="NULL--CAPS"><literal>NULL</literal></link>, or used to return an error (as for g_set_error)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-g-set-error-unsupported-handle-type" role="function">
<title>tp_g_set_error_unsupported_handle_type ()</title>
<indexterm zone="tp-g-set-error-unsupported-handle-type"><primary sortas="tp_g_set_error_unsupported_handle_type">tp_g_set_error_unsupported_handle_type</primary></indexterm><programlisting><link linkend="void">void</link>                tp_g_set_error_unsupported_handle_type
                                                        (<link linkend="guint">guint</link> type,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>
Set the error NotImplemented for a handle type which is valid but is not
supported by this connection manager, with an appropriate message.
</para>
<para>
Changed in version 0.7.23: previously, the error was
InvalidArgument.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>type</parameter>&#160;:</term>
<listitem><simpara> An unsupported handle type
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> Either <link linkend="NULL--CAPS"><literal>NULL</literal></link>, or used to return an error (as for g_set_error)
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>

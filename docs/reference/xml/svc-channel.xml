<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="telepathy-glib-svc-channel">
<refmeta>
<refentrytitle role="top_of_page">Service-side Channel types and interfaces</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>TELEPATHY-GLIB Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>Service-side Channel types and interfaces</refname>
<refpurpose>GInterfaces for Telepathy Channel objects</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>

#include &lt;telepathy-glib/svc-channel.h&gt;


                    <link linkend="TpSvcChannel">TpSvcChannel</link>;
                    <link linkend="TpSvcChannelClass">TpSvcChannelClass</link>;
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-close-impl">*tp_svc_channel_close_impl</link>)        (<link linkend="TpSvcChannel">TpSvcChannel</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-implement-close">tp_svc_channel_implement_close</link>      (<link linkend="TpSvcChannelClass">TpSvcChannelClass</link> *klass,
                                                         <link linkend="tp-svc-channel-close-impl">tp_svc_channel_close_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-return-from-close">tp_svc_channel_return_from_close</link>    (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-get-channel-type-impl">*tp_svc_channel_get_channel_type_impl</link>)
                                                        (<link linkend="TpSvcChannel">TpSvcChannel</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-implement-get-channel-type">tp_svc_channel_implement_get_channel_type</link>
                                                        (<link linkend="TpSvcChannelClass">TpSvcChannelClass</link> *klass,
                                                         <link linkend="tp-svc-channel-get-channel-type-impl">tp_svc_channel_get_channel_type_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-return-from-get-channel-type">tp_svc_channel_return_from_get_channel_type</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="gchar">gchar</link> *ret);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-get-handle-impl">*tp_svc_channel_get_handle_impl</link>)   (<link linkend="TpSvcChannel">TpSvcChannel</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-implement-get-handle">tp_svc_channel_implement_get_handle</link> (<link linkend="TpSvcChannelClass">TpSvcChannelClass</link> *klass,
                                                         <link linkend="tp-svc-channel-get-handle-impl">tp_svc_channel_get_handle_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-return-from-get-handle">tp_svc_channel_return_from_get_handle</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         <link linkend="guint">guint</link> ret,
                                                         <link linkend="guint">guint</link> ret1);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-get-interfaces-impl">*tp_svc_channel_get_interfaces_impl</link>)
                                                        (<link linkend="TpSvcChannel">TpSvcChannel</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-implement-get-interfaces">tp_svc_channel_implement_get_interfaces</link>
                                                        (<link linkend="TpSvcChannelClass">TpSvcChannelClass</link> *klass,
                                                         <link linkend="tp-svc-channel-get-interfaces-impl">tp_svc_channel_get_interfaces_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-return-from-get-interfaces">tp_svc_channel_return_from_get_interfaces</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="gchar">gchar</link> **ret);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-emit-closed">tp_svc_channel_emit_closed</link>          (<link linkend="gpointer">gpointer</link> instance);


                    <link linkend="TpSvcChannelTypeText">TpSvcChannelTypeText</link>;
                    <link linkend="TpSvcChannelTypeTextClass">TpSvcChannelTypeTextClass</link>;
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-type-text-acknowledge-pending-messages-impl">*tp_svc_channel_type_text_acknowledge_pending_messages_impl</link>)
                                                        (<link linkend="TpSvcChannelTypeText">TpSvcChannelTypeText</link> *self,
                                                         const <link linkend="GArray">GArray</link> *ids,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-text-implement-acknowledge-pending-messages">tp_svc_channel_type_text_implement_acknowledge_pending_messages</link>
                                                        (<link linkend="TpSvcChannelTypeTextClass">TpSvcChannelTypeTextClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-text-acknowledge-pending-messages-impl">tp_svc_channel_type_text_acknowledge_pending_messages_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-text-return-from-acknowledge-pending-messages">tp_svc_channel_type_text_return_from_acknowledge_pending_messages</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-type-text-get-message-types-impl">*tp_svc_channel_type_text_get_message_types_impl</link>)
                                                        (<link linkend="TpSvcChannelTypeText">TpSvcChannelTypeText</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-text-implement-get-message-types">tp_svc_channel_type_text_implement_get_message_types</link>
                                                        (<link linkend="TpSvcChannelTypeTextClass">TpSvcChannelTypeTextClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-text-get-message-types-impl">tp_svc_channel_type_text_get_message_types_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-text-return-from-get-message-types">tp_svc_channel_type_text_return_from_get_message_types</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GArray">GArray</link> *ret);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-type-text-list-pending-messages-impl">*tp_svc_channel_type_text_list_pending_messages_impl</link>)
                                                        (<link linkend="TpSvcChannelTypeText">TpSvcChannelTypeText</link> *self,
                                                         <link linkend="gboolean">gboolean</link> clear,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-text-implement-list-pending-messages">tp_svc_channel_type_text_implement_list_pending_messages</link>
                                                        (<link linkend="TpSvcChannelTypeTextClass">TpSvcChannelTypeTextClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-text-list-pending-messages-impl">tp_svc_channel_type_text_list_pending_messages_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-text-return-from-list-pending-messages">tp_svc_channel_type_text_return_from_list_pending_messages</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *ret);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-type-text-send-impl">*tp_svc_channel_type_text_send_impl</link>)
                                                        (<link linkend="TpSvcChannelTypeText">TpSvcChannelTypeText</link> *self,
                                                         <link linkend="guint">guint</link> type,
                                                         const <link linkend="gchar">gchar</link> *text,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-text-implement-send">tp_svc_channel_type_text_implement_send</link>
                                                        (<link linkend="TpSvcChannelTypeTextClass">TpSvcChannelTypeTextClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-text-send-impl">tp_svc_channel_type_text_send_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-text-return-from-send">tp_svc_channel_type_text_return_from_send</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-text-emit-lost-message">tp_svc_channel_type_text_emit_lost_message</link>
                                                        (<link linkend="gpointer">gpointer</link> instance);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-text-emit-received">tp_svc_channel_type_text_emit_received</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> id,
                                                         const <link linkend="guint">guint</link> timestamp,
                                                         const <link linkend="guint">guint</link> sender,
                                                         const <link linkend="guint">guint</link> type,
                                                         const <link linkend="guint">guint</link> flags,
                                                         const <link linkend="gchar">gchar</link> *text);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-text-emit-send-error">tp_svc_channel_type_text_emit_send_error</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> error,
                                                         const <link linkend="guint">guint</link> timestamp,
                                                         const <link linkend="guint">guint</link> type,
                                                         const <link linkend="gchar">gchar</link> *text);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-text-emit-sent">tp_svc_channel_type_text_emit_sent</link>  (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> timestamp,
                                                         const <link linkend="guint">guint</link> type,
                                                         const <link linkend="gchar">gchar</link> *text);


                    <link linkend="TpSvcChannelInterfacePassword">TpSvcChannelInterfacePassword</link>;
                    <link linkend="TpSvcChannelInterfacePasswordClass">TpSvcChannelInterfacePasswordClass</link>;
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-interface-password-get-password-flags-impl">*tp_svc_channel_interface_password_get_password_flags_impl</link>)
                                                        (<link linkend="TpSvcChannelInterfacePassword">TpSvcChannelInterfacePassword</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-password-implement-get-password-flags">tp_svc_channel_interface_password_implement_get_password_flags</link>
                                                        (<link linkend="TpSvcChannelInterfacePasswordClass">TpSvcChannelInterfacePasswordClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-password-get-password-flags-impl">tp_svc_channel_interface_password_get_password_flags_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-password-return-from-get-password-flags">tp_svc_channel_interface_password_return_from_get_password_flags</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         <link linkend="guint">guint</link> ret);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-interface-password-provide-password-impl">*tp_svc_channel_interface_password_provide_password_impl</link>)
                                                        (<link linkend="TpSvcChannelInterfacePassword">TpSvcChannelInterfacePassword</link> *self,
                                                         const <link linkend="gchar">gchar</link> *password,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-password-implement-provide-password">tp_svc_channel_interface_password_implement_provide_password</link>
                                                        (<link linkend="TpSvcChannelInterfacePasswordClass">TpSvcChannelInterfacePasswordClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-password-provide-password-impl">tp_svc_channel_interface_password_provide_password_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-password-return-from-provide-password">tp_svc_channel_interface_password_return_from_provide_password</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         <link linkend="gboolean">gboolean</link> ret);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-password-emit-password-flags-changed">tp_svc_channel_interface_password_emit_password_flags_changed</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> added,
                                                         const <link linkend="guint">guint</link> removed);


                    <link linkend="TpSvcChannelTypeRoomList">TpSvcChannelTypeRoomList</link>;
                    <link linkend="TpSvcChannelTypeRoomListClass">TpSvcChannelTypeRoomListClass</link>;
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-type-room-list-get-listing-rooms-impl">*tp_svc_channel_type_room_list_get_listing_rooms_impl</link>)
                                                        (<link linkend="TpSvcChannelTypeRoomList">TpSvcChannelTypeRoomList</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-room-list-implement-get-listing-rooms">tp_svc_channel_type_room_list_implement_get_listing_rooms</link>
                                                        (<link linkend="TpSvcChannelTypeRoomListClass">TpSvcChannelTypeRoomListClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-room-list-get-listing-rooms-impl">tp_svc_channel_type_room_list_get_listing_rooms_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-room-list-return-from-get-listing-rooms">tp_svc_channel_type_room_list_return_from_get_listing_rooms</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         <link linkend="gboolean">gboolean</link> ret);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-type-room-list-list-rooms-impl">*tp_svc_channel_type_room_list_list_rooms_impl</link>)
                                                        (<link linkend="TpSvcChannelTypeRoomList">TpSvcChannelTypeRoomList</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-room-list-implement-list-rooms">tp_svc_channel_type_room_list_implement_list_rooms</link>
                                                        (<link linkend="TpSvcChannelTypeRoomListClass">TpSvcChannelTypeRoomListClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-room-list-list-rooms-impl">tp_svc_channel_type_room_list_list_rooms_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-room-list-return-from-list-rooms">tp_svc_channel_type_room_list_return_from_list_rooms</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-type-room-list-stop-listing-impl">*tp_svc_channel_type_room_list_stop_listing_impl</link>)
                                                        (<link linkend="TpSvcChannelTypeRoomList">TpSvcChannelTypeRoomList</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-room-list-implement-stop-listing">tp_svc_channel_type_room_list_implement_stop_listing</link>
                                                        (<link linkend="TpSvcChannelTypeRoomListClass">TpSvcChannelTypeRoomListClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-room-list-stop-listing-impl">tp_svc_channel_type_room_list_stop_listing_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-room-list-return-from-stop-listing">tp_svc_channel_type_room_list_return_from_stop_listing</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-room-list-emit-got-rooms">tp_svc_channel_type_room_list_emit_got_rooms</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *rooms);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-room-list-emit-listing-rooms">tp_svc_channel_type_room_list_emit_listing_rooms</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="gboolean">gboolean</link> listing);


                    <link linkend="TpSvcChannelTypeStreamedMedia">TpSvcChannelTypeStreamedMedia</link>;
                    <link linkend="TpSvcChannelTypeStreamedMediaClass">TpSvcChannelTypeStreamedMediaClass</link>;
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-type-streamed-media-list-streams-impl">*tp_svc_channel_type_streamed_media_list_streams_impl</link>)
                                                        (<link linkend="TpSvcChannelTypeStreamedMedia">TpSvcChannelTypeStreamedMedia</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-streamed-media-implement-list-streams">tp_svc_channel_type_streamed_media_implement_list_streams</link>
                                                        (<link linkend="TpSvcChannelTypeStreamedMediaClass">TpSvcChannelTypeStreamedMediaClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-streamed-media-list-streams-impl">tp_svc_channel_type_streamed_media_list_streams_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-streamed-media-return-from-list-streams">tp_svc_channel_type_streamed_media_return_from_list_streams</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *ret);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-type-streamed-media-remove-streams-impl">*tp_svc_channel_type_streamed_media_remove_streams_impl</link>)
                                                        (<link linkend="TpSvcChannelTypeStreamedMedia">TpSvcChannelTypeStreamedMedia</link> *self,
                                                         const <link linkend="GArray">GArray</link> *streams,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-streamed-media-implement-remove-streams">tp_svc_channel_type_streamed_media_implement_remove_streams</link>
                                                        (<link linkend="TpSvcChannelTypeStreamedMediaClass">TpSvcChannelTypeStreamedMediaClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-streamed-media-remove-streams-impl">tp_svc_channel_type_streamed_media_remove_streams_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-streamed-media-return-from-remove-streams">tp_svc_channel_type_streamed_media_return_from_remove_streams</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-type-streamed-media-request-stream-direction-impl">*tp_svc_channel_type_streamed_media_request_stream_direction_impl</link>)
                                                        (<link linkend="TpSvcChannelTypeStreamedMedia">TpSvcChannelTypeStreamedMedia</link> *self,
                                                         <link linkend="guint">guint</link> stream_id,
                                                         <link linkend="guint">guint</link> stream_direction,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-streamed-media-implement-request-stream-direction">tp_svc_channel_type_streamed_media_implement_request_stream_direction</link>
                                                        (<link linkend="TpSvcChannelTypeStreamedMediaClass">TpSvcChannelTypeStreamedMediaClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-streamed-media-request-stream-direction-impl">tp_svc_channel_type_streamed_media_request_stream_direction_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-streamed-media-return-from-request-stream-direction">tp_svc_channel_type_streamed_media_return_from_request_stream_direction</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-type-streamed-media-request-streams-impl">*tp_svc_channel_type_streamed_media_request_streams_impl</link>)
                                                        (<link linkend="TpSvcChannelTypeStreamedMedia">TpSvcChannelTypeStreamedMedia</link> *self,
                                                         <link linkend="guint">guint</link> contact_handle,
                                                         const <link linkend="GArray">GArray</link> *types,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-streamed-media-implement-request-streams">tp_svc_channel_type_streamed_media_implement_request_streams</link>
                                                        (<link linkend="TpSvcChannelTypeStreamedMediaClass">TpSvcChannelTypeStreamedMediaClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-streamed-media-request-streams-impl">tp_svc_channel_type_streamed_media_request_streams_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-streamed-media-return-from-request-streams">tp_svc_channel_type_streamed_media_return_from_request_streams</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *ret);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-streamed-media-emit-stream-added">tp_svc_channel_type_streamed_media_emit_stream_added</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> stream_id,
                                                         const <link linkend="guint">guint</link> contact_handle,
                                                         const <link linkend="guint">guint</link> stream_type);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-streamed-media-emit-stream-direction-changed">tp_svc_channel_type_streamed_media_emit_stream_direction_changed</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> stream_id,
                                                         const <link linkend="guint">guint</link> stream_direction,
                                                         const <link linkend="guint">guint</link> pending_flags);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-streamed-media-emit-stream-error">tp_svc_channel_type_streamed_media_emit_stream_error</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> stream_id,
                                                         const <link linkend="guint">guint</link> errno,
                                                         const <link linkend="gchar">gchar</link> *message);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-streamed-media-emit-stream-removed">tp_svc_channel_type_streamed_media_emit_stream_removed</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> stream_id);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-streamed-media-emit-stream-state-changed">tp_svc_channel_type_streamed_media_emit_stream_state_changed</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> stream_id,
                                                         const <link linkend="guint">guint</link> stream_state);


                    <link linkend="TpSvcChannelInterfaceDTMF">TpSvcChannelInterfaceDTMF</link>;
                    <link linkend="TpSvcChannelInterfaceDTMFClass">TpSvcChannelInterfaceDTMFClass</link>;
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-dtmf-implement-start-tone">tp_svc_channel_interface_dtmf_implement_start_tone</link>
                                                        (<link linkend="TpSvcChannelInterfaceDTMFClass">TpSvcChannelInterfaceDTMFClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-dtmf-start-tone-impl">tp_svc_channel_interface_dtmf_start_tone_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-dtmf-implement-stop-tone">tp_svc_channel_interface_dtmf_implement_stop_tone</link>
                                                        (<link linkend="TpSvcChannelInterfaceDTMFClass">TpSvcChannelInterfaceDTMFClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-dtmf-stop-tone-impl">tp_svc_channel_interface_dtmf_stop_tone_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-dtmf-return-from-start-tone">tp_svc_channel_interface_dtmf_return_from_start_tone</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-dtmf-return-from-stop-tone">tp_svc_channel_interface_dtmf_return_from_stop_tone</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-interface-dtmf-start-tone-impl">*tp_svc_channel_interface_dtmf_start_tone_impl</link>)
                                                        (<link linkend="TpSvcChannelInterfaceDTMF">TpSvcChannelInterfaceDTMF</link> *self,
                                                         <link linkend="guint">guint</link> stream_id,
                                                         <link linkend="guchar">guchar</link> event,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-interface-dtmf-stop-tone-impl">*tp_svc_channel_interface_dtmf_stop_tone_impl</link>)
                                                        (<link linkend="TpSvcChannelInterfaceDTMF">TpSvcChannelInterfaceDTMF</link> *self,
                                                         <link linkend="guint">guint</link> stream_id,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);


                    <link linkend="TpSvcChannelTypeContactList">TpSvcChannelTypeContactList</link>;
                    <link linkend="TpSvcChannelTypeContactListClass">TpSvcChannelTypeContactListClass</link>;


                    <link linkend="TpSvcChannelInterfaceGroup">TpSvcChannelInterfaceGroup</link>;
                    <link linkend="TpSvcChannelInterfaceGroupClass">TpSvcChannelInterfaceGroupClass</link>;
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-interface-group-add-members-impl">*tp_svc_channel_interface_group_add_members_impl</link>)
                                                        (<link linkend="TpSvcChannelInterfaceGroup">TpSvcChannelInterfaceGroup</link> *self,
                                                         const <link linkend="GArray">GArray</link> *contacts,
                                                         const <link linkend="gchar">gchar</link> *message,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-implement-add-members">tp_svc_channel_interface_group_implement_add_members</link>
                                                        (<link linkend="TpSvcChannelInterfaceGroupClass">TpSvcChannelInterfaceGroupClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-group-add-members-impl">tp_svc_channel_interface_group_add_members_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-return-from-add-members">tp_svc_channel_interface_group_return_from_add_members</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-interface-group-get-all-members-impl">*tp_svc_channel_interface_group_get_all_members_impl</link>)
                                                        (<link linkend="TpSvcChannelInterfaceGroup">TpSvcChannelInterfaceGroup</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-implement-get-all-members">tp_svc_channel_interface_group_implement_get_all_members</link>
                                                        (<link linkend="TpSvcChannelInterfaceGroupClass">TpSvcChannelInterfaceGroupClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-group-get-all-members-impl">tp_svc_channel_interface_group_get_all_members_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-return-from-get-all-members">tp_svc_channel_interface_group_return_from_get_all_members</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GArray">GArray</link> *ret,
                                                         const <link linkend="GArray">GArray</link> *ret1,
                                                         const <link linkend="GArray">GArray</link> *ret2);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-interface-group-get-group-flags-impl">*tp_svc_channel_interface_group_get_group_flags_impl</link>)
                                                        (<link linkend="TpSvcChannelInterfaceGroup">TpSvcChannelInterfaceGroup</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-implement-get-group-flags">tp_svc_channel_interface_group_implement_get_group_flags</link>
                                                        (<link linkend="TpSvcChannelInterfaceGroupClass">TpSvcChannelInterfaceGroupClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-group-get-group-flags-impl">tp_svc_channel_interface_group_get_group_flags_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-return-from-get-group-flags">tp_svc_channel_interface_group_return_from_get_group_flags</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         <link linkend="guint">guint</link> ret);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-interface-group-get-handle-owners-impl">*tp_svc_channel_interface_group_get_handle_owners_impl</link>)
                                                        (<link linkend="TpSvcChannelInterfaceGroup">TpSvcChannelInterfaceGroup</link> *self,
                                                         const <link linkend="GArray">GArray</link> *handles,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-implement-get-handle-owners">tp_svc_channel_interface_group_implement_get_handle_owners</link>
                                                        (<link linkend="TpSvcChannelInterfaceGroupClass">TpSvcChannelInterfaceGroupClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-group-get-handle-owners-impl">tp_svc_channel_interface_group_get_handle_owners_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-return-from-get-handle-owners">tp_svc_channel_interface_group_return_from_get_handle_owners</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GArray">GArray</link> *ret);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-interface-group-get-local-pending-members-impl">*tp_svc_channel_interface_group_get_local_pending_members_impl</link>)
                                                        (<link linkend="TpSvcChannelInterfaceGroup">TpSvcChannelInterfaceGroup</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-implement-get-local-pending-members">tp_svc_channel_interface_group_implement_get_local_pending_members</link>
                                                        (<link linkend="TpSvcChannelInterfaceGroupClass">TpSvcChannelInterfaceGroupClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-group-get-local-pending-members-impl">tp_svc_channel_interface_group_get_local_pending_members_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-return-from-get-local-pending-members">tp_svc_channel_interface_group_return_from_get_local_pending_members</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GArray">GArray</link> *ret);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-interface-group-get-local-pending-members-with-info-impl">*tp_svc_channel_interface_group_get_local_pending_members_with_info_impl</link>)
                                                        (<link linkend="TpSvcChannelInterfaceGroup">TpSvcChannelInterfaceGroup</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-implement-get-local-pending-members-with-info">tp_svc_channel_interface_group_implement_get_local_pending_members_with_info</link>
                                                        (<link linkend="TpSvcChannelInterfaceGroupClass">TpSvcChannelInterfaceGroupClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-group-get-local-pending-members-with-info-impl">tp_svc_channel_interface_group_get_local_pending_members_with_info_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-return-from-get-local-pending-members-with-info">tp_svc_channel_interface_group_return_from_get_local_pending_members_with_info</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *ret);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-interface-group-get-members-impl">*tp_svc_channel_interface_group_get_members_impl</link>)
                                                        (<link linkend="TpSvcChannelInterfaceGroup">TpSvcChannelInterfaceGroup</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-implement-get-members">tp_svc_channel_interface_group_implement_get_members</link>
                                                        (<link linkend="TpSvcChannelInterfaceGroupClass">TpSvcChannelInterfaceGroupClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-group-get-members-impl">tp_svc_channel_interface_group_get_members_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-return-from-get-members">tp_svc_channel_interface_group_return_from_get_members</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GArray">GArray</link> *ret);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-interface-group-get-remote-pending-members-impl">*tp_svc_channel_interface_group_get_remote_pending_members_impl</link>)
                                                        (<link linkend="TpSvcChannelInterfaceGroup">TpSvcChannelInterfaceGroup</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-implement-get-remote-pending-members">tp_svc_channel_interface_group_implement_get_remote_pending_members</link>
                                                        (<link linkend="TpSvcChannelInterfaceGroupClass">TpSvcChannelInterfaceGroupClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-group-get-remote-pending-members-impl">tp_svc_channel_interface_group_get_remote_pending_members_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-return-from-get-remote-pending-members">tp_svc_channel_interface_group_return_from_get_remote_pending_members</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GArray">GArray</link> *ret);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-interface-group-get-self-handle-impl">*tp_svc_channel_interface_group_get_self_handle_impl</link>)
                                                        (<link linkend="TpSvcChannelInterfaceGroup">TpSvcChannelInterfaceGroup</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-implement-get-self-handle">tp_svc_channel_interface_group_implement_get_self_handle</link>
                                                        (<link linkend="TpSvcChannelInterfaceGroupClass">TpSvcChannelInterfaceGroupClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-group-get-self-handle-impl">tp_svc_channel_interface_group_get_self_handle_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-return-from-get-self-handle">tp_svc_channel_interface_group_return_from_get_self_handle</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         <link linkend="guint">guint</link> ret);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-interface-group-remove-members-impl">*tp_svc_channel_interface_group_remove_members_impl</link>)
                                                        (<link linkend="TpSvcChannelInterfaceGroup">TpSvcChannelInterfaceGroup</link> *self,
                                                         const <link linkend="GArray">GArray</link> *contacts,
                                                         const <link linkend="gchar">gchar</link> *message,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-implement-remove-members">tp_svc_channel_interface_group_implement_remove_members</link>
                                                        (<link linkend="TpSvcChannelInterfaceGroupClass">TpSvcChannelInterfaceGroupClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-group-remove-members-impl">tp_svc_channel_interface_group_remove_members_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-return-from-remove-members">tp_svc_channel_interface_group_return_from_remove_members</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-emit-group-flags-changed">tp_svc_channel_interface_group_emit_group_flags_changed</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> added,
                                                         const <link linkend="guint">guint</link> removed);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-emit-members-changed">tp_svc_channel_interface_group_emit_members_changed</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="gchar">gchar</link> *message,
                                                         const <link linkend="GArray">GArray</link> *added,
                                                         const <link linkend="GArray">GArray</link> *removed,
                                                         const <link linkend="GArray">GArray</link> *local_pending,
                                                         const <link linkend="GArray">GArray</link> *remote_pending,
                                                         const <link linkend="guint">guint</link> actor,
                                                         const <link linkend="guint">guint</link> reason);


                    <link linkend="TpSvcChannelInterfaceMediaSignalling">TpSvcChannelInterfaceMediaSignalling</link>;
                    <link linkend="TpSvcChannelInterfaceMediaSignallingClass">TpSvcChannelInterfaceMediaSignallingClass</link>;
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-interface-media-signalling-get-session-handlers-impl">*tp_svc_channel_interface_media_signalling_get_session_handlers_impl</link>)
                                                        (<link linkend="TpSvcChannelInterfaceMediaSignalling">TpSvcChannelInterfaceMediaSignalling</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-media-signalling-implement-get-session-handlers">tp_svc_channel_interface_media_signalling_implement_get_session_handlers</link>
                                                        (<link linkend="TpSvcChannelInterfaceMediaSignallingClass">TpSvcChannelInterfaceMediaSignallingClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-media-signalling-get-session-handlers-impl">tp_svc_channel_interface_media_signalling_get_session_handlers_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-media-signalling-return-from-get-session-handlers">tp_svc_channel_interface_media_signalling_return_from_get_session_handlers</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *ret);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-media-signalling-emit-new-session-handler">tp_svc_channel_interface_media_signalling_emit_new_session_handler</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="gchar">gchar</link> *session_handler,
                                                         const <link linkend="gchar">gchar</link> *type);


                    <link linkend="TpSvcChannelInterfaceChatState">TpSvcChannelInterfaceChatState</link>;
                    <link linkend="TpSvcChannelInterfaceChatStateClass">TpSvcChannelInterfaceChatStateClass</link>;
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-interface-chat-state-set-chat-state-impl">*tp_svc_channel_interface_chat_state_set_chat_state_impl</link>)
                                                        (<link linkend="TpSvcChannelInterfaceChatState">TpSvcChannelInterfaceChatState</link> *self,
                                                         <link linkend="guint">guint</link> state,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-chat-state-implement-set-chat-state">tp_svc_channel_interface_chat_state_implement_set_chat_state</link>
                                                        (<link linkend="TpSvcChannelInterfaceChatStateClass">TpSvcChannelInterfaceChatStateClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-chat-state-set-chat-state-impl">tp_svc_channel_interface_chat_state_set_chat_state_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-chat-state-return-from-set-chat-state">tp_svc_channel_interface_chat_state_return_from_set_chat_state</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-chat-state-emit-chat-state-changed">tp_svc_channel_interface_chat_state_emit_chat_state_changed</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> contact,
                                                         const <link linkend="guint">guint</link> state);


</synopsis>
</refsynopsisdiv>









<refsect1 role="desc">
<title role="desc.title">Description</title>
<para>
These interfaces (auto-generated from the Telepathy spec) make it easier
to export objects implementing the Telepathy Channel and its types and
optional interfaces, with the correct method and signal signatures,
and emit signals from those objects in a type-safe way.</para>
<para>

</para>
</refsect1>

<refsect1 role="details">
<title role="details.title">Details</title>
<refsect2>
<title><anchor id="TpSvcChannel" role="struct"/>TpSvcChannel</title>
<indexterm><primary>TpSvcChannel</primary></indexterm><programlisting>typedef struct _TpSvcChannel TpSvcChannel;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="TpSvcChannelClass" role="struct"/>TpSvcChannelClass</title>
<indexterm><primary>TpSvcChannelClass</primary></indexterm><programlisting>typedef struct _TpSvcChannelClass TpSvcChannelClass;</programlisting>
<para>
The class of TpSvcChannel.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-close-impl" role="function"/>tp_svc_channel_close_impl ()</title>
<indexterm><primary>tp_svc_channel_close_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_close_impl)        (<link linkend="TpSvcChannel">TpSvcChannel</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method Close
on interface org.freedesktop.Telepathy.Channel</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-implement-close" role="function"/>tp_svc_channel_implement_close ()</title>
<indexterm><primary>tp_svc_channel_implement_close</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_implement_close      (<link linkend="TpSvcChannelClass">TpSvcChannelClass</link> *klass,
                                                         <link linkend="tp-svc-channel-close-impl">tp_svc_channel_close_impl</link> impl);</programlisting>
<para>
Register an implementation for the Close method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the Close method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-return-from-close" role="function"/>tp_svc_channel_return_from_close ()</title>
<indexterm><primary>tp_svc_channel_return_from_close</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_return_from_close    (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-get-channel-type-impl" role="function"/>tp_svc_channel_get_channel_type_impl ()</title>
<indexterm><primary>tp_svc_channel_get_channel_type_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_get_channel_type_impl)
                                                        (<link linkend="TpSvcChannel">TpSvcChannel</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method GetChannelType
on interface org.freedesktop.Telepathy.Channel</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-implement-get-channel-type" role="function"/>tp_svc_channel_implement_get_channel_type ()</title>
<indexterm><primary>tp_svc_channel_implement_get_channel_type</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_implement_get_channel_type
                                                        (<link linkend="TpSvcChannelClass">TpSvcChannelClass</link> *klass,
                                                         <link linkend="tp-svc-channel-get-channel-type-impl">tp_svc_channel_get_channel_type_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetChannelType method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetChannelType method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-return-from-get-channel-type" role="function"/>tp_svc_channel_return_from_get_channel_type ()</title>
<indexterm><primary>tp_svc_channel_return_from_get_channel_type</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_return_from_get_channel_type
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="gchar">gchar</link> *ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-get-handle-impl" role="function"/>tp_svc_channel_get_handle_impl ()</title>
<indexterm><primary>tp_svc_channel_get_handle_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_get_handle_impl)   (<link linkend="TpSvcChannel">TpSvcChannel</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method GetHandle
on interface org.freedesktop.Telepathy.Channel</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-implement-get-handle" role="function"/>tp_svc_channel_implement_get_handle ()</title>
<indexterm><primary>tp_svc_channel_implement_get_handle</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_implement_get_handle (<link linkend="TpSvcChannelClass">TpSvcChannelClass</link> *klass,
                                                         <link linkend="tp-svc-channel-get-handle-impl">tp_svc_channel_get_handle_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetHandle method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetHandle method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-return-from-get-handle" role="function"/>tp_svc_channel_return_from_get_handle ()</title>
<indexterm><primary>tp_svc_channel_return_from_get_handle</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_return_from_get_handle
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         <link linkend="guint">guint</link> ret,
                                                         <link linkend="guint">guint</link> ret1);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret1</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-get-interfaces-impl" role="function"/>tp_svc_channel_get_interfaces_impl ()</title>
<indexterm><primary>tp_svc_channel_get_interfaces_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_get_interfaces_impl)
                                                        (<link linkend="TpSvcChannel">TpSvcChannel</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method GetInterfaces
on interface org.freedesktop.Telepathy.Channel</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-implement-get-interfaces" role="function"/>tp_svc_channel_implement_get_interfaces ()</title>
<indexterm><primary>tp_svc_channel_implement_get_interfaces</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_implement_get_interfaces
                                                        (<link linkend="TpSvcChannelClass">TpSvcChannelClass</link> *klass,
                                                         <link linkend="tp-svc-channel-get-interfaces-impl">tp_svc_channel_get_interfaces_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetInterfaces method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetInterfaces method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-return-from-get-interfaces" role="function"/>tp_svc_channel_return_from_get_interfaces ()</title>
<indexterm><primary>tp_svc_channel_return_from_get_interfaces</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_return_from_get_interfaces
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="gchar">gchar</link> **ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-emit-closed" role="function"/>tp_svc_channel_emit_closed ()</title>
<indexterm><primary>tp_svc_channel_emit_closed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_emit_closed          (<link linkend="gpointer">gpointer</link> instance);</programlisting>
<para>
Emit the Closed D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="TpSvcChannelTypeText" role="struct"/>TpSvcChannelTypeText</title>
<indexterm><primary>TpSvcChannelTypeText</primary></indexterm><programlisting>typedef struct _TpSvcChannelTypeText TpSvcChannelTypeText;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="TpSvcChannelTypeTextClass" role="struct"/>TpSvcChannelTypeTextClass</title>
<indexterm><primary>TpSvcChannelTypeTextClass</primary></indexterm><programlisting>typedef struct _TpSvcChannelTypeTextClass TpSvcChannelTypeTextClass;</programlisting>
<para>
The class of TpSvcChannelTypeText.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-type-text-acknowledge-pending-messages-impl" role="function"/>tp_svc_channel_type_text_acknowledge_pending_messages_impl ()</title>
<indexterm><primary>tp_svc_channel_type_text_acknowledge_pending_messages_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_type_text_acknowledge_pending_messages_impl)
                                                        (<link linkend="TpSvcChannelTypeText">TpSvcChannelTypeText</link> *self,
                                                         const <link linkend="GArray">GArray</link> *ids,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method AcknowledgePendingMessages
on interface org.freedesktop.Telepathy.Channel.Type.Text</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ids</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-type-text-implement-acknowledge-pending-messages" role="function"/>tp_svc_channel_type_text_implement_acknowledge_pending_messages ()</title>
<indexterm><primary>tp_svc_channel_type_text_implement_acknowledge_pending_messages</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_text_implement_acknowledge_pending_messages
                                                        (<link linkend="TpSvcChannelTypeTextClass">TpSvcChannelTypeTextClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-text-acknowledge-pending-messages-impl">tp_svc_channel_type_text_acknowledge_pending_messages_impl</link> impl);</programlisting>
<para>
Register an implementation for the AcknowledgePendingMessages method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the AcknowledgePendingMessages method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-type-text-return-from-acknowledge-pending-messages" role="function"/>tp_svc_channel_type_text_return_from_acknowledge_pending_messages ()</title>
<indexterm><primary>tp_svc_channel_type_text_return_from_acknowledge_pending_messages</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_text_return_from_acknowledge_pending_messages
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-type-text-get-message-types-impl" role="function"/>tp_svc_channel_type_text_get_message_types_impl ()</title>
<indexterm><primary>tp_svc_channel_type_text_get_message_types_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_type_text_get_message_types_impl)
                                                        (<link linkend="TpSvcChannelTypeText">TpSvcChannelTypeText</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method GetMessageTypes
on interface org.freedesktop.Telepathy.Channel.Type.Text</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-type-text-implement-get-message-types" role="function"/>tp_svc_channel_type_text_implement_get_message_types ()</title>
<indexterm><primary>tp_svc_channel_type_text_implement_get_message_types</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_text_implement_get_message_types
                                                        (<link linkend="TpSvcChannelTypeTextClass">TpSvcChannelTypeTextClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-text-get-message-types-impl">tp_svc_channel_type_text_get_message_types_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetMessageTypes method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetMessageTypes method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-type-text-return-from-get-message-types" role="function"/>tp_svc_channel_type_text_return_from_get_message_types ()</title>
<indexterm><primary>tp_svc_channel_type_text_return_from_get_message_types</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_text_return_from_get_message_types
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GArray">GArray</link> *ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-type-text-list-pending-messages-impl" role="function"/>tp_svc_channel_type_text_list_pending_messages_impl ()</title>
<indexterm><primary>tp_svc_channel_type_text_list_pending_messages_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_type_text_list_pending_messages_impl)
                                                        (<link linkend="TpSvcChannelTypeText">TpSvcChannelTypeText</link> *self,
                                                         <link linkend="gboolean">gboolean</link> clear,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method ListPendingMessages
on interface org.freedesktop.Telepathy.Channel.Type.Text</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>clear</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-type-text-implement-list-pending-messages" role="function"/>tp_svc_channel_type_text_implement_list_pending_messages ()</title>
<indexterm><primary>tp_svc_channel_type_text_implement_list_pending_messages</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_text_implement_list_pending_messages
                                                        (<link linkend="TpSvcChannelTypeTextClass">TpSvcChannelTypeTextClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-text-list-pending-messages-impl">tp_svc_channel_type_text_list_pending_messages_impl</link> impl);</programlisting>
<para>
Register an implementation for the ListPendingMessages method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the ListPendingMessages method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-type-text-return-from-list-pending-messages" role="function"/>tp_svc_channel_type_text_return_from_list_pending_messages ()</title>
<indexterm><primary>tp_svc_channel_type_text_return_from_list_pending_messages</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_text_return_from_list_pending_messages
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-type-text-send-impl" role="function"/>tp_svc_channel_type_text_send_impl ()</title>
<indexterm><primary>tp_svc_channel_type_text_send_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_type_text_send_impl)
                                                        (<link linkend="TpSvcChannelTypeText">TpSvcChannelTypeText</link> *self,
                                                         <link linkend="guint">guint</link> type,
                                                         const <link linkend="gchar">gchar</link> *text,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method Send
on interface org.freedesktop.Telepathy.Channel.Type.Text</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>text</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-type-text-implement-send" role="function"/>tp_svc_channel_type_text_implement_send ()</title>
<indexterm><primary>tp_svc_channel_type_text_implement_send</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_text_implement_send
                                                        (<link linkend="TpSvcChannelTypeTextClass">TpSvcChannelTypeTextClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-text-send-impl">tp_svc_channel_type_text_send_impl</link> impl);</programlisting>
<para>
Register an implementation for the Send method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the Send method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-type-text-return-from-send" role="function"/>tp_svc_channel_type_text_return_from_send ()</title>
<indexterm><primary>tp_svc_channel_type_text_return_from_send</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_text_return_from_send
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-type-text-emit-lost-message" role="function"/>tp_svc_channel_type_text_emit_lost_message ()</title>
<indexterm><primary>tp_svc_channel_type_text_emit_lost_message</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_text_emit_lost_message
                                                        (<link linkend="gpointer">gpointer</link> instance);</programlisting>
<para>
Emit the LostMessage D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-type-text-emit-received" role="function"/>tp_svc_channel_type_text_emit_received ()</title>
<indexterm><primary>tp_svc_channel_type_text_emit_received</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_text_emit_received
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> id,
                                                         const <link linkend="guint">guint</link> timestamp,
                                                         const <link linkend="guint">guint</link> sender,
                                                         const <link linkend="guint">guint</link> type,
                                                         const <link linkend="guint">guint</link> flags,
                                                         const <link linkend="gchar">gchar</link> *text);</programlisting>
<para>
Emit the Received D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>id</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>timestamp</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sender</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>flags</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>text</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-type-text-emit-send-error" role="function"/>tp_svc_channel_type_text_emit_send_error ()</title>
<indexterm><primary>tp_svc_channel_type_text_emit_send_error</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_text_emit_send_error
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> error,
                                                         const <link linkend="guint">guint</link> timestamp,
                                                         const <link linkend="guint">guint</link> type,
                                                         const <link linkend="gchar">gchar</link> *text);</programlisting>
<para>
Emit the SendError D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>timestamp</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>text</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-type-text-emit-sent" role="function"/>tp_svc_channel_type_text_emit_sent ()</title>
<indexterm><primary>tp_svc_channel_type_text_emit_sent</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_text_emit_sent  (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> timestamp,
                                                         const <link linkend="guint">guint</link> type,
                                                         const <link linkend="gchar">gchar</link> *text);</programlisting>
<para>
Emit the Sent D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>timestamp</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>text</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="TpSvcChannelInterfacePassword" role="struct"/>TpSvcChannelInterfacePassword</title>
<indexterm><primary>TpSvcChannelInterfacePassword</primary></indexterm><programlisting>typedef struct _TpSvcChannelInterfacePassword TpSvcChannelInterfacePassword;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="TpSvcChannelInterfacePasswordClass" role="struct"/>TpSvcChannelInterfacePasswordClass</title>
<indexterm><primary>TpSvcChannelInterfacePasswordClass</primary></indexterm><programlisting>typedef struct _TpSvcChannelInterfacePasswordClass TpSvcChannelInterfacePasswordClass;</programlisting>
<para>
The class of TpSvcChannelInterfacePassword.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-password-get-password-flags-impl" role="function"/>tp_svc_channel_interface_password_get_password_flags_impl ()</title>
<indexterm><primary>tp_svc_channel_interface_password_get_password_flags_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_interface_password_get_password_flags_impl)
                                                        (<link linkend="TpSvcChannelInterfacePassword">TpSvcChannelInterfacePassword</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method GetPasswordFlags
on interface org.freedesktop.Telepathy.Channel.Interface.Password</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-password-implement-get-password-flags" role="function"/>tp_svc_channel_interface_password_implement_get_password_flags ()</title>
<indexterm><primary>tp_svc_channel_interface_password_implement_get_password_flags</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_password_implement_get_password_flags
                                                        (<link linkend="TpSvcChannelInterfacePasswordClass">TpSvcChannelInterfacePasswordClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-password-get-password-flags-impl">tp_svc_channel_interface_password_get_password_flags_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetPasswordFlags method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetPasswordFlags method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-password-return-from-get-password-flags" role="function"/>tp_svc_channel_interface_password_return_from_get_password_flags ()</title>
<indexterm><primary>tp_svc_channel_interface_password_return_from_get_password_flags</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_password_return_from_get_password_flags
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         <link linkend="guint">guint</link> ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-password-provide-password-impl" role="function"/>tp_svc_channel_interface_password_provide_password_impl ()</title>
<indexterm><primary>tp_svc_channel_interface_password_provide_password_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_interface_password_provide_password_impl)
                                                        (<link linkend="TpSvcChannelInterfacePassword">TpSvcChannelInterfacePassword</link> *self,
                                                         const <link linkend="gchar">gchar</link> *password,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method ProvidePassword
on interface org.freedesktop.Telepathy.Channel.Interface.Password</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>password</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-password-implement-provide-password" role="function"/>tp_svc_channel_interface_password_implement_provide_password ()</title>
<indexterm><primary>tp_svc_channel_interface_password_implement_provide_password</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_password_implement_provide_password
                                                        (<link linkend="TpSvcChannelInterfacePasswordClass">TpSvcChannelInterfacePasswordClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-password-provide-password-impl">tp_svc_channel_interface_password_provide_password_impl</link> impl);</programlisting>
<para>
Register an implementation for the ProvidePassword method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the ProvidePassword method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-password-return-from-provide-password" role="function"/>tp_svc_channel_interface_password_return_from_provide_password ()</title>
<indexterm><primary>tp_svc_channel_interface_password_return_from_provide_password</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_password_return_from_provide_password
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         <link linkend="gboolean">gboolean</link> ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-password-emit-password-flags-changed" role="function"/>tp_svc_channel_interface_password_emit_password_flags_changed ()</title>
<indexterm><primary>tp_svc_channel_interface_password_emit_password_flags_changed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_password_emit_password_flags_changed
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> added,
                                                         const <link linkend="guint">guint</link> removed);</programlisting>
<para>
Emit the PasswordFlagsChanged D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>added</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>removed</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="TpSvcChannelTypeRoomList" role="struct"/>TpSvcChannelTypeRoomList</title>
<indexterm><primary>TpSvcChannelTypeRoomList</primary></indexterm><programlisting>typedef struct _TpSvcChannelTypeRoomList TpSvcChannelTypeRoomList;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="TpSvcChannelTypeRoomListClass" role="struct"/>TpSvcChannelTypeRoomListClass</title>
<indexterm><primary>TpSvcChannelTypeRoomListClass</primary></indexterm><programlisting>typedef struct _TpSvcChannelTypeRoomListClass TpSvcChannelTypeRoomListClass;</programlisting>
<para>
The class of TpSvcChannelTypeRoomList.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-type-room-list-get-listing-rooms-impl" role="function"/>tp_svc_channel_type_room_list_get_listing_rooms_impl ()</title>
<indexterm><primary>tp_svc_channel_type_room_list_get_listing_rooms_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_type_room_list_get_listing_rooms_impl)
                                                        (<link linkend="TpSvcChannelTypeRoomList">TpSvcChannelTypeRoomList</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method GetListingRooms
on interface org.freedesktop.Telepathy.Channel.Type.RoomList</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-type-room-list-implement-get-listing-rooms" role="function"/>tp_svc_channel_type_room_list_implement_get_listing_rooms ()</title>
<indexterm><primary>tp_svc_channel_type_room_list_implement_get_listing_rooms</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_room_list_implement_get_listing_rooms
                                                        (<link linkend="TpSvcChannelTypeRoomListClass">TpSvcChannelTypeRoomListClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-room-list-get-listing-rooms-impl">tp_svc_channel_type_room_list_get_listing_rooms_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetListingRooms method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetListingRooms method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-type-room-list-return-from-get-listing-rooms" role="function"/>tp_svc_channel_type_room_list_return_from_get_listing_rooms ()</title>
<indexterm><primary>tp_svc_channel_type_room_list_return_from_get_listing_rooms</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_room_list_return_from_get_listing_rooms
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         <link linkend="gboolean">gboolean</link> ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-type-room-list-list-rooms-impl" role="function"/>tp_svc_channel_type_room_list_list_rooms_impl ()</title>
<indexterm><primary>tp_svc_channel_type_room_list_list_rooms_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_type_room_list_list_rooms_impl)
                                                        (<link linkend="TpSvcChannelTypeRoomList">TpSvcChannelTypeRoomList</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method ListRooms
on interface org.freedesktop.Telepathy.Channel.Type.RoomList</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-type-room-list-implement-list-rooms" role="function"/>tp_svc_channel_type_room_list_implement_list_rooms ()</title>
<indexterm><primary>tp_svc_channel_type_room_list_implement_list_rooms</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_room_list_implement_list_rooms
                                                        (<link linkend="TpSvcChannelTypeRoomListClass">TpSvcChannelTypeRoomListClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-room-list-list-rooms-impl">tp_svc_channel_type_room_list_list_rooms_impl</link> impl);</programlisting>
<para>
Register an implementation for the ListRooms method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the ListRooms method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-type-room-list-return-from-list-rooms" role="function"/>tp_svc_channel_type_room_list_return_from_list_rooms ()</title>
<indexterm><primary>tp_svc_channel_type_room_list_return_from_list_rooms</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_room_list_return_from_list_rooms
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-type-room-list-stop-listing-impl" role="function"/>tp_svc_channel_type_room_list_stop_listing_impl ()</title>
<indexterm><primary>tp_svc_channel_type_room_list_stop_listing_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_type_room_list_stop_listing_impl)
                                                        (<link linkend="TpSvcChannelTypeRoomList">TpSvcChannelTypeRoomList</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method StopListing
on interface org.freedesktop.Telepathy.Channel.Type.RoomList</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-type-room-list-implement-stop-listing" role="function"/>tp_svc_channel_type_room_list_implement_stop_listing ()</title>
<indexterm><primary>tp_svc_channel_type_room_list_implement_stop_listing</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_room_list_implement_stop_listing
                                                        (<link linkend="TpSvcChannelTypeRoomListClass">TpSvcChannelTypeRoomListClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-room-list-stop-listing-impl">tp_svc_channel_type_room_list_stop_listing_impl</link> impl);</programlisting>
<para>
Register an implementation for the StopListing method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the StopListing method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-type-room-list-return-from-stop-listing" role="function"/>tp_svc_channel_type_room_list_return_from_stop_listing ()</title>
<indexterm><primary>tp_svc_channel_type_room_list_return_from_stop_listing</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_room_list_return_from_stop_listing
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-type-room-list-emit-got-rooms" role="function"/>tp_svc_channel_type_room_list_emit_got_rooms ()</title>
<indexterm><primary>tp_svc_channel_type_room_list_emit_got_rooms</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_room_list_emit_got_rooms
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *rooms);</programlisting>
<para>
Emit the GotRooms D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>rooms</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-type-room-list-emit-listing-rooms" role="function"/>tp_svc_channel_type_room_list_emit_listing_rooms ()</title>
<indexterm><primary>tp_svc_channel_type_room_list_emit_listing_rooms</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_room_list_emit_listing_rooms
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="gboolean">gboolean</link> listing);</programlisting>
<para>
Emit the ListingRooms D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>listing</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="TpSvcChannelTypeStreamedMedia" role="struct"/>TpSvcChannelTypeStreamedMedia</title>
<indexterm><primary>TpSvcChannelTypeStreamedMedia</primary></indexterm><programlisting>typedef struct _TpSvcChannelTypeStreamedMedia TpSvcChannelTypeStreamedMedia;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="TpSvcChannelTypeStreamedMediaClass" role="struct"/>TpSvcChannelTypeStreamedMediaClass</title>
<indexterm><primary>TpSvcChannelTypeStreamedMediaClass</primary></indexterm><programlisting>typedef struct _TpSvcChannelTypeStreamedMediaClass TpSvcChannelTypeStreamedMediaClass;</programlisting>
<para>
The class of TpSvcChannelTypeStreamedMedia.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-type-streamed-media-list-streams-impl" role="function"/>tp_svc_channel_type_streamed_media_list_streams_impl ()</title>
<indexterm><primary>tp_svc_channel_type_streamed_media_list_streams_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_type_streamed_media_list_streams_impl)
                                                        (<link linkend="TpSvcChannelTypeStreamedMedia">TpSvcChannelTypeStreamedMedia</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method ListStreams
on interface org.freedesktop.Telepathy.Channel.Type.StreamedMedia</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-type-streamed-media-implement-list-streams" role="function"/>tp_svc_channel_type_streamed_media_implement_list_streams ()</title>
<indexterm><primary>tp_svc_channel_type_streamed_media_implement_list_streams</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_streamed_media_implement_list_streams
                                                        (<link linkend="TpSvcChannelTypeStreamedMediaClass">TpSvcChannelTypeStreamedMediaClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-streamed-media-list-streams-impl">tp_svc_channel_type_streamed_media_list_streams_impl</link> impl);</programlisting>
<para>
Register an implementation for the ListStreams method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the ListStreams method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-type-streamed-media-return-from-list-streams" role="function"/>tp_svc_channel_type_streamed_media_return_from_list_streams ()</title>
<indexterm><primary>tp_svc_channel_type_streamed_media_return_from_list_streams</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_streamed_media_return_from_list_streams
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-type-streamed-media-remove-streams-impl" role="function"/>tp_svc_channel_type_streamed_media_remove_streams_impl ()</title>
<indexterm><primary>tp_svc_channel_type_streamed_media_remove_streams_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_type_streamed_media_remove_streams_impl)
                                                        (<link linkend="TpSvcChannelTypeStreamedMedia">TpSvcChannelTypeStreamedMedia</link> *self,
                                                         const <link linkend="GArray">GArray</link> *streams,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method RemoveStreams
on interface org.freedesktop.Telepathy.Channel.Type.StreamedMedia</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>streams</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-type-streamed-media-implement-remove-streams" role="function"/>tp_svc_channel_type_streamed_media_implement_remove_streams ()</title>
<indexterm><primary>tp_svc_channel_type_streamed_media_implement_remove_streams</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_streamed_media_implement_remove_streams
                                                        (<link linkend="TpSvcChannelTypeStreamedMediaClass">TpSvcChannelTypeStreamedMediaClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-streamed-media-remove-streams-impl">tp_svc_channel_type_streamed_media_remove_streams_impl</link> impl);</programlisting>
<para>
Register an implementation for the RemoveStreams method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the RemoveStreams method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-type-streamed-media-return-from-remove-streams" role="function"/>tp_svc_channel_type_streamed_media_return_from_remove_streams ()</title>
<indexterm><primary>tp_svc_channel_type_streamed_media_return_from_remove_streams</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_streamed_media_return_from_remove_streams
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-type-streamed-media-request-stream-direction-impl" role="function"/>tp_svc_channel_type_streamed_media_request_stream_direction_impl ()</title>
<indexterm><primary>tp_svc_channel_type_streamed_media_request_stream_direction_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_type_streamed_media_request_stream_direction_impl)
                                                        (<link linkend="TpSvcChannelTypeStreamedMedia">TpSvcChannelTypeStreamedMedia</link> *self,
                                                         <link linkend="guint">guint</link> stream_id,
                                                         <link linkend="guint">guint</link> stream_direction,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method RequestStreamDirection
on interface org.freedesktop.Telepathy.Channel.Type.StreamedMedia</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>stream_id</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>stream_direction</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-type-streamed-media-implement-request-stream-direction" role="function"/>tp_svc_channel_type_streamed_media_implement_request_stream_direction ()</title>
<indexterm><primary>tp_svc_channel_type_streamed_media_implement_request_stream_direction</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_streamed_media_implement_request_stream_direction
                                                        (<link linkend="TpSvcChannelTypeStreamedMediaClass">TpSvcChannelTypeStreamedMediaClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-streamed-media-request-stream-direction-impl">tp_svc_channel_type_streamed_media_request_stream_direction_impl</link> impl);</programlisting>
<para>
Register an implementation for the RequestStreamDirection method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the RequestStreamDirection method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-type-streamed-media-return-from-request-stream-direction" role="function"/>tp_svc_channel_type_streamed_media_return_from_request_stream_direction ()</title>
<indexterm><primary>tp_svc_channel_type_streamed_media_return_from_request_stream_direction</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_streamed_media_return_from_request_stream_direction
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-type-streamed-media-request-streams-impl" role="function"/>tp_svc_channel_type_streamed_media_request_streams_impl ()</title>
<indexterm><primary>tp_svc_channel_type_streamed_media_request_streams_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_type_streamed_media_request_streams_impl)
                                                        (<link linkend="TpSvcChannelTypeStreamedMedia">TpSvcChannelTypeStreamedMedia</link> *self,
                                                         <link linkend="guint">guint</link> contact_handle,
                                                         const <link linkend="GArray">GArray</link> *types,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method RequestStreams
on interface org.freedesktop.Telepathy.Channel.Type.StreamedMedia</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>contact_handle</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>types</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-type-streamed-media-implement-request-streams" role="function"/>tp_svc_channel_type_streamed_media_implement_request_streams ()</title>
<indexterm><primary>tp_svc_channel_type_streamed_media_implement_request_streams</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_streamed_media_implement_request_streams
                                                        (<link linkend="TpSvcChannelTypeStreamedMediaClass">TpSvcChannelTypeStreamedMediaClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-streamed-media-request-streams-impl">tp_svc_channel_type_streamed_media_request_streams_impl</link> impl);</programlisting>
<para>
Register an implementation for the RequestStreams method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the RequestStreams method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-type-streamed-media-return-from-request-streams" role="function"/>tp_svc_channel_type_streamed_media_return_from_request_streams ()</title>
<indexterm><primary>tp_svc_channel_type_streamed_media_return_from_request_streams</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_streamed_media_return_from_request_streams
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-type-streamed-media-emit-stream-added" role="function"/>tp_svc_channel_type_streamed_media_emit_stream_added ()</title>
<indexterm><primary>tp_svc_channel_type_streamed_media_emit_stream_added</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_streamed_media_emit_stream_added
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> stream_id,
                                                         const <link linkend="guint">guint</link> contact_handle,
                                                         const <link linkend="guint">guint</link> stream_type);</programlisting>
<para>
Emit the StreamAdded D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>stream_id</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>contact_handle</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>stream_type</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-type-streamed-media-emit-stream-direction-changed" role="function"/>tp_svc_channel_type_streamed_media_emit_stream_direction_changed ()</title>
<indexterm><primary>tp_svc_channel_type_streamed_media_emit_stream_direction_changed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_streamed_media_emit_stream_direction_changed
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> stream_id,
                                                         const <link linkend="guint">guint</link> stream_direction,
                                                         const <link linkend="guint">guint</link> pending_flags);</programlisting>
<para>
Emit the StreamDirectionChanged D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>stream_id</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>stream_direction</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pending_flags</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-type-streamed-media-emit-stream-error" role="function"/>tp_svc_channel_type_streamed_media_emit_stream_error ()</title>
<indexterm><primary>tp_svc_channel_type_streamed_media_emit_stream_error</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_streamed_media_emit_stream_error
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> stream_id,
                                                         const <link linkend="guint">guint</link> errno,
                                                         const <link linkend="gchar">gchar</link> *message);</programlisting>
<para>
Emit the StreamError D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>stream_id</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>errno</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>message</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-type-streamed-media-emit-stream-removed" role="function"/>tp_svc_channel_type_streamed_media_emit_stream_removed ()</title>
<indexterm><primary>tp_svc_channel_type_streamed_media_emit_stream_removed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_streamed_media_emit_stream_removed
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> stream_id);</programlisting>
<para>
Emit the StreamRemoved D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>stream_id</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-type-streamed-media-emit-stream-state-changed" role="function"/>tp_svc_channel_type_streamed_media_emit_stream_state_changed ()</title>
<indexterm><primary>tp_svc_channel_type_streamed_media_emit_stream_state_changed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_streamed_media_emit_stream_state_changed
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> stream_id,
                                                         const <link linkend="guint">guint</link> stream_state);</programlisting>
<para>
Emit the StreamStateChanged D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>stream_id</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>stream_state</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="TpSvcChannelInterfaceDTMF" role="struct"/>TpSvcChannelInterfaceDTMF</title>
<indexterm><primary>TpSvcChannelInterfaceDTMF</primary></indexterm><programlisting>typedef struct _TpSvcChannelInterfaceDTMF TpSvcChannelInterfaceDTMF;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="TpSvcChannelInterfaceDTMFClass" role="struct"/>TpSvcChannelInterfaceDTMFClass</title>
<indexterm><primary>TpSvcChannelInterfaceDTMFClass</primary></indexterm><programlisting>typedef struct _TpSvcChannelInterfaceDTMFClass TpSvcChannelInterfaceDTMFClass;</programlisting>
<para>
The class of TpSvcChannelInterfaceDTMF.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-dtmf-implement-start-tone" role="function"/>tp_svc_channel_interface_dtmf_implement_start_tone ()</title>
<indexterm><primary>tp_svc_channel_interface_dtmf_implement_start_tone</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_dtmf_implement_start_tone
                                                        (<link linkend="TpSvcChannelInterfaceDTMFClass">TpSvcChannelInterfaceDTMFClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-dtmf-start-tone-impl">tp_svc_channel_interface_dtmf_start_tone_impl</link> impl);</programlisting>
<para>
Register an implementation for the StartTone method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the StartTone method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-dtmf-implement-stop-tone" role="function"/>tp_svc_channel_interface_dtmf_implement_stop_tone ()</title>
<indexterm><primary>tp_svc_channel_interface_dtmf_implement_stop_tone</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_dtmf_implement_stop_tone
                                                        (<link linkend="TpSvcChannelInterfaceDTMFClass">TpSvcChannelInterfaceDTMFClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-dtmf-stop-tone-impl">tp_svc_channel_interface_dtmf_stop_tone_impl</link> impl);</programlisting>
<para>
Register an implementation for the StopTone method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the StopTone method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-dtmf-return-from-start-tone" role="function"/>tp_svc_channel_interface_dtmf_return_from_start_tone ()</title>
<indexterm><primary>tp_svc_channel_interface_dtmf_return_from_start_tone</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_dtmf_return_from_start_tone
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-dtmf-return-from-stop-tone" role="function"/>tp_svc_channel_interface_dtmf_return_from_stop_tone ()</title>
<indexterm><primary>tp_svc_channel_interface_dtmf_return_from_stop_tone</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_dtmf_return_from_stop_tone
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-dtmf-start-tone-impl" role="function"/>tp_svc_channel_interface_dtmf_start_tone_impl ()</title>
<indexterm><primary>tp_svc_channel_interface_dtmf_start_tone_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_interface_dtmf_start_tone_impl)
                                                        (<link linkend="TpSvcChannelInterfaceDTMF">TpSvcChannelInterfaceDTMF</link> *self,
                                                         <link linkend="guint">guint</link> stream_id,
                                                         <link linkend="guchar">guchar</link> event,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method StartTone
on interface org.freedesktop.Telepathy.Channel.Interface.DTMF</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>stream_id</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>event</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-dtmf-stop-tone-impl" role="function"/>tp_svc_channel_interface_dtmf_stop_tone_impl ()</title>
<indexterm><primary>tp_svc_channel_interface_dtmf_stop_tone_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_interface_dtmf_stop_tone_impl)
                                                        (<link linkend="TpSvcChannelInterfaceDTMF">TpSvcChannelInterfaceDTMF</link> *self,
                                                         <link linkend="guint">guint</link> stream_id,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method StopTone
on interface org.freedesktop.Telepathy.Channel.Interface.DTMF</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>stream_id</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="TpSvcChannelTypeContactList" role="struct"/>TpSvcChannelTypeContactList</title>
<indexterm><primary>TpSvcChannelTypeContactList</primary></indexterm><programlisting>typedef struct _TpSvcChannelTypeContactList TpSvcChannelTypeContactList;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="TpSvcChannelTypeContactListClass" role="struct"/>TpSvcChannelTypeContactListClass</title>
<indexterm><primary>TpSvcChannelTypeContactListClass</primary></indexterm><programlisting>typedef struct _TpSvcChannelTypeContactListClass TpSvcChannelTypeContactListClass;</programlisting>
<para>
The class of TpSvcChannelTypeContactList.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="TpSvcChannelInterfaceGroup" role="struct"/>TpSvcChannelInterfaceGroup</title>
<indexterm><primary>TpSvcChannelInterfaceGroup</primary></indexterm><programlisting>typedef struct _TpSvcChannelInterfaceGroup TpSvcChannelInterfaceGroup;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="TpSvcChannelInterfaceGroupClass" role="struct"/>TpSvcChannelInterfaceGroupClass</title>
<indexterm><primary>TpSvcChannelInterfaceGroupClass</primary></indexterm><programlisting>typedef struct _TpSvcChannelInterfaceGroupClass TpSvcChannelInterfaceGroupClass;</programlisting>
<para>
The class of TpSvcChannelInterfaceGroup.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-group-add-members-impl" role="function"/>tp_svc_channel_interface_group_add_members_impl ()</title>
<indexterm><primary>tp_svc_channel_interface_group_add_members_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_interface_group_add_members_impl)
                                                        (<link linkend="TpSvcChannelInterfaceGroup">TpSvcChannelInterfaceGroup</link> *self,
                                                         const <link linkend="GArray">GArray</link> *contacts,
                                                         const <link linkend="gchar">gchar</link> *message,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method AddMembers
on interface org.freedesktop.Telepathy.Channel.Interface.Group</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>contacts</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>message</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-group-implement-add-members" role="function"/>tp_svc_channel_interface_group_implement_add_members ()</title>
<indexterm><primary>tp_svc_channel_interface_group_implement_add_members</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_implement_add_members
                                                        (<link linkend="TpSvcChannelInterfaceGroupClass">TpSvcChannelInterfaceGroupClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-group-add-members-impl">tp_svc_channel_interface_group_add_members_impl</link> impl);</programlisting>
<para>
Register an implementation for the AddMembers method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the AddMembers method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-group-return-from-add-members" role="function"/>tp_svc_channel_interface_group_return_from_add_members ()</title>
<indexterm><primary>tp_svc_channel_interface_group_return_from_add_members</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_return_from_add_members
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-group-get-all-members-impl" role="function"/>tp_svc_channel_interface_group_get_all_members_impl ()</title>
<indexterm><primary>tp_svc_channel_interface_group_get_all_members_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_interface_group_get_all_members_impl)
                                                        (<link linkend="TpSvcChannelInterfaceGroup">TpSvcChannelInterfaceGroup</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method GetAllMembers
on interface org.freedesktop.Telepathy.Channel.Interface.Group</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-group-implement-get-all-members" role="function"/>tp_svc_channel_interface_group_implement_get_all_members ()</title>
<indexterm><primary>tp_svc_channel_interface_group_implement_get_all_members</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_implement_get_all_members
                                                        (<link linkend="TpSvcChannelInterfaceGroupClass">TpSvcChannelInterfaceGroupClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-group-get-all-members-impl">tp_svc_channel_interface_group_get_all_members_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetAllMembers method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetAllMembers method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-group-return-from-get-all-members" role="function"/>tp_svc_channel_interface_group_return_from_get_all_members ()</title>
<indexterm><primary>tp_svc_channel_interface_group_return_from_get_all_members</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_return_from_get_all_members
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GArray">GArray</link> *ret,
                                                         const <link linkend="GArray">GArray</link> *ret1,
                                                         const <link linkend="GArray">GArray</link> *ret2);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret1</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret2</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-group-get-group-flags-impl" role="function"/>tp_svc_channel_interface_group_get_group_flags_impl ()</title>
<indexterm><primary>tp_svc_channel_interface_group_get_group_flags_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_interface_group_get_group_flags_impl)
                                                        (<link linkend="TpSvcChannelInterfaceGroup">TpSvcChannelInterfaceGroup</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method GetGroupFlags
on interface org.freedesktop.Telepathy.Channel.Interface.Group</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-group-implement-get-group-flags" role="function"/>tp_svc_channel_interface_group_implement_get_group_flags ()</title>
<indexterm><primary>tp_svc_channel_interface_group_implement_get_group_flags</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_implement_get_group_flags
                                                        (<link linkend="TpSvcChannelInterfaceGroupClass">TpSvcChannelInterfaceGroupClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-group-get-group-flags-impl">tp_svc_channel_interface_group_get_group_flags_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetGroupFlags method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetGroupFlags method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-group-return-from-get-group-flags" role="function"/>tp_svc_channel_interface_group_return_from_get_group_flags ()</title>
<indexterm><primary>tp_svc_channel_interface_group_return_from_get_group_flags</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_return_from_get_group_flags
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         <link linkend="guint">guint</link> ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-group-get-handle-owners-impl" role="function"/>tp_svc_channel_interface_group_get_handle_owners_impl ()</title>
<indexterm><primary>tp_svc_channel_interface_group_get_handle_owners_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_interface_group_get_handle_owners_impl)
                                                        (<link linkend="TpSvcChannelInterfaceGroup">TpSvcChannelInterfaceGroup</link> *self,
                                                         const <link linkend="GArray">GArray</link> *handles,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method GetHandleOwners
on interface org.freedesktop.Telepathy.Channel.Interface.Group</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>handles</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-group-implement-get-handle-owners" role="function"/>tp_svc_channel_interface_group_implement_get_handle_owners ()</title>
<indexterm><primary>tp_svc_channel_interface_group_implement_get_handle_owners</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_implement_get_handle_owners
                                                        (<link linkend="TpSvcChannelInterfaceGroupClass">TpSvcChannelInterfaceGroupClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-group-get-handle-owners-impl">tp_svc_channel_interface_group_get_handle_owners_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetHandleOwners method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetHandleOwners method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-group-return-from-get-handle-owners" role="function"/>tp_svc_channel_interface_group_return_from_get_handle_owners ()</title>
<indexterm><primary>tp_svc_channel_interface_group_return_from_get_handle_owners</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_return_from_get_handle_owners
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GArray">GArray</link> *ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-group-get-local-pending-members-impl" role="function"/>tp_svc_channel_interface_group_get_local_pending_members_impl ()</title>
<indexterm><primary>tp_svc_channel_interface_group_get_local_pending_members_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_interface_group_get_local_pending_members_impl)
                                                        (<link linkend="TpSvcChannelInterfaceGroup">TpSvcChannelInterfaceGroup</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method GetLocalPendingMembers
on interface org.freedesktop.Telepathy.Channel.Interface.Group</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-group-implement-get-local-pending-members" role="function"/>tp_svc_channel_interface_group_implement_get_local_pending_members ()</title>
<indexterm><primary>tp_svc_channel_interface_group_implement_get_local_pending_members</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_implement_get_local_pending_members
                                                        (<link linkend="TpSvcChannelInterfaceGroupClass">TpSvcChannelInterfaceGroupClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-group-get-local-pending-members-impl">tp_svc_channel_interface_group_get_local_pending_members_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetLocalPendingMembers method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetLocalPendingMembers method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-group-return-from-get-local-pending-members" role="function"/>tp_svc_channel_interface_group_return_from_get_local_pending_members ()</title>
<indexterm><primary>tp_svc_channel_interface_group_return_from_get_local_pending_members</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_return_from_get_local_pending_members
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GArray">GArray</link> *ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-group-get-local-pending-members-with-info-impl" role="function"/>tp_svc_channel_interface_group_get_local_pending_members_with_info_impl ()</title>
<indexterm><primary>tp_svc_channel_interface_group_get_local_pending_members_with_info_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_interface_group_get_local_pending_members_with_info_impl)
                                                        (<link linkend="TpSvcChannelInterfaceGroup">TpSvcChannelInterfaceGroup</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method GetLocalPendingMembersWithInfo
on interface org.freedesktop.Telepathy.Channel.Interface.Group</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-group-implement-get-local-pending-members-with-info" role="function"/>tp_svc_channel_interface_group_implement_get_local_pending_members_with_info ()</title>
<indexterm><primary>tp_svc_channel_interface_group_implement_get_local_pending_members_with_info</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_implement_get_local_pending_members_with_info
                                                        (<link linkend="TpSvcChannelInterfaceGroupClass">TpSvcChannelInterfaceGroupClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-group-get-local-pending-members-with-info-impl">tp_svc_channel_interface_group_get_local_pending_members_with_info_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetLocalPendingMembersWithInfo method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetLocalPendingMembersWithInfo method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-group-return-from-get-local-pending-members-with-info" role="function"/>tp_svc_channel_interface_group_return_from_get_local_pending_members_with_info ()</title>
<indexterm><primary>tp_svc_channel_interface_group_return_from_get_local_pending_members_with_info</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_return_from_get_local_pending_members_with_info
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-group-get-members-impl" role="function"/>tp_svc_channel_interface_group_get_members_impl ()</title>
<indexterm><primary>tp_svc_channel_interface_group_get_members_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_interface_group_get_members_impl)
                                                        (<link linkend="TpSvcChannelInterfaceGroup">TpSvcChannelInterfaceGroup</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method GetMembers
on interface org.freedesktop.Telepathy.Channel.Interface.Group</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-group-implement-get-members" role="function"/>tp_svc_channel_interface_group_implement_get_members ()</title>
<indexterm><primary>tp_svc_channel_interface_group_implement_get_members</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_implement_get_members
                                                        (<link linkend="TpSvcChannelInterfaceGroupClass">TpSvcChannelInterfaceGroupClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-group-get-members-impl">tp_svc_channel_interface_group_get_members_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetMembers method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetMembers method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-group-return-from-get-members" role="function"/>tp_svc_channel_interface_group_return_from_get_members ()</title>
<indexterm><primary>tp_svc_channel_interface_group_return_from_get_members</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_return_from_get_members
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GArray">GArray</link> *ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-group-get-remote-pending-members-impl" role="function"/>tp_svc_channel_interface_group_get_remote_pending_members_impl ()</title>
<indexterm><primary>tp_svc_channel_interface_group_get_remote_pending_members_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_interface_group_get_remote_pending_members_impl)
                                                        (<link linkend="TpSvcChannelInterfaceGroup">TpSvcChannelInterfaceGroup</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method GetRemotePendingMembers
on interface org.freedesktop.Telepathy.Channel.Interface.Group</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-group-implement-get-remote-pending-members" role="function"/>tp_svc_channel_interface_group_implement_get_remote_pending_members ()</title>
<indexterm><primary>tp_svc_channel_interface_group_implement_get_remote_pending_members</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_implement_get_remote_pending_members
                                                        (<link linkend="TpSvcChannelInterfaceGroupClass">TpSvcChannelInterfaceGroupClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-group-get-remote-pending-members-impl">tp_svc_channel_interface_group_get_remote_pending_members_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetRemotePendingMembers method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetRemotePendingMembers method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-group-return-from-get-remote-pending-members" role="function"/>tp_svc_channel_interface_group_return_from_get_remote_pending_members ()</title>
<indexterm><primary>tp_svc_channel_interface_group_return_from_get_remote_pending_members</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_return_from_get_remote_pending_members
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GArray">GArray</link> *ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-group-get-self-handle-impl" role="function"/>tp_svc_channel_interface_group_get_self_handle_impl ()</title>
<indexterm><primary>tp_svc_channel_interface_group_get_self_handle_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_interface_group_get_self_handle_impl)
                                                        (<link linkend="TpSvcChannelInterfaceGroup">TpSvcChannelInterfaceGroup</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method GetSelfHandle
on interface org.freedesktop.Telepathy.Channel.Interface.Group</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-group-implement-get-self-handle" role="function"/>tp_svc_channel_interface_group_implement_get_self_handle ()</title>
<indexterm><primary>tp_svc_channel_interface_group_implement_get_self_handle</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_implement_get_self_handle
                                                        (<link linkend="TpSvcChannelInterfaceGroupClass">TpSvcChannelInterfaceGroupClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-group-get-self-handle-impl">tp_svc_channel_interface_group_get_self_handle_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetSelfHandle method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetSelfHandle method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-group-return-from-get-self-handle" role="function"/>tp_svc_channel_interface_group_return_from_get_self_handle ()</title>
<indexterm><primary>tp_svc_channel_interface_group_return_from_get_self_handle</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_return_from_get_self_handle
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         <link linkend="guint">guint</link> ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-group-remove-members-impl" role="function"/>tp_svc_channel_interface_group_remove_members_impl ()</title>
<indexterm><primary>tp_svc_channel_interface_group_remove_members_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_interface_group_remove_members_impl)
                                                        (<link linkend="TpSvcChannelInterfaceGroup">TpSvcChannelInterfaceGroup</link> *self,
                                                         const <link linkend="GArray">GArray</link> *contacts,
                                                         const <link linkend="gchar">gchar</link> *message,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method RemoveMembers
on interface org.freedesktop.Telepathy.Channel.Interface.Group</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>contacts</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>message</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-group-implement-remove-members" role="function"/>tp_svc_channel_interface_group_implement_remove_members ()</title>
<indexterm><primary>tp_svc_channel_interface_group_implement_remove_members</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_implement_remove_members
                                                        (<link linkend="TpSvcChannelInterfaceGroupClass">TpSvcChannelInterfaceGroupClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-group-remove-members-impl">tp_svc_channel_interface_group_remove_members_impl</link> impl);</programlisting>
<para>
Register an implementation for the RemoveMembers method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the RemoveMembers method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-group-return-from-remove-members" role="function"/>tp_svc_channel_interface_group_return_from_remove_members ()</title>
<indexterm><primary>tp_svc_channel_interface_group_return_from_remove_members</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_return_from_remove_members
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-group-emit-group-flags-changed" role="function"/>tp_svc_channel_interface_group_emit_group_flags_changed ()</title>
<indexterm><primary>tp_svc_channel_interface_group_emit_group_flags_changed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_emit_group_flags_changed
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> added,
                                                         const <link linkend="guint">guint</link> removed);</programlisting>
<para>
Emit the GroupFlagsChanged D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>added</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>removed</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-group-emit-members-changed" role="function"/>tp_svc_channel_interface_group_emit_members_changed ()</title>
<indexterm><primary>tp_svc_channel_interface_group_emit_members_changed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_emit_members_changed
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="gchar">gchar</link> *message,
                                                         const <link linkend="GArray">GArray</link> *added,
                                                         const <link linkend="GArray">GArray</link> *removed,
                                                         const <link linkend="GArray">GArray</link> *local_pending,
                                                         const <link linkend="GArray">GArray</link> *remote_pending,
                                                         const <link linkend="guint">guint</link> actor,
                                                         const <link linkend="guint">guint</link> reason);</programlisting>
<para>
Emit the MembersChanged D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>message</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>added</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>removed</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>local_pending</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>remote_pending</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>actor</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>reason</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="TpSvcChannelInterfaceMediaSignalling" role="struct"/>TpSvcChannelInterfaceMediaSignalling</title>
<indexterm><primary>TpSvcChannelInterfaceMediaSignalling</primary></indexterm><programlisting>typedef struct _TpSvcChannelInterfaceMediaSignalling TpSvcChannelInterfaceMediaSignalling;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="TpSvcChannelInterfaceMediaSignallingClass" role="struct"/>TpSvcChannelInterfaceMediaSignallingClass</title>
<indexterm><primary>TpSvcChannelInterfaceMediaSignallingClass</primary></indexterm><programlisting>typedef struct _TpSvcChannelInterfaceMediaSignallingClass TpSvcChannelInterfaceMediaSignallingClass;</programlisting>
<para>
The class of TpSvcChannelInterfaceMediaSignalling.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-media-signalling-get-session-handlers-impl" role="function"/>tp_svc_channel_interface_media_signalling_get_session_handlers_impl ()</title>
<indexterm><primary>tp_svc_channel_interface_media_signalling_get_session_handlers_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_interface_media_signalling_get_session_handlers_impl)
                                                        (<link linkend="TpSvcChannelInterfaceMediaSignalling">TpSvcChannelInterfaceMediaSignalling</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method GetSessionHandlers
on interface org.freedesktop.Telepathy.Channel.Interface.MediaSignalling</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-media-signalling-implement-get-session-handlers" role="function"/>tp_svc_channel_interface_media_signalling_implement_get_session_handlers ()</title>
<indexterm><primary>tp_svc_channel_interface_media_signalling_implement_get_session_handlers</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_media_signalling_implement_get_session_handlers
                                                        (<link linkend="TpSvcChannelInterfaceMediaSignallingClass">TpSvcChannelInterfaceMediaSignallingClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-media-signalling-get-session-handlers-impl">tp_svc_channel_interface_media_signalling_get_session_handlers_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetSessionHandlers method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetSessionHandlers method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-media-signalling-return-from-get-session-handlers" role="function"/>tp_svc_channel_interface_media_signalling_return_from_get_session_handlers ()</title>
<indexterm><primary>tp_svc_channel_interface_media_signalling_return_from_get_session_handlers</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_media_signalling_return_from_get_session_handlers
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-media-signalling-emit-new-session-handler" role="function"/>tp_svc_channel_interface_media_signalling_emit_new_session_handler ()</title>
<indexterm><primary>tp_svc_channel_interface_media_signalling_emit_new_session_handler</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_media_signalling_emit_new_session_handler
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="gchar">gchar</link> *session_handler,
                                                         const <link linkend="gchar">gchar</link> *type);</programlisting>
<para>
Emit the NewSessionHandler D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>session_handler</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="TpSvcChannelInterfaceChatState" role="struct"/>TpSvcChannelInterfaceChatState</title>
<indexterm><primary>TpSvcChannelInterfaceChatState</primary></indexterm><programlisting>typedef struct _TpSvcChannelInterfaceChatState TpSvcChannelInterfaceChatState;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="TpSvcChannelInterfaceChatStateClass" role="struct"/>TpSvcChannelInterfaceChatStateClass</title>
<indexterm><primary>TpSvcChannelInterfaceChatStateClass</primary></indexterm><programlisting>typedef struct _TpSvcChannelInterfaceChatStateClass TpSvcChannelInterfaceChatStateClass;</programlisting>
<para>
The class of TpSvcChannelInterfaceChatState.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-chat-state-set-chat-state-impl" role="function"/>tp_svc_channel_interface_chat_state_set_chat_state_impl ()</title>
<indexterm><primary>tp_svc_channel_interface_chat_state_set_chat_state_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_interface_chat_state_set_chat_state_impl)
                                                        (<link linkend="TpSvcChannelInterfaceChatState">TpSvcChannelInterfaceChatState</link> *self,
                                                         <link linkend="guint">guint</link> state,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method SetChatState
on interface org.freedesktop.Telepathy.Channel.Interface.ChatState</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-chat-state-implement-set-chat-state" role="function"/>tp_svc_channel_interface_chat_state_implement_set_chat_state ()</title>
<indexterm><primary>tp_svc_channel_interface_chat_state_implement_set_chat_state</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_chat_state_implement_set_chat_state
                                                        (<link linkend="TpSvcChannelInterfaceChatStateClass">TpSvcChannelInterfaceChatStateClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-chat-state-set-chat-state-impl">tp_svc_channel_interface_chat_state_set_chat_state_impl</link> impl);</programlisting>
<para>
Register an implementation for the SetChatState method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the SetChatState method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-chat-state-return-from-set-chat-state" role="function"/>tp_svc_channel_interface_chat_state_return_from_set_chat_state ()</title>
<indexterm><primary>tp_svc_channel_interface_chat_state_return_from_set_chat_state</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_chat_state_return_from_set_chat_state
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="tp-svc-channel-interface-chat-state-emit-chat-state-changed" role="function"/>tp_svc_channel_interface_chat_state_emit_chat_state_changed ()</title>
<indexterm><primary>tp_svc_channel_interface_chat_state_emit_chat_state_changed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_chat_state_emit_chat_state_changed
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> contact,
                                                         const <link linkend="guint">guint</link> state);</programlisting>
<para>
Emit the ChatStateChanged D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>contact</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>



<refsect1>
<title>See Also</title>
<link linkend="TpChannelIface"><type>TpChannelIface</type></link>
</refsect1>

</refentry>

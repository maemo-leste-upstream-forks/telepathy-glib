<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="telepathy-glib-svc-channel">
<refmeta>
<refentrytitle role="top_of_page" id="telepathy-glib-svc-channel.top_of_page">Service-side Channel base interface</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>TELEPATHY-GLIB Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>Service-side Channel base interface</refname>
<refpurpose>GInterface for Telepathy Channel objects</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv id="telepathy-glib-svc-channel.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>

#include &lt;telepathy-glib/svc-channel.h&gt;

                    <link linkend="TpSvcChannel">TpSvcChannel</link>;
                    <link linkend="TpSvcChannelClass">TpSvcChannelClass</link>;
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-close-impl">*tp_svc_channel_close_impl</link>)        (<link linkend="TpSvcChannel">TpSvcChannel</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-implement-close">tp_svc_channel_implement_close</link>      (<link linkend="TpSvcChannelClass">TpSvcChannelClass</link> *klass,
                                                         <link linkend="tp-svc-channel-close-impl">tp_svc_channel_close_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-return-from-close">tp_svc_channel_return_from_close</link>    (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-get-channel-type-impl">*tp_svc_channel_get_channel_type_impl</link>)
                                                        (<link linkend="TpSvcChannel">TpSvcChannel</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-implement-get-channel-type">tp_svc_channel_implement_get_channel_type</link>
                                                        (<link linkend="TpSvcChannelClass">TpSvcChannelClass</link> *klass,
                                                         <link linkend="tp-svc-channel-get-channel-type-impl">tp_svc_channel_get_channel_type_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-return-from-get-channel-type">tp_svc_channel_return_from_get_channel_type</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="gchar">gchar</link> *out0);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-get-handle-impl">*tp_svc_channel_get_handle_impl</link>)   (<link linkend="TpSvcChannel">TpSvcChannel</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-implement-get-handle">tp_svc_channel_implement_get_handle</link> (<link linkend="TpSvcChannelClass">TpSvcChannelClass</link> *klass,
                                                         <link linkend="tp-svc-channel-get-handle-impl">tp_svc_channel_get_handle_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-return-from-get-handle">tp_svc_channel_return_from_get_handle</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         <link linkend="guint">guint</link> out0,
                                                         <link linkend="guint">guint</link> out1);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-get-interfaces-impl">*tp_svc_channel_get_interfaces_impl</link>)
                                                        (<link linkend="TpSvcChannel">TpSvcChannel</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-implement-get-interfaces">tp_svc_channel_implement_get_interfaces</link>
                                                        (<link linkend="TpSvcChannelClass">TpSvcChannelClass</link> *klass,
                                                         <link linkend="tp-svc-channel-get-interfaces-impl">tp_svc_channel_get_interfaces_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-return-from-get-interfaces">tp_svc_channel_return_from_get_interfaces</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="gchar">gchar</link> **out0);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-emit-closed">tp_svc_channel_emit_closed</link>          (<link linkend="gpointer">gpointer</link> instance);
</synopsis>
</refsynopsisdiv>









<refsect1 id="telepathy-glib-svc-channel.description" role="desc">
<title role="desc.title">Description</title>
<para>
This interface (auto-generated from the Telepathy spec) makes it easier
to export objects implementing the Telepathy Channel.</para>
<para>

</para>
</refsect1>

<refsect1 id="telepathy-glib-svc-channel.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="TpSvcChannel" role="struct">
<title>TpSvcChannel</title>
<indexterm zone="TpSvcChannel"><primary>TpSvcChannel</primary></indexterm><programlisting>typedef struct _TpSvcChannel TpSvcChannel;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>

</para></refsect2>
<refsect2 id="TpSvcChannelClass" role="struct">
<title>TpSvcChannelClass</title>
<indexterm zone="TpSvcChannelClass"><primary>TpSvcChannelClass</primary></indexterm><programlisting>typedef struct _TpSvcChannelClass TpSvcChannelClass;</programlisting>
<para>
The class of TpSvcChannel.</para>
<para>

</para></refsect2>
<refsect2 id="tp-svc-channel-close-impl" role="function">
<title>tp_svc_channel_close_impl ()</title>
<indexterm zone="tp-svc-channel-close-impl"><primary>tp_svc_channel_close_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_close_impl)        (<link linkend="TpSvcChannel">TpSvcChannel</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
Close on interface org.freedesktop.Telepathy.Channel.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-implement-close" role="function">
<title>tp_svc_channel_implement_close ()</title>
<indexterm zone="tp-svc-channel-implement-close"><primary>tp_svc_channel_implement_close</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_implement_close      (<link linkend="TpSvcChannelClass">TpSvcChannelClass</link> *klass,
                                                         <link linkend="tp-svc-channel-close-impl">tp_svc_channel_close_impl</link> impl);</programlisting>
<para>
Register an implementation for the Close method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the Close D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-return-from-close" role="function">
<title>tp_svc_channel_return_from_close ()</title>
<indexterm zone="tp-svc-channel-return-from-close"><primary>tp_svc_channel_return_from_close</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_return_from_close    (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-get-channel-type-impl" role="function">
<title>tp_svc_channel_get_channel_type_impl ()</title>
<indexterm zone="tp-svc-channel-get-channel-type-impl"><primary>tp_svc_channel_get_channel_type_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_get_channel_type_impl)
                                                        (<link linkend="TpSvcChannel">TpSvcChannel</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
GetChannelType on interface org.freedesktop.Telepathy.Channel.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-implement-get-channel-type" role="function">
<title>tp_svc_channel_implement_get_channel_type ()</title>
<indexterm zone="tp-svc-channel-implement-get-channel-type"><primary>tp_svc_channel_implement_get_channel_type</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_implement_get_channel_type
                                                        (<link linkend="TpSvcChannelClass">TpSvcChannelClass</link> *klass,
                                                         <link linkend="tp-svc-channel-get-channel-type-impl">tp_svc_channel_get_channel_type_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetChannelType method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetChannelType D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-return-from-get-channel-type" role="function">
<title>tp_svc_channel_return_from_get_channel_type ()</title>
<indexterm zone="tp-svc-channel-return-from-get-channel-type"><primary>tp_svc_channel_return_from_get_channel_type</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_return_from_get_channel_type
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="gchar">gchar</link> *out0);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out0</parameter>&nbsp;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-get-handle-impl" role="function">
<title>tp_svc_channel_get_handle_impl ()</title>
<indexterm zone="tp-svc-channel-get-handle-impl"><primary>tp_svc_channel_get_handle_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_get_handle_impl)   (<link linkend="TpSvcChannel">TpSvcChannel</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
GetHandle on interface org.freedesktop.Telepathy.Channel.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-implement-get-handle" role="function">
<title>tp_svc_channel_implement_get_handle ()</title>
<indexterm zone="tp-svc-channel-implement-get-handle"><primary>tp_svc_channel_implement_get_handle</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_implement_get_handle (<link linkend="TpSvcChannelClass">TpSvcChannelClass</link> *klass,
                                                         <link linkend="tp-svc-channel-get-handle-impl">tp_svc_channel_get_handle_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetHandle method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetHandle D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-return-from-get-handle" role="function">
<title>tp_svc_channel_return_from_get_handle ()</title>
<indexterm zone="tp-svc-channel-return-from-get-handle"><primary>tp_svc_channel_return_from_get_handle</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_return_from_get_handle
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         <link linkend="guint">guint</link> out0,
                                                         <link linkend="guint">guint</link> out1);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out0</parameter>&nbsp;:</term>
<listitem><simpara> guint  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out1</parameter>&nbsp;:</term>
<listitem><simpara> guint  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-get-interfaces-impl" role="function">
<title>tp_svc_channel_get_interfaces_impl ()</title>
<indexterm zone="tp-svc-channel-get-interfaces-impl"><primary>tp_svc_channel_get_interfaces_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_get_interfaces_impl)
                                                        (<link linkend="TpSvcChannel">TpSvcChannel</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
GetInterfaces on interface org.freedesktop.Telepathy.Channel.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-implement-get-interfaces" role="function">
<title>tp_svc_channel_implement_get_interfaces ()</title>
<indexterm zone="tp-svc-channel-implement-get-interfaces"><primary>tp_svc_channel_implement_get_interfaces</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_implement_get_interfaces
                                                        (<link linkend="TpSvcChannelClass">TpSvcChannelClass</link> *klass,
                                                         <link linkend="tp-svc-channel-get-interfaces-impl">tp_svc_channel_get_interfaces_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetInterfaces method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetInterfaces D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-return-from-get-interfaces" role="function">
<title>tp_svc_channel_return_from_get_interfaces ()</title>
<indexterm zone="tp-svc-channel-return-from-get-interfaces"><primary>tp_svc_channel_return_from_get_interfaces</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_return_from_get_interfaces
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="gchar">gchar</link> **out0);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out0</parameter>&nbsp;:</term>
<listitem><simpara> const gchar ** (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-emit-closed" role="function">
<title>tp_svc_channel_emit_closed ()</title>
<indexterm zone="tp-svc-channel-emit-closed"><primary>tp_svc_channel_emit_closed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_emit_closed          (<link linkend="gpointer">gpointer</link> instance);</programlisting>
<para>
Type-safe wrapper around g_signal_emit to emit the
Closed signal on interface org.freedesktop.Telepathy.Channel.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>



<refsect1 id="telepathy-glib-svc-channel.see-also">
<title>See Also</title>
<link linkend="TpChannelIface"><type>TpChannelIface</type></link>
</refsect1>

</refentry>

<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="telepathy-glib-svc-channel">
<refmeta>
<refentrytitle role="top_of_page" id="telepathy-glib-svc-channel.top_of_page">Service-side Channel types and interfaces</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>TELEPATHY-GLIB Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>Service-side Channel types and interfaces</refname>
<refpurpose>GInterfaces for Telepathy Channel objects</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv id="telepathy-glib-svc-channel.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>

#include &lt;telepathy-glib/svc-channel.h&gt;

                    <link linkend="TpSvcChannel">TpSvcChannel</link>;
                    <link linkend="TpSvcChannelClass">TpSvcChannelClass</link>;
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-close-impl">*tp_svc_channel_close_impl</link>)        (<link linkend="TpSvcChannel">TpSvcChannel</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-implement-close">tp_svc_channel_implement_close</link>      (<link linkend="TpSvcChannelClass">TpSvcChannelClass</link> *klass,
                                                         <link linkend="tp-svc-channel-close-impl">tp_svc_channel_close_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-return-from-close">tp_svc_channel_return_from_close</link>    (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-get-channel-type-impl">*tp_svc_channel_get_channel_type_impl</link>)
                                                        (<link linkend="TpSvcChannel">TpSvcChannel</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-implement-get-channel-type">tp_svc_channel_implement_get_channel_type</link>
                                                        (<link linkend="TpSvcChannelClass">TpSvcChannelClass</link> *klass,
                                                         <link linkend="tp-svc-channel-get-channel-type-impl">tp_svc_channel_get_channel_type_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-return-from-get-channel-type">tp_svc_channel_return_from_get_channel_type</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="gchar">gchar</link> *ret);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-get-handle-impl">*tp_svc_channel_get_handle_impl</link>)   (<link linkend="TpSvcChannel">TpSvcChannel</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-implement-get-handle">tp_svc_channel_implement_get_handle</link> (<link linkend="TpSvcChannelClass">TpSvcChannelClass</link> *klass,
                                                         <link linkend="tp-svc-channel-get-handle-impl">tp_svc_channel_get_handle_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-return-from-get-handle">tp_svc_channel_return_from_get_handle</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         <link linkend="guint">guint</link> ret,
                                                         <link linkend="guint">guint</link> ret1);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-get-interfaces-impl">*tp_svc_channel_get_interfaces_impl</link>)
                                                        (<link linkend="TpSvcChannel">TpSvcChannel</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-implement-get-interfaces">tp_svc_channel_implement_get_interfaces</link>
                                                        (<link linkend="TpSvcChannelClass">TpSvcChannelClass</link> *klass,
                                                         <link linkend="tp-svc-channel-get-interfaces-impl">tp_svc_channel_get_interfaces_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-return-from-get-interfaces">tp_svc_channel_return_from_get_interfaces</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="gchar">gchar</link> **ret);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-emit-closed">tp_svc_channel_emit_closed</link>          (<link linkend="gpointer">gpointer</link> instance);


                    <link linkend="TpSvcChannelTypeText">TpSvcChannelTypeText</link>;
                    <link linkend="TpSvcChannelTypeTextClass">TpSvcChannelTypeTextClass</link>;
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-type-text-acknowledge-pending-messages-impl">*tp_svc_channel_type_text_acknowledge_pending_messages_impl</link>)
                                                        (<link linkend="TpSvcChannelTypeText">TpSvcChannelTypeText</link> *self,
                                                         const <link linkend="GArray">GArray</link> *ids,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-text-implement-acknowledge-pending-messages">tp_svc_channel_type_text_implement_acknowledge_pending_messages</link>
                                                        (<link linkend="TpSvcChannelTypeTextClass">TpSvcChannelTypeTextClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-text-acknowledge-pending-messages-impl">tp_svc_channel_type_text_acknowledge_pending_messages_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-text-return-from-acknowledge-pending-messages">tp_svc_channel_type_text_return_from_acknowledge_pending_messages</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-type-text-get-message-types-impl">*tp_svc_channel_type_text_get_message_types_impl</link>)
                                                        (<link linkend="TpSvcChannelTypeText">TpSvcChannelTypeText</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-text-implement-get-message-types">tp_svc_channel_type_text_implement_get_message_types</link>
                                                        (<link linkend="TpSvcChannelTypeTextClass">TpSvcChannelTypeTextClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-text-get-message-types-impl">tp_svc_channel_type_text_get_message_types_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-text-return-from-get-message-types">tp_svc_channel_type_text_return_from_get_message_types</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GArray">GArray</link> *ret);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-type-text-list-pending-messages-impl">*tp_svc_channel_type_text_list_pending_messages_impl</link>)
                                                        (<link linkend="TpSvcChannelTypeText">TpSvcChannelTypeText</link> *self,
                                                         <link linkend="gboolean">gboolean</link> clear,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-text-implement-list-pending-messages">tp_svc_channel_type_text_implement_list_pending_messages</link>
                                                        (<link linkend="TpSvcChannelTypeTextClass">TpSvcChannelTypeTextClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-text-list-pending-messages-impl">tp_svc_channel_type_text_list_pending_messages_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-text-return-from-list-pending-messages">tp_svc_channel_type_text_return_from_list_pending_messages</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *ret);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-type-text-send-impl">*tp_svc_channel_type_text_send_impl</link>)
                                                        (<link linkend="TpSvcChannelTypeText">TpSvcChannelTypeText</link> *self,
                                                         <link linkend="guint">guint</link> type,
                                                         const <link linkend="gchar">gchar</link> *text,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-text-implement-send">tp_svc_channel_type_text_implement_send</link>
                                                        (<link linkend="TpSvcChannelTypeTextClass">TpSvcChannelTypeTextClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-text-send-impl">tp_svc_channel_type_text_send_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-text-return-from-send">tp_svc_channel_type_text_return_from_send</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-text-emit-lost-message">tp_svc_channel_type_text_emit_lost_message</link>
                                                        (<link linkend="gpointer">gpointer</link> instance);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-text-emit-received">tp_svc_channel_type_text_emit_received</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> id,
                                                         const <link linkend="guint">guint</link> timestamp,
                                                         const <link linkend="guint">guint</link> sender,
                                                         const <link linkend="guint">guint</link> type,
                                                         const <link linkend="guint">guint</link> flags,
                                                         const <link linkend="gchar">gchar</link> *text);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-text-emit-send-error">tp_svc_channel_type_text_emit_send_error</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> error,
                                                         const <link linkend="guint">guint</link> timestamp,
                                                         const <link linkend="guint">guint</link> type,
                                                         const <link linkend="gchar">gchar</link> *text);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-text-emit-sent">tp_svc_channel_type_text_emit_sent</link>  (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> timestamp,
                                                         const <link linkend="guint">guint</link> type,
                                                         const <link linkend="gchar">gchar</link> *text);


                    <link linkend="TpSvcChannelTypeTubes">TpSvcChannelTypeTubes</link>;
                    <link linkend="TpSvcChannelTypeTubesClass">TpSvcChannelTypeTubesClass</link>;
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-type-tubes-accept-d-bus-tube-impl">*tp_svc_channel_type_tubes_accept_d_bus_tube_impl</link>)
                                                        (<link linkend="TpSvcChannelTypeTubes">TpSvcChannelTypeTubes</link> *self,
                                                         <link linkend="guint">guint</link> id,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-tubes-implement-accept-d-bus-tube">tp_svc_channel_type_tubes_implement_accept_d_bus_tube</link>
                                                        (<link linkend="TpSvcChannelTypeTubesClass">TpSvcChannelTypeTubesClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-tubes-accept-d-bus-tube-impl">tp_svc_channel_type_tubes_accept_d_bus_tube_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-tubes-return-from-accept-d-bus-tube">tp_svc_channel_type_tubes_return_from_accept_d_bus_tube</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="gchar">gchar</link> *address);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-type-tubes-accept-stream-tube-impl">*tp_svc_channel_type_tubes_accept_stream_tube_impl</link>)
                                                        (<link linkend="TpSvcChannelTypeTubes">TpSvcChannelTypeTubes</link> *self,
                                                         <link linkend="guint">guint</link> id,
                                                         <link linkend="guint">guint</link> address_type,
                                                         <link linkend="guint">guint</link> access_control,
                                                         const <link linkend="GValue">GValue</link> *access_control_param,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-tubes-implement-accept-stream-tube">tp_svc_channel_type_tubes_implement_accept_stream_tube</link>
                                                        (<link linkend="TpSvcChannelTypeTubesClass">TpSvcChannelTypeTubesClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-tubes-accept-stream-tube-impl">tp_svc_channel_type_tubes_accept_stream_tube_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-tubes-return-from-accept-stream-tube">tp_svc_channel_type_tubes_return_from_accept_stream_tube</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GValue">GValue</link> *address);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-type-tubes-close-tube-impl">*tp_svc_channel_type_tubes_close_tube_impl</link>)
                                                        (<link linkend="TpSvcChannelTypeTubes">TpSvcChannelTypeTubes</link> *self,
                                                         <link linkend="guint">guint</link> id,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-tubes-implement-close-tube">tp_svc_channel_type_tubes_implement_close_tube</link>
                                                        (<link linkend="TpSvcChannelTypeTubesClass">TpSvcChannelTypeTubesClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-tubes-close-tube-impl">tp_svc_channel_type_tubes_close_tube_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-tubes-return-from-close-tube">tp_svc_channel_type_tubes_return_from_close_tube</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-type-tubes-get-available-stream-tube-types-impl">*tp_svc_channel_type_tubes_get_available_stream_tube_types_impl</link>)
                                                        (<link linkend="TpSvcChannelTypeTubes">TpSvcChannelTypeTubes</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-tubes-implement-get-available-stream-tube-types">tp_svc_channel_type_tubes_implement_get_available_stream_tube_types</link>
                                                        (<link linkend="TpSvcChannelTypeTubesClass">TpSvcChannelTypeTubesClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-tubes-get-available-stream-tube-types-impl">tp_svc_channel_type_tubes_get_available_stream_tube_types_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-tubes-return-from-get-available-stream-tube-types">tp_svc_channel_type_tubes_return_from_get_available_stream_tube_types</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         <link linkend="GHashTable">GHashTable</link> *ret);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-type-tubes-get-available-tube-types-impl">*tp_svc_channel_type_tubes_get_available_tube_types_impl</link>)
                                                        (<link linkend="TpSvcChannelTypeTubes">TpSvcChannelTypeTubes</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-tubes-implement-get-available-tube-types">tp_svc_channel_type_tubes_implement_get_available_tube_types</link>
                                                        (<link linkend="TpSvcChannelTypeTubesClass">TpSvcChannelTypeTubesClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-tubes-get-available-tube-types-impl">tp_svc_channel_type_tubes_get_available_tube_types_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-tubes-return-from-get-available-tube-types">tp_svc_channel_type_tubes_return_from_get_available_tube_types</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GArray">GArray</link> *ret);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-type-tubes-get-d-bus-names-impl">*tp_svc_channel_type_tubes_get_d_bus_names_impl</link>)
                                                        (<link linkend="TpSvcChannelTypeTubes">TpSvcChannelTypeTubes</link> *self,
                                                         <link linkend="guint">guint</link> id,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-tubes-implement-get-d-bus-names">tp_svc_channel_type_tubes_implement_get_d_bus_names</link>
                                                        (<link linkend="TpSvcChannelTypeTubesClass">TpSvcChannelTypeTubesClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-tubes-get-d-bus-names-impl">tp_svc_channel_type_tubes_get_d_bus_names_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-tubes-return-from-get-d-bus-names">tp_svc_channel_type_tubes_return_from_get_d_bus_names</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *ret);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-type-tubes-get-d-bus-tube-address-impl">*tp_svc_channel_type_tubes_get_d_bus_tube_address_impl</link>)
                                                        (<link linkend="TpSvcChannelTypeTubes">TpSvcChannelTypeTubes</link> *self,
                                                         <link linkend="guint">guint</link> id,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-tubes-implement-get-d-bus-tube-address">tp_svc_channel_type_tubes_implement_get_d_bus_tube_address</link>
                                                        (<link linkend="TpSvcChannelTypeTubesClass">TpSvcChannelTypeTubesClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-tubes-get-d-bus-tube-address-impl">tp_svc_channel_type_tubes_get_d_bus_tube_address_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-tubes-return-from-get-d-bus-tube-address">tp_svc_channel_type_tubes_return_from_get_d_bus_tube_address</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="gchar">gchar</link> *ret);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-type-tubes-get-stream-tube-socket-address-impl">*tp_svc_channel_type_tubes_get_stream_tube_socket_address_impl</link>)
                                                        (<link linkend="TpSvcChannelTypeTubes">TpSvcChannelTypeTubes</link> *self,
                                                         <link linkend="guint">guint</link> id,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-tubes-implement-get-stream-tube-socket-address">tp_svc_channel_type_tubes_implement_get_stream_tube_socket_address</link>
                                                        (<link linkend="TpSvcChannelTypeTubesClass">TpSvcChannelTypeTubesClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-tubes-get-stream-tube-socket-address-impl">tp_svc_channel_type_tubes_get_stream_tube_socket_address_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-tubes-return-from-get-stream-tube-socket-address">tp_svc_channel_type_tubes_return_from_get_stream_tube_socket_address</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         <link linkend="guint">guint</link> address_type,
                                                         const <link linkend="GValue">GValue</link> *address);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-type-tubes-list-tubes-impl">*tp_svc_channel_type_tubes_list_tubes_impl</link>)
                                                        (<link linkend="TpSvcChannelTypeTubes">TpSvcChannelTypeTubes</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-tubes-implement-list-tubes">tp_svc_channel_type_tubes_implement_list_tubes</link>
                                                        (<link linkend="TpSvcChannelTypeTubesClass">TpSvcChannelTypeTubesClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-tubes-list-tubes-impl">tp_svc_channel_type_tubes_list_tubes_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-tubes-return-from-list-tubes">tp_svc_channel_type_tubes_return_from_list_tubes</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *ret);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-type-tubes-offer-d-bus-tube-impl">*tp_svc_channel_type_tubes_offer_d_bus_tube_impl</link>)
                                                        (<link linkend="TpSvcChannelTypeTubes">TpSvcChannelTypeTubes</link> *self,
                                                         const <link linkend="gchar">gchar</link> *service,
                                                         <link linkend="GHashTable">GHashTable</link> *parameters,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-tubes-implement-offer-d-bus-tube">tp_svc_channel_type_tubes_implement_offer_d_bus_tube</link>
                                                        (<link linkend="TpSvcChannelTypeTubesClass">TpSvcChannelTypeTubesClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-tubes-offer-d-bus-tube-impl">tp_svc_channel_type_tubes_offer_d_bus_tube_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-tubes-return-from-offer-d-bus-tube">tp_svc_channel_type_tubes_return_from_offer_d_bus_tube</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         <link linkend="guint">guint</link> ret);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-type-tubes-offer-stream-tube-impl">*tp_svc_channel_type_tubes_offer_stream_tube_impl</link>)
                                                        (<link linkend="TpSvcChannelTypeTubes">TpSvcChannelTypeTubes</link> *self,
                                                         const <link linkend="gchar">gchar</link> *service,
                                                         <link linkend="GHashTable">GHashTable</link> *parameters,
                                                         <link linkend="guint">guint</link> address_type,
                                                         const <link linkend="GValue">GValue</link> *address,
                                                         <link linkend="guint">guint</link> access_control,
                                                         const <link linkend="GValue">GValue</link> *access_control_param,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-tubes-implement-offer-stream-tube">tp_svc_channel_type_tubes_implement_offer_stream_tube</link>
                                                        (<link linkend="TpSvcChannelTypeTubesClass">TpSvcChannelTypeTubesClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-tubes-offer-stream-tube-impl">tp_svc_channel_type_tubes_offer_stream_tube_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-tubes-return-from-offer-stream-tube">tp_svc_channel_type_tubes_return_from_offer_stream_tube</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         <link linkend="guint">guint</link> ret);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-tubes-emit-d-bus-names-changed">tp_svc_channel_type_tubes_emit_d_bus_names_changed</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> id,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *added,
                                                         const <link linkend="GArray">GArray</link> *removed);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-tubes-emit-new-tube">tp_svc_channel_type_tubes_emit_new_tube</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> id,
                                                         const <link linkend="guint">guint</link> initiator,
                                                         const <link linkend="guint">guint</link> type,
                                                         const <link linkend="gchar">gchar</link> *service,
                                                         const <link linkend="GHashTable">GHashTable</link> *parameters,
                                                         const <link linkend="guint">guint</link> state);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-tubes-emit-stream-tube-new-connection">tp_svc_channel_type_tubes_emit_stream_tube_new_connection</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> id,
                                                         const <link linkend="guint">guint</link> handle);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-tubes-emit-tube-closed">tp_svc_channel_type_tubes_emit_tube_closed</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> id);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-tubes-emit-tube-state-changed">tp_svc_channel_type_tubes_emit_tube_state_changed</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> id,
                                                         const <link linkend="guint">guint</link> state);


<link linkend="void">void</link>                (<link linkend="tp-svc-connection-interface-avatars-get-known-avatar-tokens-impl">*tp_svc_connection_interface_avatars_get_known_avatar_tokens_impl</link>)
                                                        (<link linkend="TpSvcConnectionInterfaceAvatars">TpSvcConnectionInterfaceAvatars</link> *self,
                                                         const <link linkend="GArray">GArray</link> *contacts,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-avatars-implement-get-known-avatar-tokens">tp_svc_connection_interface_avatars_implement_get_known_avatar_tokens</link>
                                                        (<link linkend="TpSvcConnectionInterfaceAvatarsClass">TpSvcConnectionInterfaceAvatarsClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-avatars-get-known-avatar-tokens-impl">tp_svc_connection_interface_avatars_get_known_avatar_tokens_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-avatars-return-from-get-known-avatar-tokens">tp_svc_connection_interface_avatars_return_from_get_known_avatar_tokens</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         <link linkend="GHashTable">GHashTable</link> *ret);

                    <link linkend="TpSvcChannelInterfacePassword">TpSvcChannelInterfacePassword</link>;
                    <link linkend="TpSvcChannelInterfacePasswordClass">TpSvcChannelInterfacePasswordClass</link>;
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-interface-password-get-password-flags-impl">*tp_svc_channel_interface_password_get_password_flags_impl</link>)
                                                        (<link linkend="TpSvcChannelInterfacePassword">TpSvcChannelInterfacePassword</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-password-implement-get-password-flags">tp_svc_channel_interface_password_implement_get_password_flags</link>
                                                        (<link linkend="TpSvcChannelInterfacePasswordClass">TpSvcChannelInterfacePasswordClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-password-get-password-flags-impl">tp_svc_channel_interface_password_get_password_flags_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-password-return-from-get-password-flags">tp_svc_channel_interface_password_return_from_get_password_flags</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         <link linkend="guint">guint</link> ret);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-interface-password-provide-password-impl">*tp_svc_channel_interface_password_provide_password_impl</link>)
                                                        (<link linkend="TpSvcChannelInterfacePassword">TpSvcChannelInterfacePassword</link> *self,
                                                         const <link linkend="gchar">gchar</link> *password,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-password-implement-provide-password">tp_svc_channel_interface_password_implement_provide_password</link>
                                                        (<link linkend="TpSvcChannelInterfacePasswordClass">TpSvcChannelInterfacePasswordClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-password-provide-password-impl">tp_svc_channel_interface_password_provide_password_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-password-return-from-provide-password">tp_svc_channel_interface_password_return_from_provide_password</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         <link linkend="gboolean">gboolean</link> ret);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-password-emit-password-flags-changed">tp_svc_channel_interface_password_emit_password_flags_changed</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> added,
                                                         const <link linkend="guint">guint</link> removed);


                    <link linkend="TpSvcChannelTypeRoomList">TpSvcChannelTypeRoomList</link>;
                    <link linkend="TpSvcChannelTypeRoomListClass">TpSvcChannelTypeRoomListClass</link>;
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-type-room-list-get-listing-rooms-impl">*tp_svc_channel_type_room_list_get_listing_rooms_impl</link>)
                                                        (<link linkend="TpSvcChannelTypeRoomList">TpSvcChannelTypeRoomList</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-room-list-implement-get-listing-rooms">tp_svc_channel_type_room_list_implement_get_listing_rooms</link>
                                                        (<link linkend="TpSvcChannelTypeRoomListClass">TpSvcChannelTypeRoomListClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-room-list-get-listing-rooms-impl">tp_svc_channel_type_room_list_get_listing_rooms_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-room-list-return-from-get-listing-rooms">tp_svc_channel_type_room_list_return_from_get_listing_rooms</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         <link linkend="gboolean">gboolean</link> ret);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-type-room-list-list-rooms-impl">*tp_svc_channel_type_room_list_list_rooms_impl</link>)
                                                        (<link linkend="TpSvcChannelTypeRoomList">TpSvcChannelTypeRoomList</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-room-list-implement-list-rooms">tp_svc_channel_type_room_list_implement_list_rooms</link>
                                                        (<link linkend="TpSvcChannelTypeRoomListClass">TpSvcChannelTypeRoomListClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-room-list-list-rooms-impl">tp_svc_channel_type_room_list_list_rooms_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-room-list-return-from-list-rooms">tp_svc_channel_type_room_list_return_from_list_rooms</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-type-room-list-stop-listing-impl">*tp_svc_channel_type_room_list_stop_listing_impl</link>)
                                                        (<link linkend="TpSvcChannelTypeRoomList">TpSvcChannelTypeRoomList</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-room-list-implement-stop-listing">tp_svc_channel_type_room_list_implement_stop_listing</link>
                                                        (<link linkend="TpSvcChannelTypeRoomListClass">TpSvcChannelTypeRoomListClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-room-list-stop-listing-impl">tp_svc_channel_type_room_list_stop_listing_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-room-list-return-from-stop-listing">tp_svc_channel_type_room_list_return_from_stop_listing</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-room-list-emit-got-rooms">tp_svc_channel_type_room_list_emit_got_rooms</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *rooms);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-room-list-emit-listing-rooms">tp_svc_channel_type_room_list_emit_listing_rooms</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="gboolean">gboolean</link> listing);


                    <link linkend="TpSvcChannelTypeStreamedMedia">TpSvcChannelTypeStreamedMedia</link>;
                    <link linkend="TpSvcChannelTypeStreamedMediaClass">TpSvcChannelTypeStreamedMediaClass</link>;
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-type-streamed-media-list-streams-impl">*tp_svc_channel_type_streamed_media_list_streams_impl</link>)
                                                        (<link linkend="TpSvcChannelTypeStreamedMedia">TpSvcChannelTypeStreamedMedia</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-streamed-media-implement-list-streams">tp_svc_channel_type_streamed_media_implement_list_streams</link>
                                                        (<link linkend="TpSvcChannelTypeStreamedMediaClass">TpSvcChannelTypeStreamedMediaClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-streamed-media-list-streams-impl">tp_svc_channel_type_streamed_media_list_streams_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-streamed-media-return-from-list-streams">tp_svc_channel_type_streamed_media_return_from_list_streams</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *ret);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-type-streamed-media-remove-streams-impl">*tp_svc_channel_type_streamed_media_remove_streams_impl</link>)
                                                        (<link linkend="TpSvcChannelTypeStreamedMedia">TpSvcChannelTypeStreamedMedia</link> *self,
                                                         const <link linkend="GArray">GArray</link> *streams,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-streamed-media-implement-remove-streams">tp_svc_channel_type_streamed_media_implement_remove_streams</link>
                                                        (<link linkend="TpSvcChannelTypeStreamedMediaClass">TpSvcChannelTypeStreamedMediaClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-streamed-media-remove-streams-impl">tp_svc_channel_type_streamed_media_remove_streams_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-streamed-media-return-from-remove-streams">tp_svc_channel_type_streamed_media_return_from_remove_streams</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-type-streamed-media-request-stream-direction-impl">*tp_svc_channel_type_streamed_media_request_stream_direction_impl</link>)
                                                        (<link linkend="TpSvcChannelTypeStreamedMedia">TpSvcChannelTypeStreamedMedia</link> *self,
                                                         <link linkend="guint">guint</link> stream_id,
                                                         <link linkend="guint">guint</link> stream_direction,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-streamed-media-implement-request-stream-direction">tp_svc_channel_type_streamed_media_implement_request_stream_direction</link>
                                                        (<link linkend="TpSvcChannelTypeStreamedMediaClass">TpSvcChannelTypeStreamedMediaClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-streamed-media-request-stream-direction-impl">tp_svc_channel_type_streamed_media_request_stream_direction_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-streamed-media-return-from-request-stream-direction">tp_svc_channel_type_streamed_media_return_from_request_stream_direction</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-type-streamed-media-request-streams-impl">*tp_svc_channel_type_streamed_media_request_streams_impl</link>)
                                                        (<link linkend="TpSvcChannelTypeStreamedMedia">TpSvcChannelTypeStreamedMedia</link> *self,
                                                         <link linkend="guint">guint</link> contact_handle,
                                                         const <link linkend="GArray">GArray</link> *types,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-streamed-media-implement-request-streams">tp_svc_channel_type_streamed_media_implement_request_streams</link>
                                                        (<link linkend="TpSvcChannelTypeStreamedMediaClass">TpSvcChannelTypeStreamedMediaClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-streamed-media-request-streams-impl">tp_svc_channel_type_streamed_media_request_streams_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-streamed-media-return-from-request-streams">tp_svc_channel_type_streamed_media_return_from_request_streams</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *ret);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-streamed-media-emit-stream-added">tp_svc_channel_type_streamed_media_emit_stream_added</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> stream_id,
                                                         const <link linkend="guint">guint</link> contact_handle,
                                                         const <link linkend="guint">guint</link> stream_type);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-streamed-media-emit-stream-direction-changed">tp_svc_channel_type_streamed_media_emit_stream_direction_changed</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> stream_id,
                                                         const <link linkend="guint">guint</link> stream_direction,
                                                         const <link linkend="guint">guint</link> pending_flags);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-streamed-media-emit-stream-error">tp_svc_channel_type_streamed_media_emit_stream_error</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> stream_id,
                                                         const <link linkend="guint">guint</link> errno,
                                                         const <link linkend="gchar">gchar</link> *message);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-streamed-media-emit-stream-removed">tp_svc_channel_type_streamed_media_emit_stream_removed</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> stream_id);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-streamed-media-emit-stream-state-changed">tp_svc_channel_type_streamed_media_emit_stream_state_changed</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> stream_id,
                                                         const <link linkend="guint">guint</link> stream_state);


                    <link linkend="TpSvcChannelInterfaceDTMF">TpSvcChannelInterfaceDTMF</link>;
                    <link linkend="TpSvcChannelInterfaceDTMFClass">TpSvcChannelInterfaceDTMFClass</link>;
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-dtmf-implement-start-tone">tp_svc_channel_interface_dtmf_implement_start_tone</link>
                                                        (<link linkend="TpSvcChannelInterfaceDTMFClass">TpSvcChannelInterfaceDTMFClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-dtmf-start-tone-impl">tp_svc_channel_interface_dtmf_start_tone_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-dtmf-implement-stop-tone">tp_svc_channel_interface_dtmf_implement_stop_tone</link>
                                                        (<link linkend="TpSvcChannelInterfaceDTMFClass">TpSvcChannelInterfaceDTMFClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-dtmf-stop-tone-impl">tp_svc_channel_interface_dtmf_stop_tone_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-dtmf-return-from-start-tone">tp_svc_channel_interface_dtmf_return_from_start_tone</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-dtmf-return-from-stop-tone">tp_svc_channel_interface_dtmf_return_from_stop_tone</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-interface-dtmf-start-tone-impl">*tp_svc_channel_interface_dtmf_start_tone_impl</link>)
                                                        (<link linkend="TpSvcChannelInterfaceDTMF">TpSvcChannelInterfaceDTMF</link> *self,
                                                         <link linkend="guint">guint</link> stream_id,
                                                         <link linkend="guchar">guchar</link> event,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-interface-dtmf-stop-tone-impl">*tp_svc_channel_interface_dtmf_stop_tone_impl</link>)
                                                        (<link linkend="TpSvcChannelInterfaceDTMF">TpSvcChannelInterfaceDTMF</link> *self,
                                                         <link linkend="guint">guint</link> stream_id,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);


                    <link linkend="TpSvcChannelTypeContactList">TpSvcChannelTypeContactList</link>;
                    <link linkend="TpSvcChannelTypeContactListClass">TpSvcChannelTypeContactListClass</link>;


                    <link linkend="TpSvcChannelInterfaceGroup">TpSvcChannelInterfaceGroup</link>;
                    <link linkend="TpSvcChannelInterfaceGroupClass">TpSvcChannelInterfaceGroupClass</link>;
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-interface-group-add-members-impl">*tp_svc_channel_interface_group_add_members_impl</link>)
                                                        (<link linkend="TpSvcChannelInterfaceGroup">TpSvcChannelInterfaceGroup</link> *self,
                                                         const <link linkend="GArray">GArray</link> *contacts,
                                                         const <link linkend="gchar">gchar</link> *message,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-implement-add-members">tp_svc_channel_interface_group_implement_add_members</link>
                                                        (<link linkend="TpSvcChannelInterfaceGroupClass">TpSvcChannelInterfaceGroupClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-group-add-members-impl">tp_svc_channel_interface_group_add_members_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-return-from-add-members">tp_svc_channel_interface_group_return_from_add_members</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-interface-group-get-all-members-impl">*tp_svc_channel_interface_group_get_all_members_impl</link>)
                                                        (<link linkend="TpSvcChannelInterfaceGroup">TpSvcChannelInterfaceGroup</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-implement-get-all-members">tp_svc_channel_interface_group_implement_get_all_members</link>
                                                        (<link linkend="TpSvcChannelInterfaceGroupClass">TpSvcChannelInterfaceGroupClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-group-get-all-members-impl">tp_svc_channel_interface_group_get_all_members_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-return-from-get-all-members">tp_svc_channel_interface_group_return_from_get_all_members</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GArray">GArray</link> *ret,
                                                         const <link linkend="GArray">GArray</link> *ret1,
                                                         const <link linkend="GArray">GArray</link> *ret2);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-interface-group-get-group-flags-impl">*tp_svc_channel_interface_group_get_group_flags_impl</link>)
                                                        (<link linkend="TpSvcChannelInterfaceGroup">TpSvcChannelInterfaceGroup</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-implement-get-group-flags">tp_svc_channel_interface_group_implement_get_group_flags</link>
                                                        (<link linkend="TpSvcChannelInterfaceGroupClass">TpSvcChannelInterfaceGroupClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-group-get-group-flags-impl">tp_svc_channel_interface_group_get_group_flags_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-return-from-get-group-flags">tp_svc_channel_interface_group_return_from_get_group_flags</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         <link linkend="guint">guint</link> ret);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-interface-group-get-handle-owners-impl">*tp_svc_channel_interface_group_get_handle_owners_impl</link>)
                                                        (<link linkend="TpSvcChannelInterfaceGroup">TpSvcChannelInterfaceGroup</link> *self,
                                                         const <link linkend="GArray">GArray</link> *handles,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-implement-get-handle-owners">tp_svc_channel_interface_group_implement_get_handle_owners</link>
                                                        (<link linkend="TpSvcChannelInterfaceGroupClass">TpSvcChannelInterfaceGroupClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-group-get-handle-owners-impl">tp_svc_channel_interface_group_get_handle_owners_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-return-from-get-handle-owners">tp_svc_channel_interface_group_return_from_get_handle_owners</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GArray">GArray</link> *ret);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-interface-group-get-local-pending-members-impl">*tp_svc_channel_interface_group_get_local_pending_members_impl</link>)
                                                        (<link linkend="TpSvcChannelInterfaceGroup">TpSvcChannelInterfaceGroup</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-implement-get-local-pending-members">tp_svc_channel_interface_group_implement_get_local_pending_members</link>
                                                        (<link linkend="TpSvcChannelInterfaceGroupClass">TpSvcChannelInterfaceGroupClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-group-get-local-pending-members-impl">tp_svc_channel_interface_group_get_local_pending_members_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-return-from-get-local-pending-members">tp_svc_channel_interface_group_return_from_get_local_pending_members</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GArray">GArray</link> *ret);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-interface-group-get-local-pending-members-with-info-impl">*tp_svc_channel_interface_group_get_local_pending_members_with_info_impl</link>)
                                                        (<link linkend="TpSvcChannelInterfaceGroup">TpSvcChannelInterfaceGroup</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-implement-get-local-pending-members-with-info">tp_svc_channel_interface_group_implement_get_local_pending_members_with_info</link>
                                                        (<link linkend="TpSvcChannelInterfaceGroupClass">TpSvcChannelInterfaceGroupClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-group-get-local-pending-members-with-info-impl">tp_svc_channel_interface_group_get_local_pending_members_with_info_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-return-from-get-local-pending-members-with-info">tp_svc_channel_interface_group_return_from_get_local_pending_members_with_info</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *ret);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-interface-group-get-members-impl">*tp_svc_channel_interface_group_get_members_impl</link>)
                                                        (<link linkend="TpSvcChannelInterfaceGroup">TpSvcChannelInterfaceGroup</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-implement-get-members">tp_svc_channel_interface_group_implement_get_members</link>
                                                        (<link linkend="TpSvcChannelInterfaceGroupClass">TpSvcChannelInterfaceGroupClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-group-get-members-impl">tp_svc_channel_interface_group_get_members_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-return-from-get-members">tp_svc_channel_interface_group_return_from_get_members</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GArray">GArray</link> *ret);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-interface-group-get-remote-pending-members-impl">*tp_svc_channel_interface_group_get_remote_pending_members_impl</link>)
                                                        (<link linkend="TpSvcChannelInterfaceGroup">TpSvcChannelInterfaceGroup</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-implement-get-remote-pending-members">tp_svc_channel_interface_group_implement_get_remote_pending_members</link>
                                                        (<link linkend="TpSvcChannelInterfaceGroupClass">TpSvcChannelInterfaceGroupClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-group-get-remote-pending-members-impl">tp_svc_channel_interface_group_get_remote_pending_members_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-return-from-get-remote-pending-members">tp_svc_channel_interface_group_return_from_get_remote_pending_members</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GArray">GArray</link> *ret);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-interface-group-get-self-handle-impl">*tp_svc_channel_interface_group_get_self_handle_impl</link>)
                                                        (<link linkend="TpSvcChannelInterfaceGroup">TpSvcChannelInterfaceGroup</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-implement-get-self-handle">tp_svc_channel_interface_group_implement_get_self_handle</link>
                                                        (<link linkend="TpSvcChannelInterfaceGroupClass">TpSvcChannelInterfaceGroupClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-group-get-self-handle-impl">tp_svc_channel_interface_group_get_self_handle_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-return-from-get-self-handle">tp_svc_channel_interface_group_return_from_get_self_handle</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         <link linkend="guint">guint</link> ret);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-interface-group-remove-members-impl">*tp_svc_channel_interface_group_remove_members_impl</link>)
                                                        (<link linkend="TpSvcChannelInterfaceGroup">TpSvcChannelInterfaceGroup</link> *self,
                                                         const <link linkend="GArray">GArray</link> *contacts,
                                                         const <link linkend="gchar">gchar</link> *message,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-implement-remove-members">tp_svc_channel_interface_group_implement_remove_members</link>
                                                        (<link linkend="TpSvcChannelInterfaceGroupClass">TpSvcChannelInterfaceGroupClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-group-remove-members-impl">tp_svc_channel_interface_group_remove_members_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-return-from-remove-members">tp_svc_channel_interface_group_return_from_remove_members</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-emit-group-flags-changed">tp_svc_channel_interface_group_emit_group_flags_changed</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> added,
                                                         const <link linkend="guint">guint</link> removed);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-emit-members-changed">tp_svc_channel_interface_group_emit_members_changed</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="gchar">gchar</link> *message,
                                                         const <link linkend="GArray">GArray</link> *added,
                                                         const <link linkend="GArray">GArray</link> *removed,
                                                         const <link linkend="GArray">GArray</link> *local_pending,
                                                         const <link linkend="GArray">GArray</link> *remote_pending,
                                                         const <link linkend="guint">guint</link> actor,
                                                         const <link linkend="guint">guint</link> reason);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-implement-remove-members-with-reason">tp_svc_channel_interface_group_implement_remove_members_with_reason</link>
                                                        (<link linkend="TpSvcChannelInterfaceGroupClass">TpSvcChannelInterfaceGroupClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-group-remove-members-with-reason-impl">tp_svc_channel_interface_group_remove_members_with_reason_impl</link> impl);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-interface-group-remove-members-with-reason-impl">*tp_svc_channel_interface_group_remove_members_with_reason_impl</link>)
                                                        (<link linkend="TpSvcChannelInterfaceGroup">TpSvcChannelInterfaceGroup</link> *self,
                                                         const <link linkend="GArray">GArray</link> *contacts,
                                                         const <link linkend="gchar">gchar</link> *message,
                                                         <link linkend="guint">guint</link> reason,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-group-return-from-remove-members-with-reason">tp_svc_channel_interface_group_return_from_remove_members_with_reason</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);


                    <link linkend="TpSvcChannelInterfaceMediaSignalling">TpSvcChannelInterfaceMediaSignalling</link>;
                    <link linkend="TpSvcChannelInterfaceMediaSignallingClass">TpSvcChannelInterfaceMediaSignallingClass</link>;
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-interface-media-signalling-get-session-handlers-impl">*tp_svc_channel_interface_media_signalling_get_session_handlers_impl</link>)
                                                        (<link linkend="TpSvcChannelInterfaceMediaSignalling">TpSvcChannelInterfaceMediaSignalling</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-media-signalling-implement-get-session-handlers">tp_svc_channel_interface_media_signalling_implement_get_session_handlers</link>
                                                        (<link linkend="TpSvcChannelInterfaceMediaSignallingClass">TpSvcChannelInterfaceMediaSignallingClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-media-signalling-get-session-handlers-impl">tp_svc_channel_interface_media_signalling_get_session_handlers_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-media-signalling-return-from-get-session-handlers">tp_svc_channel_interface_media_signalling_return_from_get_session_handlers</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *ret);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-media-signalling-emit-new-session-handler">tp_svc_channel_interface_media_signalling_emit_new_session_handler</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="gchar">gchar</link> *session_handler,
                                                         const <link linkend="gchar">gchar</link> *type);


                    <link linkend="TpSvcChannelInterfaceChatState">TpSvcChannelInterfaceChatState</link>;
                    <link linkend="TpSvcChannelInterfaceChatStateClass">TpSvcChannelInterfaceChatStateClass</link>;
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-interface-chat-state-set-chat-state-impl">*tp_svc_channel_interface_chat_state_set_chat_state_impl</link>)
                                                        (<link linkend="TpSvcChannelInterfaceChatState">TpSvcChannelInterfaceChatState</link> *self,
                                                         <link linkend="guint">guint</link> state,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-chat-state-implement-set-chat-state">tp_svc_channel_interface_chat_state_implement_set_chat_state</link>
                                                        (<link linkend="TpSvcChannelInterfaceChatStateClass">TpSvcChannelInterfaceChatStateClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-chat-state-set-chat-state-impl">tp_svc_channel_interface_chat_state_set_chat_state_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-chat-state-return-from-set-chat-state">tp_svc_channel_interface_chat_state_return_from_set_chat_state</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-chat-state-emit-chat-state-changed">tp_svc_channel_interface_chat_state_emit_chat_state_changed</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> contact,
                                                         const <link linkend="guint">guint</link> state);
</synopsis>
</refsynopsisdiv>









<refsect1 id="telepathy-glib-svc-channel.description" role="desc">
<title role="desc.title">Description</title>
<para>
These interfaces (auto-generated from the Telepathy spec) make it easier
to export objects implementing the Telepathy Channel and its types and
optional interfaces, with the correct method and signal signatures,
and emit signals from those objects in a type-safe way.</para>
<para>

</para>
</refsect1>

<refsect1 id="telepathy-glib-svc-channel.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="TpSvcChannel" role="struct">
<title>TpSvcChannel</title>
<indexterm zone="TpSvcChannel"><primary>TpSvcChannel</primary></indexterm><programlisting>typedef struct _TpSvcChannel TpSvcChannel;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>

</para></refsect2>
<refsect2 id="TpSvcChannelClass" role="struct">
<title>TpSvcChannelClass</title>
<indexterm zone="TpSvcChannelClass"><primary>TpSvcChannelClass</primary></indexterm><programlisting>typedef struct _TpSvcChannelClass TpSvcChannelClass;</programlisting>
<para>
The class of TpSvcChannel.</para>
<para>

</para></refsect2>
<refsect2 id="tp-svc-channel-close-impl" role="function">
<title>tp_svc_channel_close_impl ()</title>
<indexterm zone="tp-svc-channel-close-impl"><primary>tp_svc_channel_close_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_close_impl)        (<link linkend="TpSvcChannel">TpSvcChannel</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method Close
on interface org.freedesktop.Telepathy.Channel</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-implement-close" role="function">
<title>tp_svc_channel_implement_close ()</title>
<indexterm zone="tp-svc-channel-implement-close"><primary>tp_svc_channel_implement_close</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_implement_close      (<link linkend="TpSvcChannelClass">TpSvcChannelClass</link> *klass,
                                                         <link linkend="tp-svc-channel-close-impl">tp_svc_channel_close_impl</link> impl);</programlisting>
<para>
Register an implementation for the Close method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the Close method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-return-from-close" role="function">
<title>tp_svc_channel_return_from_close ()</title>
<indexterm zone="tp-svc-channel-return-from-close"><primary>tp_svc_channel_return_from_close</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_return_from_close    (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-get-channel-type-impl" role="function">
<title>tp_svc_channel_get_channel_type_impl ()</title>
<indexterm zone="tp-svc-channel-get-channel-type-impl"><primary>tp_svc_channel_get_channel_type_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_get_channel_type_impl)
                                                        (<link linkend="TpSvcChannel">TpSvcChannel</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method GetChannelType
on interface org.freedesktop.Telepathy.Channel</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-implement-get-channel-type" role="function">
<title>tp_svc_channel_implement_get_channel_type ()</title>
<indexterm zone="tp-svc-channel-implement-get-channel-type"><primary>tp_svc_channel_implement_get_channel_type</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_implement_get_channel_type
                                                        (<link linkend="TpSvcChannelClass">TpSvcChannelClass</link> *klass,
                                                         <link linkend="tp-svc-channel-get-channel-type-impl">tp_svc_channel_get_channel_type_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetChannelType method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetChannelType method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-return-from-get-channel-type" role="function">
<title>tp_svc_channel_return_from_get_channel_type ()</title>
<indexterm zone="tp-svc-channel-return-from-get-channel-type"><primary>tp_svc_channel_return_from_get_channel_type</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_return_from_get_channel_type
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="gchar">gchar</link> *ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-get-handle-impl" role="function">
<title>tp_svc_channel_get_handle_impl ()</title>
<indexterm zone="tp-svc-channel-get-handle-impl"><primary>tp_svc_channel_get_handle_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_get_handle_impl)   (<link linkend="TpSvcChannel">TpSvcChannel</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method GetHandle
on interface org.freedesktop.Telepathy.Channel</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-implement-get-handle" role="function">
<title>tp_svc_channel_implement_get_handle ()</title>
<indexterm zone="tp-svc-channel-implement-get-handle"><primary>tp_svc_channel_implement_get_handle</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_implement_get_handle (<link linkend="TpSvcChannelClass">TpSvcChannelClass</link> *klass,
                                                         <link linkend="tp-svc-channel-get-handle-impl">tp_svc_channel_get_handle_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetHandle method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetHandle method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-return-from-get-handle" role="function">
<title>tp_svc_channel_return_from_get_handle ()</title>
<indexterm zone="tp-svc-channel-return-from-get-handle"><primary>tp_svc_channel_return_from_get_handle</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_return_from_get_handle
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         <link linkend="guint">guint</link> ret,
                                                         <link linkend="guint">guint</link> ret1);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret1</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-get-interfaces-impl" role="function">
<title>tp_svc_channel_get_interfaces_impl ()</title>
<indexterm zone="tp-svc-channel-get-interfaces-impl"><primary>tp_svc_channel_get_interfaces_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_get_interfaces_impl)
                                                        (<link linkend="TpSvcChannel">TpSvcChannel</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method GetInterfaces
on interface org.freedesktop.Telepathy.Channel</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-implement-get-interfaces" role="function">
<title>tp_svc_channel_implement_get_interfaces ()</title>
<indexterm zone="tp-svc-channel-implement-get-interfaces"><primary>tp_svc_channel_implement_get_interfaces</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_implement_get_interfaces
                                                        (<link linkend="TpSvcChannelClass">TpSvcChannelClass</link> *klass,
                                                         <link linkend="tp-svc-channel-get-interfaces-impl">tp_svc_channel_get_interfaces_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetInterfaces method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetInterfaces method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-return-from-get-interfaces" role="function">
<title>tp_svc_channel_return_from_get_interfaces ()</title>
<indexterm zone="tp-svc-channel-return-from-get-interfaces"><primary>tp_svc_channel_return_from_get_interfaces</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_return_from_get_interfaces
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="gchar">gchar</link> **ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-emit-closed" role="function">
<title>tp_svc_channel_emit_closed ()</title>
<indexterm zone="tp-svc-channel-emit-closed"><primary>tp_svc_channel_emit_closed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_emit_closed          (<link linkend="gpointer">gpointer</link> instance);</programlisting>
<para>
Emit the Closed D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="TpSvcChannelTypeText" role="struct">
<title>TpSvcChannelTypeText</title>
<indexterm zone="TpSvcChannelTypeText"><primary>TpSvcChannelTypeText</primary></indexterm><programlisting>typedef struct _TpSvcChannelTypeText TpSvcChannelTypeText;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>

</para></refsect2>
<refsect2 id="TpSvcChannelTypeTextClass" role="struct">
<title>TpSvcChannelTypeTextClass</title>
<indexterm zone="TpSvcChannelTypeTextClass"><primary>TpSvcChannelTypeTextClass</primary></indexterm><programlisting>typedef struct _TpSvcChannelTypeTextClass TpSvcChannelTypeTextClass;</programlisting>
<para>
The class of TpSvcChannelTypeText.</para>
<para>

</para></refsect2>
<refsect2 id="tp-svc-channel-type-text-acknowledge-pending-messages-impl" role="function">
<title>tp_svc_channel_type_text_acknowledge_pending_messages_impl ()</title>
<indexterm zone="tp-svc-channel-type-text-acknowledge-pending-messages-impl"><primary>tp_svc_channel_type_text_acknowledge_pending_messages_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_type_text_acknowledge_pending_messages_impl)
                                                        (<link linkend="TpSvcChannelTypeText">TpSvcChannelTypeText</link> *self,
                                                         const <link linkend="GArray">GArray</link> *ids,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method AcknowledgePendingMessages
on interface org.freedesktop.Telepathy.Channel.Type.Text</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ids</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-text-implement-acknowledge-pending-messages" role="function">
<title>tp_svc_channel_type_text_implement_acknowledge_pending_messages ()</title>
<indexterm zone="tp-svc-channel-type-text-implement-acknowledge-pending-messages"><primary>tp_svc_channel_type_text_implement_acknowledge_pending_messages</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_text_implement_acknowledge_pending_messages
                                                        (<link linkend="TpSvcChannelTypeTextClass">TpSvcChannelTypeTextClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-text-acknowledge-pending-messages-impl">tp_svc_channel_type_text_acknowledge_pending_messages_impl</link> impl);</programlisting>
<para>
Register an implementation for the AcknowledgePendingMessages method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the AcknowledgePendingMessages method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-text-return-from-acknowledge-pending-messages" role="function">
<title>tp_svc_channel_type_text_return_from_acknowledge_pending_messages ()</title>
<indexterm zone="tp-svc-channel-type-text-return-from-acknowledge-pending-messages"><primary>tp_svc_channel_type_text_return_from_acknowledge_pending_messages</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_text_return_from_acknowledge_pending_messages
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-text-get-message-types-impl" role="function">
<title>tp_svc_channel_type_text_get_message_types_impl ()</title>
<indexterm zone="tp-svc-channel-type-text-get-message-types-impl"><primary>tp_svc_channel_type_text_get_message_types_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_type_text_get_message_types_impl)
                                                        (<link linkend="TpSvcChannelTypeText">TpSvcChannelTypeText</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method GetMessageTypes
on interface org.freedesktop.Telepathy.Channel.Type.Text</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-text-implement-get-message-types" role="function">
<title>tp_svc_channel_type_text_implement_get_message_types ()</title>
<indexterm zone="tp-svc-channel-type-text-implement-get-message-types"><primary>tp_svc_channel_type_text_implement_get_message_types</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_text_implement_get_message_types
                                                        (<link linkend="TpSvcChannelTypeTextClass">TpSvcChannelTypeTextClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-text-get-message-types-impl">tp_svc_channel_type_text_get_message_types_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetMessageTypes method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetMessageTypes method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-text-return-from-get-message-types" role="function">
<title>tp_svc_channel_type_text_return_from_get_message_types ()</title>
<indexterm zone="tp-svc-channel-type-text-return-from-get-message-types"><primary>tp_svc_channel_type_text_return_from_get_message_types</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_text_return_from_get_message_types
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GArray">GArray</link> *ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-text-list-pending-messages-impl" role="function">
<title>tp_svc_channel_type_text_list_pending_messages_impl ()</title>
<indexterm zone="tp-svc-channel-type-text-list-pending-messages-impl"><primary>tp_svc_channel_type_text_list_pending_messages_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_type_text_list_pending_messages_impl)
                                                        (<link linkend="TpSvcChannelTypeText">TpSvcChannelTypeText</link> *self,
                                                         <link linkend="gboolean">gboolean</link> clear,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method ListPendingMessages
on interface org.freedesktop.Telepathy.Channel.Type.Text</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>clear</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-text-implement-list-pending-messages" role="function">
<title>tp_svc_channel_type_text_implement_list_pending_messages ()</title>
<indexterm zone="tp-svc-channel-type-text-implement-list-pending-messages"><primary>tp_svc_channel_type_text_implement_list_pending_messages</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_text_implement_list_pending_messages
                                                        (<link linkend="TpSvcChannelTypeTextClass">TpSvcChannelTypeTextClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-text-list-pending-messages-impl">tp_svc_channel_type_text_list_pending_messages_impl</link> impl);</programlisting>
<para>
Register an implementation for the ListPendingMessages method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the ListPendingMessages method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-text-return-from-list-pending-messages" role="function">
<title>tp_svc_channel_type_text_return_from_list_pending_messages ()</title>
<indexterm zone="tp-svc-channel-type-text-return-from-list-pending-messages"><primary>tp_svc_channel_type_text_return_from_list_pending_messages</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_text_return_from_list_pending_messages
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-text-send-impl" role="function">
<title>tp_svc_channel_type_text_send_impl ()</title>
<indexterm zone="tp-svc-channel-type-text-send-impl"><primary>tp_svc_channel_type_text_send_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_type_text_send_impl)
                                                        (<link linkend="TpSvcChannelTypeText">TpSvcChannelTypeText</link> *self,
                                                         <link linkend="guint">guint</link> type,
                                                         const <link linkend="gchar">gchar</link> *text,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method Send
on interface org.freedesktop.Telepathy.Channel.Type.Text</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>text</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-text-implement-send" role="function">
<title>tp_svc_channel_type_text_implement_send ()</title>
<indexterm zone="tp-svc-channel-type-text-implement-send"><primary>tp_svc_channel_type_text_implement_send</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_text_implement_send
                                                        (<link linkend="TpSvcChannelTypeTextClass">TpSvcChannelTypeTextClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-text-send-impl">tp_svc_channel_type_text_send_impl</link> impl);</programlisting>
<para>
Register an implementation for the Send method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the Send method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-text-return-from-send" role="function">
<title>tp_svc_channel_type_text_return_from_send ()</title>
<indexterm zone="tp-svc-channel-type-text-return-from-send"><primary>tp_svc_channel_type_text_return_from_send</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_text_return_from_send
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-text-emit-lost-message" role="function">
<title>tp_svc_channel_type_text_emit_lost_message ()</title>
<indexterm zone="tp-svc-channel-type-text-emit-lost-message"><primary>tp_svc_channel_type_text_emit_lost_message</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_text_emit_lost_message
                                                        (<link linkend="gpointer">gpointer</link> instance);</programlisting>
<para>
Emit the LostMessage D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-text-emit-received" role="function">
<title>tp_svc_channel_type_text_emit_received ()</title>
<indexterm zone="tp-svc-channel-type-text-emit-received"><primary>tp_svc_channel_type_text_emit_received</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_text_emit_received
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> id,
                                                         const <link linkend="guint">guint</link> timestamp,
                                                         const <link linkend="guint">guint</link> sender,
                                                         const <link linkend="guint">guint</link> type,
                                                         const <link linkend="guint">guint</link> flags,
                                                         const <link linkend="gchar">gchar</link> *text);</programlisting>
<para>
Emit the Received D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>id</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>timestamp</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sender</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>flags</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>text</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-text-emit-send-error" role="function">
<title>tp_svc_channel_type_text_emit_send_error ()</title>
<indexterm zone="tp-svc-channel-type-text-emit-send-error"><primary>tp_svc_channel_type_text_emit_send_error</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_text_emit_send_error
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> error,
                                                         const <link linkend="guint">guint</link> timestamp,
                                                         const <link linkend="guint">guint</link> type,
                                                         const <link linkend="gchar">gchar</link> *text);</programlisting>
<para>
Emit the SendError D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>timestamp</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>text</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-text-emit-sent" role="function">
<title>tp_svc_channel_type_text_emit_sent ()</title>
<indexterm zone="tp-svc-channel-type-text-emit-sent"><primary>tp_svc_channel_type_text_emit_sent</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_text_emit_sent  (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> timestamp,
                                                         const <link linkend="guint">guint</link> type,
                                                         const <link linkend="gchar">gchar</link> *text);</programlisting>
<para>
Emit the Sent D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>timestamp</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>text</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="TpSvcChannelTypeTubes" role="struct">
<title>TpSvcChannelTypeTubes</title>
<indexterm zone="TpSvcChannelTypeTubes"><primary>TpSvcChannelTypeTubes</primary></indexterm><programlisting>typedef struct _TpSvcChannelTypeTubes TpSvcChannelTypeTubes;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>

</para></refsect2>
<refsect2 id="TpSvcChannelTypeTubesClass" role="struct">
<title>TpSvcChannelTypeTubesClass</title>
<indexterm zone="TpSvcChannelTypeTubesClass"><primary>TpSvcChannelTypeTubesClass</primary></indexterm><programlisting>typedef struct _TpSvcChannelTypeTubesClass TpSvcChannelTypeTubesClass;</programlisting>
<para>
The class of TpSvcChannelTypeTubes.</para>
<para>

</para></refsect2>
<refsect2 id="tp-svc-channel-type-tubes-accept-d-bus-tube-impl" role="function">
<title>tp_svc_channel_type_tubes_accept_d_bus_tube_impl ()</title>
<indexterm zone="tp-svc-channel-type-tubes-accept-d-bus-tube-impl"><primary>tp_svc_channel_type_tubes_accept_d_bus_tube_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_type_tubes_accept_d_bus_tube_impl)
                                                        (<link linkend="TpSvcChannelTypeTubes">TpSvcChannelTypeTubes</link> *self,
                                                         <link linkend="guint">guint</link> id,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method AcceptDBusTube
on interface org.freedesktop.Telepathy.Channel.Type.Tubes</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>id</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-tubes-implement-accept-d-bus-tube" role="function">
<title>tp_svc_channel_type_tubes_implement_accept_d_bus_tube ()</title>
<indexterm zone="tp-svc-channel-type-tubes-implement-accept-d-bus-tube"><primary>tp_svc_channel_type_tubes_implement_accept_d_bus_tube</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_tubes_implement_accept_d_bus_tube
                                                        (<link linkend="TpSvcChannelTypeTubesClass">TpSvcChannelTypeTubesClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-tubes-accept-d-bus-tube-impl">tp_svc_channel_type_tubes_accept_d_bus_tube_impl</link> impl);</programlisting>
<para>
Register an implementation for the AcceptDBusTube method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the AcceptDBusTube method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-tubes-return-from-accept-d-bus-tube" role="function">
<title>tp_svc_channel_type_tubes_return_from_accept_d_bus_tube ()</title>
<indexterm zone="tp-svc-channel-type-tubes-return-from-accept-d-bus-tube"><primary>tp_svc_channel_type_tubes_return_from_accept_d_bus_tube</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_tubes_return_from_accept_d_bus_tube
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="gchar">gchar</link> *address);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>address</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-tubes-accept-stream-tube-impl" role="function">
<title>tp_svc_channel_type_tubes_accept_stream_tube_impl ()</title>
<indexterm zone="tp-svc-channel-type-tubes-accept-stream-tube-impl"><primary>tp_svc_channel_type_tubes_accept_stream_tube_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_type_tubes_accept_stream_tube_impl)
                                                        (<link linkend="TpSvcChannelTypeTubes">TpSvcChannelTypeTubes</link> *self,
                                                         <link linkend="guint">guint</link> id,
                                                         <link linkend="guint">guint</link> address_type,
                                                         <link linkend="guint">guint</link> access_control,
                                                         const <link linkend="GValue">GValue</link> *access_control_param,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method AcceptStreamTube
on interface org.freedesktop.Telepathy.Channel.Type.Tubes</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>id</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>address_type</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>access_control</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>access_control_param</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-tubes-implement-accept-stream-tube" role="function">
<title>tp_svc_channel_type_tubes_implement_accept_stream_tube ()</title>
<indexterm zone="tp-svc-channel-type-tubes-implement-accept-stream-tube"><primary>tp_svc_channel_type_tubes_implement_accept_stream_tube</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_tubes_implement_accept_stream_tube
                                                        (<link linkend="TpSvcChannelTypeTubesClass">TpSvcChannelTypeTubesClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-tubes-accept-stream-tube-impl">tp_svc_channel_type_tubes_accept_stream_tube_impl</link> impl);</programlisting>
<para>
Register an implementation for the AcceptStreamTube method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the AcceptStreamTube method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-tubes-return-from-accept-stream-tube" role="function">
<title>tp_svc_channel_type_tubes_return_from_accept_stream_tube ()</title>
<indexterm zone="tp-svc-channel-type-tubes-return-from-accept-stream-tube"><primary>tp_svc_channel_type_tubes_return_from_accept_stream_tube</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_tubes_return_from_accept_stream_tube
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GValue">GValue</link> *address);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>address</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-tubes-close-tube-impl" role="function">
<title>tp_svc_channel_type_tubes_close_tube_impl ()</title>
<indexterm zone="tp-svc-channel-type-tubes-close-tube-impl"><primary>tp_svc_channel_type_tubes_close_tube_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_type_tubes_close_tube_impl)
                                                        (<link linkend="TpSvcChannelTypeTubes">TpSvcChannelTypeTubes</link> *self,
                                                         <link linkend="guint">guint</link> id,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method CloseTube
on interface org.freedesktop.Telepathy.Channel.Type.Tubes</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>id</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-tubes-implement-close-tube" role="function">
<title>tp_svc_channel_type_tubes_implement_close_tube ()</title>
<indexterm zone="tp-svc-channel-type-tubes-implement-close-tube"><primary>tp_svc_channel_type_tubes_implement_close_tube</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_tubes_implement_close_tube
                                                        (<link linkend="TpSvcChannelTypeTubesClass">TpSvcChannelTypeTubesClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-tubes-close-tube-impl">tp_svc_channel_type_tubes_close_tube_impl</link> impl);</programlisting>
<para>
Register an implementation for the CloseTube method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the CloseTube method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-tubes-return-from-close-tube" role="function">
<title>tp_svc_channel_type_tubes_return_from_close_tube ()</title>
<indexterm zone="tp-svc-channel-type-tubes-return-from-close-tube"><primary>tp_svc_channel_type_tubes_return_from_close_tube</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_tubes_return_from_close_tube
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-tubes-get-available-stream-tube-types-impl" role="function">
<title>tp_svc_channel_type_tubes_get_available_stream_tube_types_impl ()</title>
<indexterm zone="tp-svc-channel-type-tubes-get-available-stream-tube-types-impl"><primary>tp_svc_channel_type_tubes_get_available_stream_tube_types_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_type_tubes_get_available_stream_tube_types_impl)
                                                        (<link linkend="TpSvcChannelTypeTubes">TpSvcChannelTypeTubes</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method GetAvailableStreamTubeTypes
on interface org.freedesktop.Telepathy.Channel.Type.Tubes</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-tubes-implement-get-available-stream-tube-types" role="function">
<title>tp_svc_channel_type_tubes_implement_get_available_stream_tube_types ()</title>
<indexterm zone="tp-svc-channel-type-tubes-implement-get-available-stream-tube-types"><primary>tp_svc_channel_type_tubes_implement_get_available_stream_tube_types</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_tubes_implement_get_available_stream_tube_types
                                                        (<link linkend="TpSvcChannelTypeTubesClass">TpSvcChannelTypeTubesClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-tubes-get-available-stream-tube-types-impl">tp_svc_channel_type_tubes_get_available_stream_tube_types_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetAvailableStreamTubeTypes method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetAvailableStreamTubeTypes method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-tubes-return-from-get-available-stream-tube-types" role="function">
<title>tp_svc_channel_type_tubes_return_from_get_available_stream_tube_types ()</title>
<indexterm zone="tp-svc-channel-type-tubes-return-from-get-available-stream-tube-types"><primary>tp_svc_channel_type_tubes_return_from_get_available_stream_tube_types</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_tubes_return_from_get_available_stream_tube_types
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         <link linkend="GHashTable">GHashTable</link> *ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-tubes-get-available-tube-types-impl" role="function">
<title>tp_svc_channel_type_tubes_get_available_tube_types_impl ()</title>
<indexterm zone="tp-svc-channel-type-tubes-get-available-tube-types-impl"><primary>tp_svc_channel_type_tubes_get_available_tube_types_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_type_tubes_get_available_tube_types_impl)
                                                        (<link linkend="TpSvcChannelTypeTubes">TpSvcChannelTypeTubes</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method GetAvailableTubeTypes
on interface org.freedesktop.Telepathy.Channel.Type.Tubes</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-tubes-implement-get-available-tube-types" role="function">
<title>tp_svc_channel_type_tubes_implement_get_available_tube_types ()</title>
<indexterm zone="tp-svc-channel-type-tubes-implement-get-available-tube-types"><primary>tp_svc_channel_type_tubes_implement_get_available_tube_types</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_tubes_implement_get_available_tube_types
                                                        (<link linkend="TpSvcChannelTypeTubesClass">TpSvcChannelTypeTubesClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-tubes-get-available-tube-types-impl">tp_svc_channel_type_tubes_get_available_tube_types_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetAvailableTubeTypes method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetAvailableTubeTypes method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-tubes-return-from-get-available-tube-types" role="function">
<title>tp_svc_channel_type_tubes_return_from_get_available_tube_types ()</title>
<indexterm zone="tp-svc-channel-type-tubes-return-from-get-available-tube-types"><primary>tp_svc_channel_type_tubes_return_from_get_available_tube_types</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_tubes_return_from_get_available_tube_types
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GArray">GArray</link> *ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-tubes-get-d-bus-names-impl" role="function">
<title>tp_svc_channel_type_tubes_get_d_bus_names_impl ()</title>
<indexterm zone="tp-svc-channel-type-tubes-get-d-bus-names-impl"><primary>tp_svc_channel_type_tubes_get_d_bus_names_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_type_tubes_get_d_bus_names_impl)
                                                        (<link linkend="TpSvcChannelTypeTubes">TpSvcChannelTypeTubes</link> *self,
                                                         <link linkend="guint">guint</link> id,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method GetDBusNames
on interface org.freedesktop.Telepathy.Channel.Type.Tubes</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>id</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-tubes-implement-get-d-bus-names" role="function">
<title>tp_svc_channel_type_tubes_implement_get_d_bus_names ()</title>
<indexterm zone="tp-svc-channel-type-tubes-implement-get-d-bus-names"><primary>tp_svc_channel_type_tubes_implement_get_d_bus_names</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_tubes_implement_get_d_bus_names
                                                        (<link linkend="TpSvcChannelTypeTubesClass">TpSvcChannelTypeTubesClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-tubes-get-d-bus-names-impl">tp_svc_channel_type_tubes_get_d_bus_names_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetDBusNames method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetDBusNames method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-tubes-return-from-get-d-bus-names" role="function">
<title>tp_svc_channel_type_tubes_return_from_get_d_bus_names ()</title>
<indexterm zone="tp-svc-channel-type-tubes-return-from-get-d-bus-names"><primary>tp_svc_channel_type_tubes_return_from_get_d_bus_names</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_tubes_return_from_get_d_bus_names
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-tubes-get-d-bus-tube-address-impl" role="function">
<title>tp_svc_channel_type_tubes_get_d_bus_tube_address_impl ()</title>
<indexterm zone="tp-svc-channel-type-tubes-get-d-bus-tube-address-impl"><primary>tp_svc_channel_type_tubes_get_d_bus_tube_address_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_type_tubes_get_d_bus_tube_address_impl)
                                                        (<link linkend="TpSvcChannelTypeTubes">TpSvcChannelTypeTubes</link> *self,
                                                         <link linkend="guint">guint</link> id,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method GetDBusTubeAddress
on interface org.freedesktop.Telepathy.Channel.Type.Tubes</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>id</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-tubes-implement-get-d-bus-tube-address" role="function">
<title>tp_svc_channel_type_tubes_implement_get_d_bus_tube_address ()</title>
<indexterm zone="tp-svc-channel-type-tubes-implement-get-d-bus-tube-address"><primary>tp_svc_channel_type_tubes_implement_get_d_bus_tube_address</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_tubes_implement_get_d_bus_tube_address
                                                        (<link linkend="TpSvcChannelTypeTubesClass">TpSvcChannelTypeTubesClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-tubes-get-d-bus-tube-address-impl">tp_svc_channel_type_tubes_get_d_bus_tube_address_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetDBusTubeAddress method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetDBusTubeAddress method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-tubes-return-from-get-d-bus-tube-address" role="function">
<title>tp_svc_channel_type_tubes_return_from_get_d_bus_tube_address ()</title>
<indexterm zone="tp-svc-channel-type-tubes-return-from-get-d-bus-tube-address"><primary>tp_svc_channel_type_tubes_return_from_get_d_bus_tube_address</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_tubes_return_from_get_d_bus_tube_address
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="gchar">gchar</link> *ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-tubes-get-stream-tube-socket-address-impl" role="function">
<title>tp_svc_channel_type_tubes_get_stream_tube_socket_address_impl ()</title>
<indexterm zone="tp-svc-channel-type-tubes-get-stream-tube-socket-address-impl"><primary>tp_svc_channel_type_tubes_get_stream_tube_socket_address_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_type_tubes_get_stream_tube_socket_address_impl)
                                                        (<link linkend="TpSvcChannelTypeTubes">TpSvcChannelTypeTubes</link> *self,
                                                         <link linkend="guint">guint</link> id,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method GetStreamTubeSocketAddress
on interface org.freedesktop.Telepathy.Channel.Type.Tubes</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>id</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-tubes-implement-get-stream-tube-socket-address" role="function">
<title>tp_svc_channel_type_tubes_implement_get_stream_tube_socket_address ()</title>
<indexterm zone="tp-svc-channel-type-tubes-implement-get-stream-tube-socket-address"><primary>tp_svc_channel_type_tubes_implement_get_stream_tube_socket_address</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_tubes_implement_get_stream_tube_socket_address
                                                        (<link linkend="TpSvcChannelTypeTubesClass">TpSvcChannelTypeTubesClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-tubes-get-stream-tube-socket-address-impl">tp_svc_channel_type_tubes_get_stream_tube_socket_address_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetStreamTubeSocketAddress method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetStreamTubeSocketAddress method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-tubes-return-from-get-stream-tube-socket-address" role="function">
<title>tp_svc_channel_type_tubes_return_from_get_stream_tube_socket_address ()</title>
<indexterm zone="tp-svc-channel-type-tubes-return-from-get-stream-tube-socket-address"><primary>tp_svc_channel_type_tubes_return_from_get_stream_tube_socket_address</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_tubes_return_from_get_stream_tube_socket_address
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         <link linkend="guint">guint</link> address_type,
                                                         const <link linkend="GValue">GValue</link> *address);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>address_type</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>address</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-tubes-list-tubes-impl" role="function">
<title>tp_svc_channel_type_tubes_list_tubes_impl ()</title>
<indexterm zone="tp-svc-channel-type-tubes-list-tubes-impl"><primary>tp_svc_channel_type_tubes_list_tubes_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_type_tubes_list_tubes_impl)
                                                        (<link linkend="TpSvcChannelTypeTubes">TpSvcChannelTypeTubes</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method ListTubes
on interface org.freedesktop.Telepathy.Channel.Type.Tubes</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-tubes-implement-list-tubes" role="function">
<title>tp_svc_channel_type_tubes_implement_list_tubes ()</title>
<indexterm zone="tp-svc-channel-type-tubes-implement-list-tubes"><primary>tp_svc_channel_type_tubes_implement_list_tubes</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_tubes_implement_list_tubes
                                                        (<link linkend="TpSvcChannelTypeTubesClass">TpSvcChannelTypeTubesClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-tubes-list-tubes-impl">tp_svc_channel_type_tubes_list_tubes_impl</link> impl);</programlisting>
<para>
Register an implementation for the ListTubes method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the ListTubes method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-tubes-return-from-list-tubes" role="function">
<title>tp_svc_channel_type_tubes_return_from_list_tubes ()</title>
<indexterm zone="tp-svc-channel-type-tubes-return-from-list-tubes"><primary>tp_svc_channel_type_tubes_return_from_list_tubes</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_tubes_return_from_list_tubes
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-tubes-offer-d-bus-tube-impl" role="function">
<title>tp_svc_channel_type_tubes_offer_d_bus_tube_impl ()</title>
<indexterm zone="tp-svc-channel-type-tubes-offer-d-bus-tube-impl"><primary>tp_svc_channel_type_tubes_offer_d_bus_tube_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_type_tubes_offer_d_bus_tube_impl)
                                                        (<link linkend="TpSvcChannelTypeTubes">TpSvcChannelTypeTubes</link> *self,
                                                         const <link linkend="gchar">gchar</link> *service,
                                                         <link linkend="GHashTable">GHashTable</link> *parameters,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method OfferDBusTube
on interface org.freedesktop.Telepathy.Channel.Type.Tubes</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>service</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>parameters</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-tubes-implement-offer-d-bus-tube" role="function">
<title>tp_svc_channel_type_tubes_implement_offer_d_bus_tube ()</title>
<indexterm zone="tp-svc-channel-type-tubes-implement-offer-d-bus-tube"><primary>tp_svc_channel_type_tubes_implement_offer_d_bus_tube</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_tubes_implement_offer_d_bus_tube
                                                        (<link linkend="TpSvcChannelTypeTubesClass">TpSvcChannelTypeTubesClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-tubes-offer-d-bus-tube-impl">tp_svc_channel_type_tubes_offer_d_bus_tube_impl</link> impl);</programlisting>
<para>
Register an implementation for the OfferDBusTube method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the OfferDBusTube method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-tubes-return-from-offer-d-bus-tube" role="function">
<title>tp_svc_channel_type_tubes_return_from_offer_d_bus_tube ()</title>
<indexterm zone="tp-svc-channel-type-tubes-return-from-offer-d-bus-tube"><primary>tp_svc_channel_type_tubes_return_from_offer_d_bus_tube</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_tubes_return_from_offer_d_bus_tube
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         <link linkend="guint">guint</link> ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-tubes-offer-stream-tube-impl" role="function">
<title>tp_svc_channel_type_tubes_offer_stream_tube_impl ()</title>
<indexterm zone="tp-svc-channel-type-tubes-offer-stream-tube-impl"><primary>tp_svc_channel_type_tubes_offer_stream_tube_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_type_tubes_offer_stream_tube_impl)
                                                        (<link linkend="TpSvcChannelTypeTubes">TpSvcChannelTypeTubes</link> *self,
                                                         const <link linkend="gchar">gchar</link> *service,
                                                         <link linkend="GHashTable">GHashTable</link> *parameters,
                                                         <link linkend="guint">guint</link> address_type,
                                                         const <link linkend="GValue">GValue</link> *address,
                                                         <link linkend="guint">guint</link> access_control,
                                                         const <link linkend="GValue">GValue</link> *access_control_param,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method OfferStreamTube
on interface org.freedesktop.Telepathy.Channel.Type.Tubes</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>service</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>parameters</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>address_type</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>address</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>access_control</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>access_control_param</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-tubes-implement-offer-stream-tube" role="function">
<title>tp_svc_channel_type_tubes_implement_offer_stream_tube ()</title>
<indexterm zone="tp-svc-channel-type-tubes-implement-offer-stream-tube"><primary>tp_svc_channel_type_tubes_implement_offer_stream_tube</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_tubes_implement_offer_stream_tube
                                                        (<link linkend="TpSvcChannelTypeTubesClass">TpSvcChannelTypeTubesClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-tubes-offer-stream-tube-impl">tp_svc_channel_type_tubes_offer_stream_tube_impl</link> impl);</programlisting>
<para>
Register an implementation for the OfferStreamTube method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the OfferStreamTube method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-tubes-return-from-offer-stream-tube" role="function">
<title>tp_svc_channel_type_tubes_return_from_offer_stream_tube ()</title>
<indexterm zone="tp-svc-channel-type-tubes-return-from-offer-stream-tube"><primary>tp_svc_channel_type_tubes_return_from_offer_stream_tube</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_tubes_return_from_offer_stream_tube
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         <link linkend="guint">guint</link> ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-tubes-emit-d-bus-names-changed" role="function">
<title>tp_svc_channel_type_tubes_emit_d_bus_names_changed ()</title>
<indexterm zone="tp-svc-channel-type-tubes-emit-d-bus-names-changed"><primary>tp_svc_channel_type_tubes_emit_d_bus_names_changed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_tubes_emit_d_bus_names_changed
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> id,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *added,
                                                         const <link linkend="GArray">GArray</link> *removed);</programlisting>
<para>
Emit the DBusNamesChanged D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>id</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>added</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>removed</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-tubes-emit-new-tube" role="function">
<title>tp_svc_channel_type_tubes_emit_new_tube ()</title>
<indexterm zone="tp-svc-channel-type-tubes-emit-new-tube"><primary>tp_svc_channel_type_tubes_emit_new_tube</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_tubes_emit_new_tube
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> id,
                                                         const <link linkend="guint">guint</link> initiator,
                                                         const <link linkend="guint">guint</link> type,
                                                         const <link linkend="gchar">gchar</link> *service,
                                                         const <link linkend="GHashTable">GHashTable</link> *parameters,
                                                         const <link linkend="guint">guint</link> state);</programlisting>
<para>
Emit the NewTube D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>id</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>initiator</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>service</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>parameters</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-tubes-emit-stream-tube-new-connection" role="function">
<title>tp_svc_channel_type_tubes_emit_stream_tube_new_connection ()</title>
<indexterm zone="tp-svc-channel-type-tubes-emit-stream-tube-new-connection"><primary>tp_svc_channel_type_tubes_emit_stream_tube_new_connection</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_tubes_emit_stream_tube_new_connection
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> id,
                                                         const <link linkend="guint">guint</link> handle);</programlisting>
<para>
Emit the StreamTubeNewConnection D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>id</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-tubes-emit-tube-closed" role="function">
<title>tp_svc_channel_type_tubes_emit_tube_closed ()</title>
<indexterm zone="tp-svc-channel-type-tubes-emit-tube-closed"><primary>tp_svc_channel_type_tubes_emit_tube_closed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_tubes_emit_tube_closed
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> id);</programlisting>
<para>
Emit the TubeClosed D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>id</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-tubes-emit-tube-state-changed" role="function">
<title>tp_svc_channel_type_tubes_emit_tube_state_changed ()</title>
<indexterm zone="tp-svc-channel-type-tubes-emit-tube-state-changed"><primary>tp_svc_channel_type_tubes_emit_tube_state_changed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_tubes_emit_tube_state_changed
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> id,
                                                         const <link linkend="guint">guint</link> state);</programlisting>
<para>
Emit the TubeStateChanged D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>id</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-avatars-get-known-avatar-tokens-impl" role="function">
<title>tp_svc_connection_interface_avatars_get_known_avatar_tokens_impl ()</title>
<indexterm zone="tp-svc-connection-interface-avatars-get-known-avatar-tokens-impl"><primary>tp_svc_connection_interface_avatars_get_known_avatar_tokens_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_interface_avatars_get_known_avatar_tokens_impl)
                                                        (<link linkend="TpSvcConnectionInterfaceAvatars">TpSvcConnectionInterfaceAvatars</link> *self,
                                                         const <link linkend="GArray">GArray</link> *contacts,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method GetKnownAvatarTokens
on interface org.freedesktop.Telepathy.Connection.Interface.Avatars</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>contacts</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-avatars-implement-get-known-avatar-tokens" role="function">
<title>tp_svc_connection_interface_avatars_implement_get_known_avatar_tokens ()</title>
<indexterm zone="tp-svc-connection-interface-avatars-implement-get-known-avatar-tokens"><primary>tp_svc_connection_interface_avatars_implement_get_known_avatar_tokens</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_avatars_implement_get_known_avatar_tokens
                                                        (<link linkend="TpSvcConnectionInterfaceAvatarsClass">TpSvcConnectionInterfaceAvatarsClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-avatars-get-known-avatar-tokens-impl">tp_svc_connection_interface_avatars_get_known_avatar_tokens_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetKnownAvatarTokens method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetKnownAvatarTokens method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-avatars-return-from-get-known-avatar-tokens" role="function">
<title>tp_svc_connection_interface_avatars_return_from_get_known_avatar_tokens ()</title>
<indexterm zone="tp-svc-connection-interface-avatars-return-from-get-known-avatar-tokens"><primary>tp_svc_connection_interface_avatars_return_from_get_known_avatar_tokens</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_avatars_return_from_get_known_avatar_tokens
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         <link linkend="GHashTable">GHashTable</link> *ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="TpSvcChannelInterfacePassword" role="struct">
<title>TpSvcChannelInterfacePassword</title>
<indexterm zone="TpSvcChannelInterfacePassword"><primary>TpSvcChannelInterfacePassword</primary></indexterm><programlisting>typedef struct _TpSvcChannelInterfacePassword TpSvcChannelInterfacePassword;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>

</para></refsect2>
<refsect2 id="TpSvcChannelInterfacePasswordClass" role="struct">
<title>TpSvcChannelInterfacePasswordClass</title>
<indexterm zone="TpSvcChannelInterfacePasswordClass"><primary>TpSvcChannelInterfacePasswordClass</primary></indexterm><programlisting>typedef struct _TpSvcChannelInterfacePasswordClass TpSvcChannelInterfacePasswordClass;</programlisting>
<para>
The class of TpSvcChannelInterfacePassword.</para>
<para>

</para></refsect2>
<refsect2 id="tp-svc-channel-interface-password-get-password-flags-impl" role="function">
<title>tp_svc_channel_interface_password_get_password_flags_impl ()</title>
<indexterm zone="tp-svc-channel-interface-password-get-password-flags-impl"><primary>tp_svc_channel_interface_password_get_password_flags_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_interface_password_get_password_flags_impl)
                                                        (<link linkend="TpSvcChannelInterfacePassword">TpSvcChannelInterfacePassword</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method GetPasswordFlags
on interface org.freedesktop.Telepathy.Channel.Interface.Password</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-password-implement-get-password-flags" role="function">
<title>tp_svc_channel_interface_password_implement_get_password_flags ()</title>
<indexterm zone="tp-svc-channel-interface-password-implement-get-password-flags"><primary>tp_svc_channel_interface_password_implement_get_password_flags</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_password_implement_get_password_flags
                                                        (<link linkend="TpSvcChannelInterfacePasswordClass">TpSvcChannelInterfacePasswordClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-password-get-password-flags-impl">tp_svc_channel_interface_password_get_password_flags_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetPasswordFlags method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetPasswordFlags method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-password-return-from-get-password-flags" role="function">
<title>tp_svc_channel_interface_password_return_from_get_password_flags ()</title>
<indexterm zone="tp-svc-channel-interface-password-return-from-get-password-flags"><primary>tp_svc_channel_interface_password_return_from_get_password_flags</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_password_return_from_get_password_flags
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         <link linkend="guint">guint</link> ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-password-provide-password-impl" role="function">
<title>tp_svc_channel_interface_password_provide_password_impl ()</title>
<indexterm zone="tp-svc-channel-interface-password-provide-password-impl"><primary>tp_svc_channel_interface_password_provide_password_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_interface_password_provide_password_impl)
                                                        (<link linkend="TpSvcChannelInterfacePassword">TpSvcChannelInterfacePassword</link> *self,
                                                         const <link linkend="gchar">gchar</link> *password,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method ProvidePassword
on interface org.freedesktop.Telepathy.Channel.Interface.Password</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>password</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-password-implement-provide-password" role="function">
<title>tp_svc_channel_interface_password_implement_provide_password ()</title>
<indexterm zone="tp-svc-channel-interface-password-implement-provide-password"><primary>tp_svc_channel_interface_password_implement_provide_password</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_password_implement_provide_password
                                                        (<link linkend="TpSvcChannelInterfacePasswordClass">TpSvcChannelInterfacePasswordClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-password-provide-password-impl">tp_svc_channel_interface_password_provide_password_impl</link> impl);</programlisting>
<para>
Register an implementation for the ProvidePassword method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the ProvidePassword method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-password-return-from-provide-password" role="function">
<title>tp_svc_channel_interface_password_return_from_provide_password ()</title>
<indexterm zone="tp-svc-channel-interface-password-return-from-provide-password"><primary>tp_svc_channel_interface_password_return_from_provide_password</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_password_return_from_provide_password
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         <link linkend="gboolean">gboolean</link> ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-password-emit-password-flags-changed" role="function">
<title>tp_svc_channel_interface_password_emit_password_flags_changed ()</title>
<indexterm zone="tp-svc-channel-interface-password-emit-password-flags-changed"><primary>tp_svc_channel_interface_password_emit_password_flags_changed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_password_emit_password_flags_changed
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> added,
                                                         const <link linkend="guint">guint</link> removed);</programlisting>
<para>
Emit the PasswordFlagsChanged D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>added</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>removed</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="TpSvcChannelTypeRoomList" role="struct">
<title>TpSvcChannelTypeRoomList</title>
<indexterm zone="TpSvcChannelTypeRoomList"><primary>TpSvcChannelTypeRoomList</primary></indexterm><programlisting>typedef struct _TpSvcChannelTypeRoomList TpSvcChannelTypeRoomList;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>

</para></refsect2>
<refsect2 id="TpSvcChannelTypeRoomListClass" role="struct">
<title>TpSvcChannelTypeRoomListClass</title>
<indexterm zone="TpSvcChannelTypeRoomListClass"><primary>TpSvcChannelTypeRoomListClass</primary></indexterm><programlisting>typedef struct _TpSvcChannelTypeRoomListClass TpSvcChannelTypeRoomListClass;</programlisting>
<para>
The class of TpSvcChannelTypeRoomList.</para>
<para>

</para></refsect2>
<refsect2 id="tp-svc-channel-type-room-list-get-listing-rooms-impl" role="function">
<title>tp_svc_channel_type_room_list_get_listing_rooms_impl ()</title>
<indexterm zone="tp-svc-channel-type-room-list-get-listing-rooms-impl"><primary>tp_svc_channel_type_room_list_get_listing_rooms_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_type_room_list_get_listing_rooms_impl)
                                                        (<link linkend="TpSvcChannelTypeRoomList">TpSvcChannelTypeRoomList</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method GetListingRooms
on interface org.freedesktop.Telepathy.Channel.Type.RoomList</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-room-list-implement-get-listing-rooms" role="function">
<title>tp_svc_channel_type_room_list_implement_get_listing_rooms ()</title>
<indexterm zone="tp-svc-channel-type-room-list-implement-get-listing-rooms"><primary>tp_svc_channel_type_room_list_implement_get_listing_rooms</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_room_list_implement_get_listing_rooms
                                                        (<link linkend="TpSvcChannelTypeRoomListClass">TpSvcChannelTypeRoomListClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-room-list-get-listing-rooms-impl">tp_svc_channel_type_room_list_get_listing_rooms_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetListingRooms method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetListingRooms method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-room-list-return-from-get-listing-rooms" role="function">
<title>tp_svc_channel_type_room_list_return_from_get_listing_rooms ()</title>
<indexterm zone="tp-svc-channel-type-room-list-return-from-get-listing-rooms"><primary>tp_svc_channel_type_room_list_return_from_get_listing_rooms</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_room_list_return_from_get_listing_rooms
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         <link linkend="gboolean">gboolean</link> ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-room-list-list-rooms-impl" role="function">
<title>tp_svc_channel_type_room_list_list_rooms_impl ()</title>
<indexterm zone="tp-svc-channel-type-room-list-list-rooms-impl"><primary>tp_svc_channel_type_room_list_list_rooms_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_type_room_list_list_rooms_impl)
                                                        (<link linkend="TpSvcChannelTypeRoomList">TpSvcChannelTypeRoomList</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method ListRooms
on interface org.freedesktop.Telepathy.Channel.Type.RoomList</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-room-list-implement-list-rooms" role="function">
<title>tp_svc_channel_type_room_list_implement_list_rooms ()</title>
<indexterm zone="tp-svc-channel-type-room-list-implement-list-rooms"><primary>tp_svc_channel_type_room_list_implement_list_rooms</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_room_list_implement_list_rooms
                                                        (<link linkend="TpSvcChannelTypeRoomListClass">TpSvcChannelTypeRoomListClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-room-list-list-rooms-impl">tp_svc_channel_type_room_list_list_rooms_impl</link> impl);</programlisting>
<para>
Register an implementation for the ListRooms method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the ListRooms method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-room-list-return-from-list-rooms" role="function">
<title>tp_svc_channel_type_room_list_return_from_list_rooms ()</title>
<indexterm zone="tp-svc-channel-type-room-list-return-from-list-rooms"><primary>tp_svc_channel_type_room_list_return_from_list_rooms</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_room_list_return_from_list_rooms
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-room-list-stop-listing-impl" role="function">
<title>tp_svc_channel_type_room_list_stop_listing_impl ()</title>
<indexterm zone="tp-svc-channel-type-room-list-stop-listing-impl"><primary>tp_svc_channel_type_room_list_stop_listing_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_type_room_list_stop_listing_impl)
                                                        (<link linkend="TpSvcChannelTypeRoomList">TpSvcChannelTypeRoomList</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method StopListing
on interface org.freedesktop.Telepathy.Channel.Type.RoomList</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-room-list-implement-stop-listing" role="function">
<title>tp_svc_channel_type_room_list_implement_stop_listing ()</title>
<indexterm zone="tp-svc-channel-type-room-list-implement-stop-listing"><primary>tp_svc_channel_type_room_list_implement_stop_listing</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_room_list_implement_stop_listing
                                                        (<link linkend="TpSvcChannelTypeRoomListClass">TpSvcChannelTypeRoomListClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-room-list-stop-listing-impl">tp_svc_channel_type_room_list_stop_listing_impl</link> impl);</programlisting>
<para>
Register an implementation for the StopListing method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the StopListing method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-room-list-return-from-stop-listing" role="function">
<title>tp_svc_channel_type_room_list_return_from_stop_listing ()</title>
<indexterm zone="tp-svc-channel-type-room-list-return-from-stop-listing"><primary>tp_svc_channel_type_room_list_return_from_stop_listing</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_room_list_return_from_stop_listing
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-room-list-emit-got-rooms" role="function">
<title>tp_svc_channel_type_room_list_emit_got_rooms ()</title>
<indexterm zone="tp-svc-channel-type-room-list-emit-got-rooms"><primary>tp_svc_channel_type_room_list_emit_got_rooms</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_room_list_emit_got_rooms
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *rooms);</programlisting>
<para>
Emit the GotRooms D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>rooms</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-room-list-emit-listing-rooms" role="function">
<title>tp_svc_channel_type_room_list_emit_listing_rooms ()</title>
<indexterm zone="tp-svc-channel-type-room-list-emit-listing-rooms"><primary>tp_svc_channel_type_room_list_emit_listing_rooms</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_room_list_emit_listing_rooms
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="gboolean">gboolean</link> listing);</programlisting>
<para>
Emit the ListingRooms D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>listing</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="TpSvcChannelTypeStreamedMedia" role="struct">
<title>TpSvcChannelTypeStreamedMedia</title>
<indexterm zone="TpSvcChannelTypeStreamedMedia"><primary>TpSvcChannelTypeStreamedMedia</primary></indexterm><programlisting>typedef struct _TpSvcChannelTypeStreamedMedia TpSvcChannelTypeStreamedMedia;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>

</para></refsect2>
<refsect2 id="TpSvcChannelTypeStreamedMediaClass" role="struct">
<title>TpSvcChannelTypeStreamedMediaClass</title>
<indexterm zone="TpSvcChannelTypeStreamedMediaClass"><primary>TpSvcChannelTypeStreamedMediaClass</primary></indexterm><programlisting>typedef struct _TpSvcChannelTypeStreamedMediaClass TpSvcChannelTypeStreamedMediaClass;</programlisting>
<para>
The class of TpSvcChannelTypeStreamedMedia.</para>
<para>

</para></refsect2>
<refsect2 id="tp-svc-channel-type-streamed-media-list-streams-impl" role="function">
<title>tp_svc_channel_type_streamed_media_list_streams_impl ()</title>
<indexterm zone="tp-svc-channel-type-streamed-media-list-streams-impl"><primary>tp_svc_channel_type_streamed_media_list_streams_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_type_streamed_media_list_streams_impl)
                                                        (<link linkend="TpSvcChannelTypeStreamedMedia">TpSvcChannelTypeStreamedMedia</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method ListStreams
on interface org.freedesktop.Telepathy.Channel.Type.StreamedMedia</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-streamed-media-implement-list-streams" role="function">
<title>tp_svc_channel_type_streamed_media_implement_list_streams ()</title>
<indexterm zone="tp-svc-channel-type-streamed-media-implement-list-streams"><primary>tp_svc_channel_type_streamed_media_implement_list_streams</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_streamed_media_implement_list_streams
                                                        (<link linkend="TpSvcChannelTypeStreamedMediaClass">TpSvcChannelTypeStreamedMediaClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-streamed-media-list-streams-impl">tp_svc_channel_type_streamed_media_list_streams_impl</link> impl);</programlisting>
<para>
Register an implementation for the ListStreams method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the ListStreams method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-streamed-media-return-from-list-streams" role="function">
<title>tp_svc_channel_type_streamed_media_return_from_list_streams ()</title>
<indexterm zone="tp-svc-channel-type-streamed-media-return-from-list-streams"><primary>tp_svc_channel_type_streamed_media_return_from_list_streams</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_streamed_media_return_from_list_streams
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-streamed-media-remove-streams-impl" role="function">
<title>tp_svc_channel_type_streamed_media_remove_streams_impl ()</title>
<indexterm zone="tp-svc-channel-type-streamed-media-remove-streams-impl"><primary>tp_svc_channel_type_streamed_media_remove_streams_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_type_streamed_media_remove_streams_impl)
                                                        (<link linkend="TpSvcChannelTypeStreamedMedia">TpSvcChannelTypeStreamedMedia</link> *self,
                                                         const <link linkend="GArray">GArray</link> *streams,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method RemoveStreams
on interface org.freedesktop.Telepathy.Channel.Type.StreamedMedia</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>streams</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-streamed-media-implement-remove-streams" role="function">
<title>tp_svc_channel_type_streamed_media_implement_remove_streams ()</title>
<indexterm zone="tp-svc-channel-type-streamed-media-implement-remove-streams"><primary>tp_svc_channel_type_streamed_media_implement_remove_streams</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_streamed_media_implement_remove_streams
                                                        (<link linkend="TpSvcChannelTypeStreamedMediaClass">TpSvcChannelTypeStreamedMediaClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-streamed-media-remove-streams-impl">tp_svc_channel_type_streamed_media_remove_streams_impl</link> impl);</programlisting>
<para>
Register an implementation for the RemoveStreams method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the RemoveStreams method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-streamed-media-return-from-remove-streams" role="function">
<title>tp_svc_channel_type_streamed_media_return_from_remove_streams ()</title>
<indexterm zone="tp-svc-channel-type-streamed-media-return-from-remove-streams"><primary>tp_svc_channel_type_streamed_media_return_from_remove_streams</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_streamed_media_return_from_remove_streams
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-streamed-media-request-stream-direction-impl" role="function">
<title>tp_svc_channel_type_streamed_media_request_stream_direction_impl ()</title>
<indexterm zone="tp-svc-channel-type-streamed-media-request-stream-direction-impl"><primary>tp_svc_channel_type_streamed_media_request_stream_direction_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_type_streamed_media_request_stream_direction_impl)
                                                        (<link linkend="TpSvcChannelTypeStreamedMedia">TpSvcChannelTypeStreamedMedia</link> *self,
                                                         <link linkend="guint">guint</link> stream_id,
                                                         <link linkend="guint">guint</link> stream_direction,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method RequestStreamDirection
on interface org.freedesktop.Telepathy.Channel.Type.StreamedMedia</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>stream_id</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>stream_direction</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-streamed-media-implement-request-stream-direction" role="function">
<title>tp_svc_channel_type_streamed_media_implement_request_stream_direction ()</title>
<indexterm zone="tp-svc-channel-type-streamed-media-implement-request-stream-direction"><primary>tp_svc_channel_type_streamed_media_implement_request_stream_direction</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_streamed_media_implement_request_stream_direction
                                                        (<link linkend="TpSvcChannelTypeStreamedMediaClass">TpSvcChannelTypeStreamedMediaClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-streamed-media-request-stream-direction-impl">tp_svc_channel_type_streamed_media_request_stream_direction_impl</link> impl);</programlisting>
<para>
Register an implementation for the RequestStreamDirection method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the RequestStreamDirection method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-streamed-media-return-from-request-stream-direction" role="function">
<title>tp_svc_channel_type_streamed_media_return_from_request_stream_direction ()</title>
<indexterm zone="tp-svc-channel-type-streamed-media-return-from-request-stream-direction"><primary>tp_svc_channel_type_streamed_media_return_from_request_stream_direction</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_streamed_media_return_from_request_stream_direction
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-streamed-media-request-streams-impl" role="function">
<title>tp_svc_channel_type_streamed_media_request_streams_impl ()</title>
<indexterm zone="tp-svc-channel-type-streamed-media-request-streams-impl"><primary>tp_svc_channel_type_streamed_media_request_streams_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_type_streamed_media_request_streams_impl)
                                                        (<link linkend="TpSvcChannelTypeStreamedMedia">TpSvcChannelTypeStreamedMedia</link> *self,
                                                         <link linkend="guint">guint</link> contact_handle,
                                                         const <link linkend="GArray">GArray</link> *types,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method RequestStreams
on interface org.freedesktop.Telepathy.Channel.Type.StreamedMedia</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>contact_handle</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>types</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-streamed-media-implement-request-streams" role="function">
<title>tp_svc_channel_type_streamed_media_implement_request_streams ()</title>
<indexterm zone="tp-svc-channel-type-streamed-media-implement-request-streams"><primary>tp_svc_channel_type_streamed_media_implement_request_streams</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_streamed_media_implement_request_streams
                                                        (<link linkend="TpSvcChannelTypeStreamedMediaClass">TpSvcChannelTypeStreamedMediaClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-streamed-media-request-streams-impl">tp_svc_channel_type_streamed_media_request_streams_impl</link> impl);</programlisting>
<para>
Register an implementation for the RequestStreams method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the RequestStreams method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-streamed-media-return-from-request-streams" role="function">
<title>tp_svc_channel_type_streamed_media_return_from_request_streams ()</title>
<indexterm zone="tp-svc-channel-type-streamed-media-return-from-request-streams"><primary>tp_svc_channel_type_streamed_media_return_from_request_streams</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_streamed_media_return_from_request_streams
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-streamed-media-emit-stream-added" role="function">
<title>tp_svc_channel_type_streamed_media_emit_stream_added ()</title>
<indexterm zone="tp-svc-channel-type-streamed-media-emit-stream-added"><primary>tp_svc_channel_type_streamed_media_emit_stream_added</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_streamed_media_emit_stream_added
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> stream_id,
                                                         const <link linkend="guint">guint</link> contact_handle,
                                                         const <link linkend="guint">guint</link> stream_type);</programlisting>
<para>
Emit the StreamAdded D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>stream_id</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>contact_handle</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>stream_type</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-streamed-media-emit-stream-direction-changed" role="function">
<title>tp_svc_channel_type_streamed_media_emit_stream_direction_changed ()</title>
<indexterm zone="tp-svc-channel-type-streamed-media-emit-stream-direction-changed"><primary>tp_svc_channel_type_streamed_media_emit_stream_direction_changed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_streamed_media_emit_stream_direction_changed
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> stream_id,
                                                         const <link linkend="guint">guint</link> stream_direction,
                                                         const <link linkend="guint">guint</link> pending_flags);</programlisting>
<para>
Emit the StreamDirectionChanged D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>stream_id</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>stream_direction</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pending_flags</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-streamed-media-emit-stream-error" role="function">
<title>tp_svc_channel_type_streamed_media_emit_stream_error ()</title>
<indexterm zone="tp-svc-channel-type-streamed-media-emit-stream-error"><primary>tp_svc_channel_type_streamed_media_emit_stream_error</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_streamed_media_emit_stream_error
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> stream_id,
                                                         const <link linkend="guint">guint</link> errno,
                                                         const <link linkend="gchar">gchar</link> *message);</programlisting>
<para>
Emit the StreamError D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>stream_id</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>errno</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>message</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-streamed-media-emit-stream-removed" role="function">
<title>tp_svc_channel_type_streamed_media_emit_stream_removed ()</title>
<indexterm zone="tp-svc-channel-type-streamed-media-emit-stream-removed"><primary>tp_svc_channel_type_streamed_media_emit_stream_removed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_streamed_media_emit_stream_removed
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> stream_id);</programlisting>
<para>
Emit the StreamRemoved D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>stream_id</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-streamed-media-emit-stream-state-changed" role="function">
<title>tp_svc_channel_type_streamed_media_emit_stream_state_changed ()</title>
<indexterm zone="tp-svc-channel-type-streamed-media-emit-stream-state-changed"><primary>tp_svc_channel_type_streamed_media_emit_stream_state_changed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_streamed_media_emit_stream_state_changed
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> stream_id,
                                                         const <link linkend="guint">guint</link> stream_state);</programlisting>
<para>
Emit the StreamStateChanged D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>stream_id</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>stream_state</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="TpSvcChannelInterfaceDTMF" role="struct">
<title>TpSvcChannelInterfaceDTMF</title>
<indexterm zone="TpSvcChannelInterfaceDTMF"><primary>TpSvcChannelInterfaceDTMF</primary></indexterm><programlisting>typedef struct _TpSvcChannelInterfaceDTMF TpSvcChannelInterfaceDTMF;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>

</para></refsect2>
<refsect2 id="TpSvcChannelInterfaceDTMFClass" role="struct">
<title>TpSvcChannelInterfaceDTMFClass</title>
<indexterm zone="TpSvcChannelInterfaceDTMFClass"><primary>TpSvcChannelInterfaceDTMFClass</primary></indexterm><programlisting>typedef struct _TpSvcChannelInterfaceDTMFClass TpSvcChannelInterfaceDTMFClass;</programlisting>
<para>
The class of TpSvcChannelInterfaceDTMF.</para>
<para>

</para></refsect2>
<refsect2 id="tp-svc-channel-interface-dtmf-implement-start-tone" role="function">
<title>tp_svc_channel_interface_dtmf_implement_start_tone ()</title>
<indexterm zone="tp-svc-channel-interface-dtmf-implement-start-tone"><primary>tp_svc_channel_interface_dtmf_implement_start_tone</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_dtmf_implement_start_tone
                                                        (<link linkend="TpSvcChannelInterfaceDTMFClass">TpSvcChannelInterfaceDTMFClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-dtmf-start-tone-impl">tp_svc_channel_interface_dtmf_start_tone_impl</link> impl);</programlisting>
<para>
Register an implementation for the StartTone method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the StartTone method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-dtmf-implement-stop-tone" role="function">
<title>tp_svc_channel_interface_dtmf_implement_stop_tone ()</title>
<indexterm zone="tp-svc-channel-interface-dtmf-implement-stop-tone"><primary>tp_svc_channel_interface_dtmf_implement_stop_tone</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_dtmf_implement_stop_tone
                                                        (<link linkend="TpSvcChannelInterfaceDTMFClass">TpSvcChannelInterfaceDTMFClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-dtmf-stop-tone-impl">tp_svc_channel_interface_dtmf_stop_tone_impl</link> impl);</programlisting>
<para>
Register an implementation for the StopTone method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the StopTone method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-dtmf-return-from-start-tone" role="function">
<title>tp_svc_channel_interface_dtmf_return_from_start_tone ()</title>
<indexterm zone="tp-svc-channel-interface-dtmf-return-from-start-tone"><primary>tp_svc_channel_interface_dtmf_return_from_start_tone</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_dtmf_return_from_start_tone
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-dtmf-return-from-stop-tone" role="function">
<title>tp_svc_channel_interface_dtmf_return_from_stop_tone ()</title>
<indexterm zone="tp-svc-channel-interface-dtmf-return-from-stop-tone"><primary>tp_svc_channel_interface_dtmf_return_from_stop_tone</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_dtmf_return_from_stop_tone
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-dtmf-start-tone-impl" role="function">
<title>tp_svc_channel_interface_dtmf_start_tone_impl ()</title>
<indexterm zone="tp-svc-channel-interface-dtmf-start-tone-impl"><primary>tp_svc_channel_interface_dtmf_start_tone_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_interface_dtmf_start_tone_impl)
                                                        (<link linkend="TpSvcChannelInterfaceDTMF">TpSvcChannelInterfaceDTMF</link> *self,
                                                         <link linkend="guint">guint</link> stream_id,
                                                         <link linkend="guchar">guchar</link> event,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method StartTone
on interface org.freedesktop.Telepathy.Channel.Interface.DTMF</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>stream_id</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>event</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-dtmf-stop-tone-impl" role="function">
<title>tp_svc_channel_interface_dtmf_stop_tone_impl ()</title>
<indexterm zone="tp-svc-channel-interface-dtmf-stop-tone-impl"><primary>tp_svc_channel_interface_dtmf_stop_tone_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_interface_dtmf_stop_tone_impl)
                                                        (<link linkend="TpSvcChannelInterfaceDTMF">TpSvcChannelInterfaceDTMF</link> *self,
                                                         <link linkend="guint">guint</link> stream_id,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method StopTone
on interface org.freedesktop.Telepathy.Channel.Interface.DTMF</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>stream_id</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="TpSvcChannelTypeContactList" role="struct">
<title>TpSvcChannelTypeContactList</title>
<indexterm zone="TpSvcChannelTypeContactList"><primary>TpSvcChannelTypeContactList</primary></indexterm><programlisting>typedef struct _TpSvcChannelTypeContactList TpSvcChannelTypeContactList;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>

</para></refsect2>
<refsect2 id="TpSvcChannelTypeContactListClass" role="struct">
<title>TpSvcChannelTypeContactListClass</title>
<indexterm zone="TpSvcChannelTypeContactListClass"><primary>TpSvcChannelTypeContactListClass</primary></indexterm><programlisting>typedef struct _TpSvcChannelTypeContactListClass TpSvcChannelTypeContactListClass;</programlisting>
<para>
The class of TpSvcChannelTypeContactList.</para>
<para>

</para></refsect2>
<refsect2 id="TpSvcChannelInterfaceGroup" role="struct">
<title>TpSvcChannelInterfaceGroup</title>
<indexterm zone="TpSvcChannelInterfaceGroup"><primary>TpSvcChannelInterfaceGroup</primary></indexterm><programlisting>typedef struct _TpSvcChannelInterfaceGroup TpSvcChannelInterfaceGroup;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>

</para></refsect2>
<refsect2 id="TpSvcChannelInterfaceGroupClass" role="struct">
<title>TpSvcChannelInterfaceGroupClass</title>
<indexterm zone="TpSvcChannelInterfaceGroupClass"><primary>TpSvcChannelInterfaceGroupClass</primary></indexterm><programlisting>typedef struct _TpSvcChannelInterfaceGroupClass TpSvcChannelInterfaceGroupClass;</programlisting>
<para>
The class of TpSvcChannelInterfaceGroup.</para>
<para>

</para></refsect2>
<refsect2 id="tp-svc-channel-interface-group-add-members-impl" role="function">
<title>tp_svc_channel_interface_group_add_members_impl ()</title>
<indexterm zone="tp-svc-channel-interface-group-add-members-impl"><primary>tp_svc_channel_interface_group_add_members_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_interface_group_add_members_impl)
                                                        (<link linkend="TpSvcChannelInterfaceGroup">TpSvcChannelInterfaceGroup</link> *self,
                                                         const <link linkend="GArray">GArray</link> *contacts,
                                                         const <link linkend="gchar">gchar</link> *message,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method AddMembers
on interface org.freedesktop.Telepathy.Channel.Interface.Group</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>contacts</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>message</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-group-implement-add-members" role="function">
<title>tp_svc_channel_interface_group_implement_add_members ()</title>
<indexterm zone="tp-svc-channel-interface-group-implement-add-members"><primary>tp_svc_channel_interface_group_implement_add_members</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_implement_add_members
                                                        (<link linkend="TpSvcChannelInterfaceGroupClass">TpSvcChannelInterfaceGroupClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-group-add-members-impl">tp_svc_channel_interface_group_add_members_impl</link> impl);</programlisting>
<para>
Register an implementation for the AddMembers method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the AddMembers method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-group-return-from-add-members" role="function">
<title>tp_svc_channel_interface_group_return_from_add_members ()</title>
<indexterm zone="tp-svc-channel-interface-group-return-from-add-members"><primary>tp_svc_channel_interface_group_return_from_add_members</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_return_from_add_members
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-group-get-all-members-impl" role="function">
<title>tp_svc_channel_interface_group_get_all_members_impl ()</title>
<indexterm zone="tp-svc-channel-interface-group-get-all-members-impl"><primary>tp_svc_channel_interface_group_get_all_members_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_interface_group_get_all_members_impl)
                                                        (<link linkend="TpSvcChannelInterfaceGroup">TpSvcChannelInterfaceGroup</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method GetAllMembers
on interface org.freedesktop.Telepathy.Channel.Interface.Group</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-group-implement-get-all-members" role="function">
<title>tp_svc_channel_interface_group_implement_get_all_members ()</title>
<indexterm zone="tp-svc-channel-interface-group-implement-get-all-members"><primary>tp_svc_channel_interface_group_implement_get_all_members</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_implement_get_all_members
                                                        (<link linkend="TpSvcChannelInterfaceGroupClass">TpSvcChannelInterfaceGroupClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-group-get-all-members-impl">tp_svc_channel_interface_group_get_all_members_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetAllMembers method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetAllMembers method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-group-return-from-get-all-members" role="function">
<title>tp_svc_channel_interface_group_return_from_get_all_members ()</title>
<indexterm zone="tp-svc-channel-interface-group-return-from-get-all-members"><primary>tp_svc_channel_interface_group_return_from_get_all_members</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_return_from_get_all_members
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GArray">GArray</link> *ret,
                                                         const <link linkend="GArray">GArray</link> *ret1,
                                                         const <link linkend="GArray">GArray</link> *ret2);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret1</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret2</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-group-get-group-flags-impl" role="function">
<title>tp_svc_channel_interface_group_get_group_flags_impl ()</title>
<indexterm zone="tp-svc-channel-interface-group-get-group-flags-impl"><primary>tp_svc_channel_interface_group_get_group_flags_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_interface_group_get_group_flags_impl)
                                                        (<link linkend="TpSvcChannelInterfaceGroup">TpSvcChannelInterfaceGroup</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method GetGroupFlags
on interface org.freedesktop.Telepathy.Channel.Interface.Group</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-group-implement-get-group-flags" role="function">
<title>tp_svc_channel_interface_group_implement_get_group_flags ()</title>
<indexterm zone="tp-svc-channel-interface-group-implement-get-group-flags"><primary>tp_svc_channel_interface_group_implement_get_group_flags</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_implement_get_group_flags
                                                        (<link linkend="TpSvcChannelInterfaceGroupClass">TpSvcChannelInterfaceGroupClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-group-get-group-flags-impl">tp_svc_channel_interface_group_get_group_flags_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetGroupFlags method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetGroupFlags method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-group-return-from-get-group-flags" role="function">
<title>tp_svc_channel_interface_group_return_from_get_group_flags ()</title>
<indexterm zone="tp-svc-channel-interface-group-return-from-get-group-flags"><primary>tp_svc_channel_interface_group_return_from_get_group_flags</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_return_from_get_group_flags
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         <link linkend="guint">guint</link> ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-group-get-handle-owners-impl" role="function">
<title>tp_svc_channel_interface_group_get_handle_owners_impl ()</title>
<indexterm zone="tp-svc-channel-interface-group-get-handle-owners-impl"><primary>tp_svc_channel_interface_group_get_handle_owners_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_interface_group_get_handle_owners_impl)
                                                        (<link linkend="TpSvcChannelInterfaceGroup">TpSvcChannelInterfaceGroup</link> *self,
                                                         const <link linkend="GArray">GArray</link> *handles,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method GetHandleOwners
on interface org.freedesktop.Telepathy.Channel.Interface.Group</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>handles</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-group-implement-get-handle-owners" role="function">
<title>tp_svc_channel_interface_group_implement_get_handle_owners ()</title>
<indexterm zone="tp-svc-channel-interface-group-implement-get-handle-owners"><primary>tp_svc_channel_interface_group_implement_get_handle_owners</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_implement_get_handle_owners
                                                        (<link linkend="TpSvcChannelInterfaceGroupClass">TpSvcChannelInterfaceGroupClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-group-get-handle-owners-impl">tp_svc_channel_interface_group_get_handle_owners_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetHandleOwners method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetHandleOwners method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-group-return-from-get-handle-owners" role="function">
<title>tp_svc_channel_interface_group_return_from_get_handle_owners ()</title>
<indexterm zone="tp-svc-channel-interface-group-return-from-get-handle-owners"><primary>tp_svc_channel_interface_group_return_from_get_handle_owners</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_return_from_get_handle_owners
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GArray">GArray</link> *ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-group-get-local-pending-members-impl" role="function">
<title>tp_svc_channel_interface_group_get_local_pending_members_impl ()</title>
<indexterm zone="tp-svc-channel-interface-group-get-local-pending-members-impl"><primary>tp_svc_channel_interface_group_get_local_pending_members_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_interface_group_get_local_pending_members_impl)
                                                        (<link linkend="TpSvcChannelInterfaceGroup">TpSvcChannelInterfaceGroup</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method GetLocalPendingMembers
on interface org.freedesktop.Telepathy.Channel.Interface.Group</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-group-implement-get-local-pending-members" role="function">
<title>tp_svc_channel_interface_group_implement_get_local_pending_members ()</title>
<indexterm zone="tp-svc-channel-interface-group-implement-get-local-pending-members"><primary>tp_svc_channel_interface_group_implement_get_local_pending_members</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_implement_get_local_pending_members
                                                        (<link linkend="TpSvcChannelInterfaceGroupClass">TpSvcChannelInterfaceGroupClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-group-get-local-pending-members-impl">tp_svc_channel_interface_group_get_local_pending_members_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetLocalPendingMembers method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetLocalPendingMembers method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-group-return-from-get-local-pending-members" role="function">
<title>tp_svc_channel_interface_group_return_from_get_local_pending_members ()</title>
<indexterm zone="tp-svc-channel-interface-group-return-from-get-local-pending-members"><primary>tp_svc_channel_interface_group_return_from_get_local_pending_members</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_return_from_get_local_pending_members
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GArray">GArray</link> *ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-group-get-local-pending-members-with-info-impl" role="function">
<title>tp_svc_channel_interface_group_get_local_pending_members_with_info_impl ()</title>
<indexterm zone="tp-svc-channel-interface-group-get-local-pending-members-with-info-impl"><primary>tp_svc_channel_interface_group_get_local_pending_members_with_info_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_interface_group_get_local_pending_members_with_info_impl)
                                                        (<link linkend="TpSvcChannelInterfaceGroup">TpSvcChannelInterfaceGroup</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method GetLocalPendingMembersWithInfo
on interface org.freedesktop.Telepathy.Channel.Interface.Group</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-group-implement-get-local-pending-members-with-info" role="function">
<title>tp_svc_channel_interface_group_implement_get_local_pending_members_with_info ()</title>
<indexterm zone="tp-svc-channel-interface-group-implement-get-local-pending-members-with-info"><primary>tp_svc_channel_interface_group_implement_get_local_pending_members_with_info</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_implement_get_local_pending_members_with_info
                                                        (<link linkend="TpSvcChannelInterfaceGroupClass">TpSvcChannelInterfaceGroupClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-group-get-local-pending-members-with-info-impl">tp_svc_channel_interface_group_get_local_pending_members_with_info_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetLocalPendingMembersWithInfo method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetLocalPendingMembersWithInfo method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-group-return-from-get-local-pending-members-with-info" role="function">
<title>tp_svc_channel_interface_group_return_from_get_local_pending_members_with_info ()</title>
<indexterm zone="tp-svc-channel-interface-group-return-from-get-local-pending-members-with-info"><primary>tp_svc_channel_interface_group_return_from_get_local_pending_members_with_info</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_return_from_get_local_pending_members_with_info
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-group-get-members-impl" role="function">
<title>tp_svc_channel_interface_group_get_members_impl ()</title>
<indexterm zone="tp-svc-channel-interface-group-get-members-impl"><primary>tp_svc_channel_interface_group_get_members_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_interface_group_get_members_impl)
                                                        (<link linkend="TpSvcChannelInterfaceGroup">TpSvcChannelInterfaceGroup</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method GetMembers
on interface org.freedesktop.Telepathy.Channel.Interface.Group</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-group-implement-get-members" role="function">
<title>tp_svc_channel_interface_group_implement_get_members ()</title>
<indexterm zone="tp-svc-channel-interface-group-implement-get-members"><primary>tp_svc_channel_interface_group_implement_get_members</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_implement_get_members
                                                        (<link linkend="TpSvcChannelInterfaceGroupClass">TpSvcChannelInterfaceGroupClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-group-get-members-impl">tp_svc_channel_interface_group_get_members_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetMembers method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetMembers method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-group-return-from-get-members" role="function">
<title>tp_svc_channel_interface_group_return_from_get_members ()</title>
<indexterm zone="tp-svc-channel-interface-group-return-from-get-members"><primary>tp_svc_channel_interface_group_return_from_get_members</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_return_from_get_members
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GArray">GArray</link> *ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-group-get-remote-pending-members-impl" role="function">
<title>tp_svc_channel_interface_group_get_remote_pending_members_impl ()</title>
<indexterm zone="tp-svc-channel-interface-group-get-remote-pending-members-impl"><primary>tp_svc_channel_interface_group_get_remote_pending_members_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_interface_group_get_remote_pending_members_impl)
                                                        (<link linkend="TpSvcChannelInterfaceGroup">TpSvcChannelInterfaceGroup</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method GetRemotePendingMembers
on interface org.freedesktop.Telepathy.Channel.Interface.Group</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-group-implement-get-remote-pending-members" role="function">
<title>tp_svc_channel_interface_group_implement_get_remote_pending_members ()</title>
<indexterm zone="tp-svc-channel-interface-group-implement-get-remote-pending-members"><primary>tp_svc_channel_interface_group_implement_get_remote_pending_members</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_implement_get_remote_pending_members
                                                        (<link linkend="TpSvcChannelInterfaceGroupClass">TpSvcChannelInterfaceGroupClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-group-get-remote-pending-members-impl">tp_svc_channel_interface_group_get_remote_pending_members_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetRemotePendingMembers method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetRemotePendingMembers method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-group-return-from-get-remote-pending-members" role="function">
<title>tp_svc_channel_interface_group_return_from_get_remote_pending_members ()</title>
<indexterm zone="tp-svc-channel-interface-group-return-from-get-remote-pending-members"><primary>tp_svc_channel_interface_group_return_from_get_remote_pending_members</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_return_from_get_remote_pending_members
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GArray">GArray</link> *ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-group-get-self-handle-impl" role="function">
<title>tp_svc_channel_interface_group_get_self_handle_impl ()</title>
<indexterm zone="tp-svc-channel-interface-group-get-self-handle-impl"><primary>tp_svc_channel_interface_group_get_self_handle_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_interface_group_get_self_handle_impl)
                                                        (<link linkend="TpSvcChannelInterfaceGroup">TpSvcChannelInterfaceGroup</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method GetSelfHandle
on interface org.freedesktop.Telepathy.Channel.Interface.Group</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-group-implement-get-self-handle" role="function">
<title>tp_svc_channel_interface_group_implement_get_self_handle ()</title>
<indexterm zone="tp-svc-channel-interface-group-implement-get-self-handle"><primary>tp_svc_channel_interface_group_implement_get_self_handle</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_implement_get_self_handle
                                                        (<link linkend="TpSvcChannelInterfaceGroupClass">TpSvcChannelInterfaceGroupClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-group-get-self-handle-impl">tp_svc_channel_interface_group_get_self_handle_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetSelfHandle method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetSelfHandle method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-group-return-from-get-self-handle" role="function">
<title>tp_svc_channel_interface_group_return_from_get_self_handle ()</title>
<indexterm zone="tp-svc-channel-interface-group-return-from-get-self-handle"><primary>tp_svc_channel_interface_group_return_from_get_self_handle</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_return_from_get_self_handle
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         <link linkend="guint">guint</link> ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-group-remove-members-impl" role="function">
<title>tp_svc_channel_interface_group_remove_members_impl ()</title>
<indexterm zone="tp-svc-channel-interface-group-remove-members-impl"><primary>tp_svc_channel_interface_group_remove_members_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_interface_group_remove_members_impl)
                                                        (<link linkend="TpSvcChannelInterfaceGroup">TpSvcChannelInterfaceGroup</link> *self,
                                                         const <link linkend="GArray">GArray</link> *contacts,
                                                         const <link linkend="gchar">gchar</link> *message,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method RemoveMembers
on interface org.freedesktop.Telepathy.Channel.Interface.Group</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>contacts</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>message</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-group-implement-remove-members" role="function">
<title>tp_svc_channel_interface_group_implement_remove_members ()</title>
<indexterm zone="tp-svc-channel-interface-group-implement-remove-members"><primary>tp_svc_channel_interface_group_implement_remove_members</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_implement_remove_members
                                                        (<link linkend="TpSvcChannelInterfaceGroupClass">TpSvcChannelInterfaceGroupClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-group-remove-members-impl">tp_svc_channel_interface_group_remove_members_impl</link> impl);</programlisting>
<para>
Register an implementation for the RemoveMembers method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the RemoveMembers method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-group-return-from-remove-members" role="function">
<title>tp_svc_channel_interface_group_return_from_remove_members ()</title>
<indexterm zone="tp-svc-channel-interface-group-return-from-remove-members"><primary>tp_svc_channel_interface_group_return_from_remove_members</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_return_from_remove_members
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-group-emit-group-flags-changed" role="function">
<title>tp_svc_channel_interface_group_emit_group_flags_changed ()</title>
<indexterm zone="tp-svc-channel-interface-group-emit-group-flags-changed"><primary>tp_svc_channel_interface_group_emit_group_flags_changed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_emit_group_flags_changed
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> added,
                                                         const <link linkend="guint">guint</link> removed);</programlisting>
<para>
Emit the GroupFlagsChanged D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>added</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>removed</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-group-emit-members-changed" role="function">
<title>tp_svc_channel_interface_group_emit_members_changed ()</title>
<indexterm zone="tp-svc-channel-interface-group-emit-members-changed"><primary>tp_svc_channel_interface_group_emit_members_changed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_emit_members_changed
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="gchar">gchar</link> *message,
                                                         const <link linkend="GArray">GArray</link> *added,
                                                         const <link linkend="GArray">GArray</link> *removed,
                                                         const <link linkend="GArray">GArray</link> *local_pending,
                                                         const <link linkend="GArray">GArray</link> *remote_pending,
                                                         const <link linkend="guint">guint</link> actor,
                                                         const <link linkend="guint">guint</link> reason);</programlisting>
<para>
Emit the MembersChanged D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>message</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>added</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>removed</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>local_pending</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>remote_pending</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>actor</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>reason</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-group-implement-remove-members-with-reason" role="function">
<title>tp_svc_channel_interface_group_implement_remove_members_with_reason ()</title>
<indexterm zone="tp-svc-channel-interface-group-implement-remove-members-with-reason"><primary>tp_svc_channel_interface_group_implement_remove_members_with_reason</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_implement_remove_members_with_reason
                                                        (<link linkend="TpSvcChannelInterfaceGroupClass">TpSvcChannelInterfaceGroupClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-group-remove-members-with-reason-impl">tp_svc_channel_interface_group_remove_members_with_reason_impl</link> impl);</programlisting>
<para>
Register an implementation for the RemoveMembersWithReason method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the RemoveMembersWithReason method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-group-remove-members-with-reason-impl" role="function">
<title>tp_svc_channel_interface_group_remove_members_with_reason_impl ()</title>
<indexterm zone="tp-svc-channel-interface-group-remove-members-with-reason-impl"><primary>tp_svc_channel_interface_group_remove_members_with_reason_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_interface_group_remove_members_with_reason_impl)
                                                        (<link linkend="TpSvcChannelInterfaceGroup">TpSvcChannelInterfaceGroup</link> *self,
                                                         const <link linkend="GArray">GArray</link> *contacts,
                                                         const <link linkend="gchar">gchar</link> *message,
                                                         <link linkend="guint">guint</link> reason,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method RemoveMembersWithReason
on interface org.freedesktop.Telepathy.Channel.Interface.Group</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>contacts</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>message</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>reason</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-group-return-from-remove-members-with-reason" role="function">
<title>tp_svc_channel_interface_group_return_from_remove_members_with_reason ()</title>
<indexterm zone="tp-svc-channel-interface-group-return-from-remove-members-with-reason"><primary>tp_svc_channel_interface_group_return_from_remove_members_with_reason</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_group_return_from_remove_members_with_reason
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="TpSvcChannelInterfaceMediaSignalling" role="struct">
<title>TpSvcChannelInterfaceMediaSignalling</title>
<indexterm zone="TpSvcChannelInterfaceMediaSignalling"><primary>TpSvcChannelInterfaceMediaSignalling</primary></indexterm><programlisting>typedef struct _TpSvcChannelInterfaceMediaSignalling TpSvcChannelInterfaceMediaSignalling;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>

</para></refsect2>
<refsect2 id="TpSvcChannelInterfaceMediaSignallingClass" role="struct">
<title>TpSvcChannelInterfaceMediaSignallingClass</title>
<indexterm zone="TpSvcChannelInterfaceMediaSignallingClass"><primary>TpSvcChannelInterfaceMediaSignallingClass</primary></indexterm><programlisting>typedef struct _TpSvcChannelInterfaceMediaSignallingClass TpSvcChannelInterfaceMediaSignallingClass;</programlisting>
<para>
The class of TpSvcChannelInterfaceMediaSignalling.</para>
<para>

</para></refsect2>
<refsect2 id="tp-svc-channel-interface-media-signalling-get-session-handlers-impl" role="function">
<title>tp_svc_channel_interface_media_signalling_get_session_handlers_impl ()</title>
<indexterm zone="tp-svc-channel-interface-media-signalling-get-session-handlers-impl"><primary>tp_svc_channel_interface_media_signalling_get_session_handlers_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_interface_media_signalling_get_session_handlers_impl)
                                                        (<link linkend="TpSvcChannelInterfaceMediaSignalling">TpSvcChannelInterfaceMediaSignalling</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method GetSessionHandlers
on interface org.freedesktop.Telepathy.Channel.Interface.MediaSignalling</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-media-signalling-implement-get-session-handlers" role="function">
<title>tp_svc_channel_interface_media_signalling_implement_get_session_handlers ()</title>
<indexterm zone="tp-svc-channel-interface-media-signalling-implement-get-session-handlers"><primary>tp_svc_channel_interface_media_signalling_implement_get_session_handlers</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_media_signalling_implement_get_session_handlers
                                                        (<link linkend="TpSvcChannelInterfaceMediaSignallingClass">TpSvcChannelInterfaceMediaSignallingClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-media-signalling-get-session-handlers-impl">tp_svc_channel_interface_media_signalling_get_session_handlers_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetSessionHandlers method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetSessionHandlers method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-media-signalling-return-from-get-session-handlers" role="function">
<title>tp_svc_channel_interface_media_signalling_return_from_get_session_handlers ()</title>
<indexterm zone="tp-svc-channel-interface-media-signalling-return-from-get-session-handlers"><primary>tp_svc_channel_interface_media_signalling_return_from_get_session_handlers</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_media_signalling_return_from_get_session_handlers
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-media-signalling-emit-new-session-handler" role="function">
<title>tp_svc_channel_interface_media_signalling_emit_new_session_handler ()</title>
<indexterm zone="tp-svc-channel-interface-media-signalling-emit-new-session-handler"><primary>tp_svc_channel_interface_media_signalling_emit_new_session_handler</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_media_signalling_emit_new_session_handler
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="gchar">gchar</link> *session_handler,
                                                         const <link linkend="gchar">gchar</link> *type);</programlisting>
<para>
Emit the NewSessionHandler D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>session_handler</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="TpSvcChannelInterfaceChatState" role="struct">
<title>TpSvcChannelInterfaceChatState</title>
<indexterm zone="TpSvcChannelInterfaceChatState"><primary>TpSvcChannelInterfaceChatState</primary></indexterm><programlisting>typedef struct _TpSvcChannelInterfaceChatState TpSvcChannelInterfaceChatState;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>

</para></refsect2>
<refsect2 id="TpSvcChannelInterfaceChatStateClass" role="struct">
<title>TpSvcChannelInterfaceChatStateClass</title>
<indexterm zone="TpSvcChannelInterfaceChatStateClass"><primary>TpSvcChannelInterfaceChatStateClass</primary></indexterm><programlisting>typedef struct _TpSvcChannelInterfaceChatStateClass TpSvcChannelInterfaceChatStateClass;</programlisting>
<para>
The class of TpSvcChannelInterfaceChatState.</para>
<para>

</para></refsect2>
<refsect2 id="tp-svc-channel-interface-chat-state-set-chat-state-impl" role="function">
<title>tp_svc_channel_interface_chat_state_set_chat_state_impl ()</title>
<indexterm zone="tp-svc-channel-interface-chat-state-set-chat-state-impl"><primary>tp_svc_channel_interface_chat_state_set_chat_state_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_interface_chat_state_set_chat_state_impl)
                                                        (<link linkend="TpSvcChannelInterfaceChatState">TpSvcChannelInterfaceChatState</link> *self,
                                                         <link linkend="guint">guint</link> state,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method SetChatState
on interface org.freedesktop.Telepathy.Channel.Interface.ChatState</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-chat-state-implement-set-chat-state" role="function">
<title>tp_svc_channel_interface_chat_state_implement_set_chat_state ()</title>
<indexterm zone="tp-svc-channel-interface-chat-state-implement-set-chat-state"><primary>tp_svc_channel_interface_chat_state_implement_set_chat_state</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_chat_state_implement_set_chat_state
                                                        (<link linkend="TpSvcChannelInterfaceChatStateClass">TpSvcChannelInterfaceChatStateClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-chat-state-set-chat-state-impl">tp_svc_channel_interface_chat_state_set_chat_state_impl</link> impl);</programlisting>
<para>
Register an implementation for the SetChatState method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the SetChatState method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-chat-state-return-from-set-chat-state" role="function">
<title>tp_svc_channel_interface_chat_state_return_from_set_chat_state ()</title>
<indexterm zone="tp-svc-channel-interface-chat-state-return-from-set-chat-state"><primary>tp_svc_channel_interface_chat_state_return_from_set_chat_state</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_chat_state_return_from_set_chat_state
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-chat-state-emit-chat-state-changed" role="function">
<title>tp_svc_channel_interface_chat_state_emit_chat_state_changed ()</title>
<indexterm zone="tp-svc-channel-interface-chat-state-emit-chat-state-changed"><primary>tp_svc_channel_interface_chat_state_emit_chat_state_changed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_chat_state_emit_chat_state_changed
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> contact,
                                                         const <link linkend="guint">guint</link> state);</programlisting>
<para>
Emit the ChatStateChanged D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>contact</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>



<refsect1 id="telepathy-glib-svc-channel.see-also">
<title>See Also</title>
<link linkend="TpChannelIface"><type>TpChannelIface</type></link>
</refsect1>

</refentry>

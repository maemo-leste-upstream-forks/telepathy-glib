<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="telepathy-glib-svc-channel-request">
<refmeta>
<refentrytitle role="top_of_page" id="telepathy-glib-svc-channel-request.top_of_page">Service-side Channel Request interface</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>TELEPATHY-GLIB Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>Service-side Channel Request interface</refname>
<refpurpose>GInterface for Telepathy ChannelRequest object</refpurpose>
</refnamediv>

<refsynopsisdiv id="telepathy-glib-svc-channel-request.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>
<anchor id="TpSvcChannelRequest"/>
<synopsis>

#include &lt;telepathy-glib/svc-channel-request.h&gt;

                    <link linkend="TpSvcChannelRequest-struct">TpSvcChannelRequest</link>;
                    <link linkend="TpSvcChannelRequestClass">TpSvcChannelRequestClass</link>;
<link linkend="void">void</link>                <link linkend="tp-svc-channel-request-return-from-proceed">tp_svc_channel_request_return_from_proceed</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-request-proceed-impl">*tp_svc_channel_request_proceed_impl</link>)
                                                        (<link linkend="TpSvcChannelRequest">TpSvcChannelRequest</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-request-implement-proceed">tp_svc_channel_request_implement_proceed</link>
                                                        (<link linkend="TpSvcChannelRequestClass">TpSvcChannelRequestClass</link> *klass,
                                                         <link linkend="tp-svc-channel-request-proceed-impl">tp_svc_channel_request_proceed_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-request-return-from-cancel">tp_svc_channel_request_return_from_cancel</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-request-cancel-impl">*tp_svc_channel_request_cancel_impl</link>)
                                                        (<link linkend="TpSvcChannelRequest">TpSvcChannelRequest</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-request-implement-cancel">tp_svc_channel_request_implement_cancel</link>
                                                        (<link linkend="TpSvcChannelRequestClass">TpSvcChannelRequestClass</link> *klass,
                                                         <link linkend="tp-svc-channel-request-cancel-impl">tp_svc_channel_request_cancel_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-request-emit-failed">tp_svc_channel_request_emit_failed</link>  (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="gchar">gchar</link> *arg_Error,
                                                         const <link linkend="gchar">gchar</link> *arg_Message);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-request-emit-succeeded">tp_svc_channel_request_emit_succeeded</link>
                                                        (<link linkend="gpointer">gpointer</link> instance);
</synopsis>
</refsynopsisdiv>

<refsect1 id="telepathy-glib-svc-channel-request.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>
  <link linkend="GInterface">GInterface</link>
   +----TpSvcChannelRequest
</synopsis>
</refsect1>






<refsect1 id="telepathy-glib-svc-channel-request.signals" role="signal_proto">
<title role="signal_proto.title">Signals</title>
<synopsis>
  &quot;<link linkend="TpSvcChannelRequest-failed">failed</link>&quot;                                         : Run Last / Has Details
  &quot;<link linkend="TpSvcChannelRequest-succeeded">succeeded</link>&quot;                                      : Run Last / Has Details
</synopsis>
</refsect1>


<refsect1 id="telepathy-glib-svc-channel-request.description" role="desc">
<title role="desc.title">Description</title>
<para>
This interface (auto-generated from the Telepathy
spec) makes it easier to export an object implementing the Telepathy
ChannelRequest interface, with the correct method and signal
signatures, and emit signals from that object in a type-safe way.
</para>
<para>
You don't need these interfaces unless you're implementing a
Telepathy ChannelDispatcher, such as Mission Control.</para>
<para>
</para>
</refsect1>

<refsect1 id="telepathy-glib-svc-channel-request.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="TpSvcChannelRequest-struct" role="struct">
<title>TpSvcChannelRequest</title>
<indexterm zone="TpSvcChannelRequest-struct"><primary sortas="TpSvcChannelRequest">TpSvcChannelRequest</primary></indexterm><programlisting>typedef struct _TpSvcChannelRequest TpSvcChannelRequest;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>
</para></refsect2>
<refsect2 id="TpSvcChannelRequestClass" role="struct">
<title>TpSvcChannelRequestClass</title>
<indexterm zone="TpSvcChannelRequestClass"><primary sortas="TpSvcChannelRequestClass">TpSvcChannelRequestClass</primary></indexterm><programlisting>typedef struct _TpSvcChannelRequestClass TpSvcChannelRequestClass;</programlisting>
<para>
The class of TpSvcChannelRequest.
</para>
<para>
In a full implementation of this interface (i.e. all
methods implemented), the interface initialization
function used in <link linkend="G-IMPLEMENT-INTERFACE--CAPS"><function>G_IMPLEMENT_INTERFACE()</function></link> would
typically look like this:
</para>
<para>
<programlisting>
static void
implement_channel_request (gpointer klass,
    gpointer unused G_GNUC_UNUSED)
{
#define IMPLEMENT(x) tp_svc_channel_request_implement_##<link linkend="x">x</link> (\
  klass, my_object_##<link linkend="x">x</link>)
  IMPLEMENT (proceed);
  IMPLEMENT (cancel);
#undef IMPLEMENT
}
</programlisting></para>
<para>
</para></refsect2>
<refsect2 id="tp-svc-channel-request-return-from-proceed" role="function">
<title>tp_svc_channel_request_return_from_proceed ()</title>
<indexterm zone="tp-svc-channel-request-return-from-proceed"><primary sortas="tp_svc_channel_request_return_from_proceed">tp_svc_channel_request_return_from_proceed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_request_return_from_proceed
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-request-proceed-impl" role="function">
<title>tp_svc_channel_request_proceed_impl ()</title>
<indexterm zone="tp-svc-channel-request-proceed-impl"><primary sortas="tp_svc_channel_request_proceed_impl">tp_svc_channel_request_proceed_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_request_proceed_impl)
                                                        (<link linkend="TpSvcChannelRequest">TpSvcChannelRequest</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
Proceed on interface org.freedesktop.Telepathy.ChannelRequest.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-request-implement-proceed" role="function">
<title>tp_svc_channel_request_implement_proceed ()</title>
<indexterm zone="tp-svc-channel-request-implement-proceed"><primary sortas="tp_svc_channel_request_implement_proceed">tp_svc_channel_request_implement_proceed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_request_implement_proceed
                                                        (<link linkend="TpSvcChannelRequestClass">TpSvcChannelRequestClass</link> *klass,
                                                         <link linkend="tp-svc-channel-request-proceed-impl">tp_svc_channel_request_proceed_impl</link> impl);</programlisting>
<para>
Register an implementation for the Proceed method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the Proceed D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-request-return-from-cancel" role="function">
<title>tp_svc_channel_request_return_from_cancel ()</title>
<indexterm zone="tp-svc-channel-request-return-from-cancel"><primary sortas="tp_svc_channel_request_return_from_cancel">tp_svc_channel_request_return_from_cancel</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_request_return_from_cancel
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-request-cancel-impl" role="function">
<title>tp_svc_channel_request_cancel_impl ()</title>
<indexterm zone="tp-svc-channel-request-cancel-impl"><primary sortas="tp_svc_channel_request_cancel_impl">tp_svc_channel_request_cancel_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_request_cancel_impl)
                                                        (<link linkend="TpSvcChannelRequest">TpSvcChannelRequest</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
Cancel on interface org.freedesktop.Telepathy.ChannelRequest.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-request-implement-cancel" role="function">
<title>tp_svc_channel_request_implement_cancel ()</title>
<indexterm zone="tp-svc-channel-request-implement-cancel"><primary sortas="tp_svc_channel_request_implement_cancel">tp_svc_channel_request_implement_cancel</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_request_implement_cancel
                                                        (<link linkend="TpSvcChannelRequestClass">TpSvcChannelRequestClass</link> *klass,
                                                         <link linkend="tp-svc-channel-request-cancel-impl">tp_svc_channel_request_cancel_impl</link> impl);</programlisting>
<para>
Register an implementation for the Cancel method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the Cancel D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-request-emit-failed" role="function">
<title>tp_svc_channel_request_emit_failed ()</title>
<indexterm zone="tp-svc-channel-request-emit-failed"><primary sortas="tp_svc_channel_request_emit_failed">tp_svc_channel_request_emit_failed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_request_emit_failed  (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="gchar">gchar</link> *arg_Error,
                                                         const <link linkend="gchar">gchar</link> *arg_Message);</programlisting>
<para>
Type-safe wrapper around g_signal_emit to emit the
Failed signal on interface org.freedesktop.Telepathy.ChannelRequest.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Error</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Message</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-request-emit-succeeded" role="function">
<title>tp_svc_channel_request_emit_succeeded ()</title>
<indexterm zone="tp-svc-channel-request-emit-succeeded"><primary sortas="tp_svc_channel_request_emit_succeeded">tp_svc_channel_request_emit_succeeded</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_request_emit_succeeded
                                                        (<link linkend="gpointer">gpointer</link> instance);</programlisting>
<para>
Type-safe wrapper around g_signal_emit to emit the
Succeeded signal on interface org.freedesktop.Telepathy.ChannelRequest.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>

<refsect1 id="telepathy-glib-svc-channel-request.signal-details" role="signals">
<title role="signals.title">Signal Details</title>
<refsect2 id="TpSvcChannelRequest-failed" role="signal"><title>The <literal>&quot;failed&quot;</literal> signal</title>
<indexterm zone="TpSvcChannelRequest-failed"><primary sortas="TpSvcChannelRequest::failed">TpSvcChannelRequest::failed</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="TpSvcChannelRequest">TpSvcChannelRequest</link> *arg_Error,
                                                        <link linkend="gchar">gchar</link>               *arg_Message,
                                                        <link linkend="gchar">gchar</link>               *arg2,
                                                        <link linkend="gpointer">gpointer</link>             user_data)        : Run Last / Has Details</programlisting>
<para>
The Failed D-Bus signal is emitted whenever this GObject signal is.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>arg_Error</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Message</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="TpSvcChannelRequest-succeeded" role="signal"><title>The <literal>&quot;succeeded&quot;</literal> signal</title>
<indexterm zone="TpSvcChannelRequest-succeeded"><primary sortas="TpSvcChannelRequest::succeeded">TpSvcChannelRequest::succeeded</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="TpSvcChannelRequest">TpSvcChannelRequest</link> *arg0,
                                                        <link linkend="gpointer">gpointer</link>             user_data)      : Run Last / Has Details</programlisting>
<para>
The Succeeded D-Bus signal is emitted whenever this GObject signal is.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>



</refentry>

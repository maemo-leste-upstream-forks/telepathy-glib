<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="telepathy-glib-svc-connection">
<refmeta>
<refentrytitle role="top_of_page" id="telepathy-glib-svc-connection.top_of_page">Service-side Connection interfaces</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>TELEPATHY-GLIB Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>Service-side Connection interfaces</refname>
<refpurpose>GInterfaces for Telepathy Connection objects</refpurpose>
</refnamediv>

<refsynopsisdiv id="telepathy-glib-svc-connection.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>
<anchor id="TpSvcConnection"/><anchor id="TpSvcConnectionInterfaceContacts"/><anchor id="TpSvcConnectionInterfaceRequests"/><anchor id="TpSvcConnectionInterfaceSimplePresence"/><anchor id="TpSvcConnectionInterfacePresence"/><anchor id="TpSvcConnectionInterfaceAvatars"/><anchor id="TpSvcConnectionInterfaceAliasing"/><anchor id="TpSvcConnectionInterfaceCapabilities"/>
<synopsis>

#include &lt;telepathy-glib/svc-connection.h&gt;

                    <link linkend="TpSvcConnection-struct">TpSvcConnection</link>;
                    <link linkend="TpSvcConnectionClass">TpSvcConnectionClass</link>;
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-connect-impl">*tp_svc_connection_connect_impl</link>)   (<link linkend="TpSvcConnection">TpSvcConnection</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-implement-connect">tp_svc_connection_implement_connect</link> (<link linkend="TpSvcConnectionClass">TpSvcConnectionClass</link> *klass,
                                                         <link linkend="tp-svc-connection-connect-impl">tp_svc_connection_connect_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-return-from-connect">tp_svc_connection_return_from_connect</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-disconnect-impl">*tp_svc_connection_disconnect_impl</link>)
                                                        (<link linkend="TpSvcConnection">TpSvcConnection</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-implement-disconnect">tp_svc_connection_implement_disconnect</link>
                                                        (<link linkend="TpSvcConnectionClass">TpSvcConnectionClass</link> *klass,
                                                         <link linkend="tp-svc-connection-disconnect-impl">tp_svc_connection_disconnect_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-return-from-disconnect">tp_svc_connection_return_from_disconnect</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-get-interfaces-impl">*tp_svc_connection_get_interfaces_impl</link>)
                                                        (<link linkend="TpSvcConnection">TpSvcConnection</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-implement-get-interfaces">tp_svc_connection_implement_get_interfaces</link>
                                                        (<link linkend="TpSvcConnectionClass">TpSvcConnectionClass</link> *klass,
                                                         <link linkend="tp-svc-connection-get-interfaces-impl">tp_svc_connection_get_interfaces_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-return-from-get-interfaces">tp_svc_connection_return_from_get_interfaces</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="gchar">gchar</link> **out_Interfaces);
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-get-protocol-impl">*tp_svc_connection_get_protocol_impl</link>)
                                                        (<link linkend="TpSvcConnection">TpSvcConnection</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-implement-get-protocol">tp_svc_connection_implement_get_protocol</link>
                                                        (<link linkend="TpSvcConnectionClass">TpSvcConnectionClass</link> *klass,
                                                         <link linkend="tp-svc-connection-get-protocol-impl">tp_svc_connection_get_protocol_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-return-from-get-protocol">tp_svc_connection_return_from_get_protocol</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="gchar">gchar</link> *out_Protocol);
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-get-self-handle-impl">*tp_svc_connection_get_self_handle_impl</link>)
                                                        (<link linkend="TpSvcConnection">TpSvcConnection</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-implement-get-self-handle">tp_svc_connection_implement_get_self_handle</link>
                                                        (<link linkend="TpSvcConnectionClass">TpSvcConnectionClass</link> *klass,
                                                         <link linkend="tp-svc-connection-get-self-handle-impl">tp_svc_connection_get_self_handle_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-return-from-get-self-handle">tp_svc_connection_return_from_get_self_handle</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         <link linkend="guint">guint</link> out_Self_Handle);
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-get-status-impl">*tp_svc_connection_get_status_impl</link>)
                                                        (<link linkend="TpSvcConnection">TpSvcConnection</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-implement-get-status">tp_svc_connection_implement_get_status</link>
                                                        (<link linkend="TpSvcConnectionClass">TpSvcConnectionClass</link> *klass,
                                                         <link linkend="tp-svc-connection-get-status-impl">tp_svc_connection_get_status_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-return-from-get-status">tp_svc_connection_return_from_get_status</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         <link linkend="guint">guint</link> out_Status);
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-hold-handles-impl">*tp_svc_connection_hold_handles_impl</link>)
                                                        (<link linkend="TpSvcConnection">TpSvcConnection</link> *self,
                                                         <link linkend="guint">guint</link> in_Handle_Type,
                                                         const <link linkend="GArray">GArray</link> *in_Handles,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-implement-hold-handles">tp_svc_connection_implement_hold_handles</link>
                                                        (<link linkend="TpSvcConnectionClass">TpSvcConnectionClass</link> *klass,
                                                         <link linkend="tp-svc-connection-hold-handles-impl">tp_svc_connection_hold_handles_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-return-from-hold-handles">tp_svc_connection_return_from_hold_handles</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-inspect-handles-impl">*tp_svc_connection_inspect_handles_impl</link>)
                                                        (<link linkend="TpSvcConnection">TpSvcConnection</link> *self,
                                                         <link linkend="guint">guint</link> in_Handle_Type,
                                                         const <link linkend="GArray">GArray</link> *in_Handles,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-implement-inspect-handles">tp_svc_connection_implement_inspect_handles</link>
                                                        (<link linkend="TpSvcConnectionClass">TpSvcConnectionClass</link> *klass,
                                                         <link linkend="tp-svc-connection-inspect-handles-impl">tp_svc_connection_inspect_handles_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-return-from-inspect-handles">tp_svc_connection_return_from_inspect_handles</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="gchar">gchar</link> **out_Identifiers);
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-list-channels-impl">*tp_svc_connection_list_channels_impl</link>)
                                                        (<link linkend="TpSvcConnection">TpSvcConnection</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-implement-list-channels">tp_svc_connection_implement_list_channels</link>
                                                        (<link linkend="TpSvcConnectionClass">TpSvcConnectionClass</link> *klass,
                                                         <link linkend="tp-svc-connection-list-channels-impl">tp_svc_connection_list_channels_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-return-from-list-channels">tp_svc_connection_return_from_list_channels</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *out_Channel_Info);
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-release-handles-impl">*tp_svc_connection_release_handles_impl</link>)
                                                        (<link linkend="TpSvcConnection">TpSvcConnection</link> *self,
                                                         <link linkend="guint">guint</link> in_Handle_Type,
                                                         const <link linkend="GArray">GArray</link> *in_Handles,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-implement-release-handles">tp_svc_connection_implement_release_handles</link>
                                                        (<link linkend="TpSvcConnectionClass">TpSvcConnectionClass</link> *klass,
                                                         <link linkend="tp-svc-connection-release-handles-impl">tp_svc_connection_release_handles_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-return-from-release-handles">tp_svc_connection_return_from_release_handles</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-request-channel-impl">*tp_svc_connection_request_channel_impl</link>)
                                                        (<link linkend="TpSvcConnection">TpSvcConnection</link> *self,
                                                         const <link linkend="gchar">gchar</link> *in_Type,
                                                         <link linkend="guint">guint</link> in_Handle_Type,
                                                         <link linkend="guint">guint</link> in_Handle,
                                                         <link linkend="gboolean">gboolean</link> in_Suppress_Handler,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-implement-request-channel">tp_svc_connection_implement_request_channel</link>
                                                        (<link linkend="TpSvcConnectionClass">TpSvcConnectionClass</link> *klass,
                                                         <link linkend="tp-svc-connection-request-channel-impl">tp_svc_connection_request_channel_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-return-from-request-channel">tp_svc_connection_return_from_request_channel</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="gchar">gchar</link> *out_Object_Path);
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-request-handles-impl">*tp_svc_connection_request_handles_impl</link>)
                                                        (<link linkend="TpSvcConnection">TpSvcConnection</link> *self,
                                                         <link linkend="guint">guint</link> in_Handle_Type,
                                                         const <link linkend="gchar">gchar</link> **in_Names,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-implement-request-handles">tp_svc_connection_implement_request_handles</link>
                                                        (<link linkend="TpSvcConnectionClass">TpSvcConnectionClass</link> *klass,
                                                         <link linkend="tp-svc-connection-request-handles-impl">tp_svc_connection_request_handles_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-return-from-request-handles">tp_svc_connection_return_from_request_handles</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="GArray">GArray</link> *out_Handles);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-emit-new-channel">tp_svc_connection_emit_new_channel</link>  (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="gchar">gchar</link> *arg_Object_Path,
                                                         const <link linkend="gchar">gchar</link> *arg_Channel_Type,
                                                         <link linkend="guint">guint</link> arg_Handle_Type,
                                                         <link linkend="guint">guint</link> arg_Handle,
                                                         <link linkend="gboolean">gboolean</link> arg_Suppress_Handler);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-emit-self-handle-changed">tp_svc_connection_emit_self_handle_changed</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         <link linkend="guint">guint</link> arg_Self_Handle);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-emit-status-changed">tp_svc_connection_emit_status_changed</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         <link linkend="guint">guint</link> arg_Status,
                                                         <link linkend="guint">guint</link> arg_Reason);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-emit-connection-error">tp_svc_connection_emit_connection_error</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="gchar">gchar</link> *arg_Error,
                                                         <link linkend="GHashTable">GHashTable</link> *arg_Details);


                    <link linkend="TpSvcConnectionInterfaceContacts-struct">TpSvcConnectionInterfaceContacts</link>;
                    <link linkend="TpSvcConnectionInterfaceContactsClass">TpSvcConnectionInterfaceContactsClass</link>;
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-interface-contacts-get-contact-attributes-impl">*tp_svc_connection_interface_contacts_get_contact_attributes_impl</link>)
                                                        (<link linkend="TpSvcConnectionInterfaceContacts">TpSvcConnectionInterfaceContacts</link> *self,
                                                         const <link linkend="GArray">GArray</link> *in_Handles,
                                                         const <link linkend="gchar">gchar</link> **in_Interfaces,
                                                         <link linkend="gboolean">gboolean</link> in_Hold,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-contacts-implement-get-contact-attributes">tp_svc_connection_interface_contacts_implement_get_contact_attributes</link>
                                                        (<link linkend="TpSvcConnectionInterfaceContactsClass">TpSvcConnectionInterfaceContactsClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-contacts-get-contact-attributes-impl">tp_svc_connection_interface_contacts_get_contact_attributes_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-contacts-return-from-get-contact-attributes">tp_svc_connection_interface_contacts_return_from_get_contact_attributes</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         <link linkend="GHashTable">GHashTable</link> *out_Attributes);


                    <link linkend="TpSvcConnectionInterfaceRequests-struct">TpSvcConnectionInterfaceRequests</link>;
                    <link linkend="TpSvcConnectionInterfaceRequestsClass">TpSvcConnectionInterfaceRequestsClass</link>;
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-interface-requests-create-channel-impl">*tp_svc_connection_interface_requests_create_channel_impl</link>)
                                                        (<link linkend="TpSvcConnectionInterfaceRequests">TpSvcConnectionInterfaceRequests</link> *self,
                                                         <link linkend="GHashTable">GHashTable</link> *in_Request,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-requests-emit-channel-closed">tp_svc_connection_interface_requests_emit_channel_closed</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="gchar">gchar</link> *arg_Removed);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-requests-emit-new-channels">tp_svc_connection_interface_requests_emit_new_channels</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *arg_Channels);
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-interface-requests-ensure-channel-impl">*tp_svc_connection_interface_requests_ensure_channel_impl</link>)
                                                        (<link linkend="TpSvcConnectionInterfaceRequests">TpSvcConnectionInterfaceRequests</link> *self,
                                                         <link linkend="GHashTable">GHashTable</link> *in_Request,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-requests-implement-create-channel">tp_svc_connection_interface_requests_implement_create_channel</link>
                                                        (<link linkend="TpSvcConnectionInterfaceRequestsClass">TpSvcConnectionInterfaceRequestsClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-requests-create-channel-impl">tp_svc_connection_interface_requests_create_channel_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-requests-implement-ensure-channel">tp_svc_connection_interface_requests_implement_ensure_channel</link>
                                                        (<link linkend="TpSvcConnectionInterfaceRequestsClass">TpSvcConnectionInterfaceRequestsClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-requests-ensure-channel-impl">tp_svc_connection_interface_requests_ensure_channel_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-requests-return-from-create-channel">tp_svc_connection_interface_requests_return_from_create_channel</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="gchar">gchar</link> *out_Channel,
                                                         <link linkend="GHashTable">GHashTable</link> *out_Properties);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-requests-return-from-ensure-channel">tp_svc_connection_interface_requests_return_from_ensure_channel</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         <link linkend="gboolean">gboolean</link> out_Yours,
                                                         const <link linkend="gchar">gchar</link> *out_Channel,
                                                         <link linkend="GHashTable">GHashTable</link> *out_Properties);


                    <link linkend="TpSvcConnectionInterfaceSimplePresence-struct">TpSvcConnectionInterfaceSimplePresence</link>;
                    <link linkend="TpSvcConnectionInterfaceSimplePresenceClass">TpSvcConnectionInterfaceSimplePresenceClass</link>;
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-simple-presence-emit-presences-changed">tp_svc_connection_interface_simple_presence_emit_presences_changed</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         <link linkend="GHashTable">GHashTable</link> *arg_Presence);
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-interface-simple-presence-get-presences-impl">*tp_svc_connection_interface_simple_presence_get_presences_impl</link>)
                                                        (<link linkend="TpSvcConnectionInterfaceSimplePresence">TpSvcConnectionInterfaceSimplePresence</link> *self,
                                                         const <link linkend="GArray">GArray</link> *in_Contacts,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-simple-presence-implement-get-presences">tp_svc_connection_interface_simple_presence_implement_get_presences</link>
                                                        (<link linkend="TpSvcConnectionInterfaceSimplePresenceClass">TpSvcConnectionInterfaceSimplePresenceClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-simple-presence-get-presences-impl">tp_svc_connection_interface_simple_presence_get_presences_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-simple-presence-implement-set-presence">tp_svc_connection_interface_simple_presence_implement_set_presence</link>
                                                        (<link linkend="TpSvcConnectionInterfaceSimplePresenceClass">TpSvcConnectionInterfaceSimplePresenceClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-simple-presence-set-presence-impl">tp_svc_connection_interface_simple_presence_set_presence_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-simple-presence-return-from-get-presences">tp_svc_connection_interface_simple_presence_return_from_get_presences</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         <link linkend="GHashTable">GHashTable</link> *out_Presence);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-simple-presence-return-from-set-presence">tp_svc_connection_interface_simple_presence_return_from_set_presence</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-interface-simple-presence-set-presence-impl">*tp_svc_connection_interface_simple_presence_set_presence_impl</link>)
                                                        (<link linkend="TpSvcConnectionInterfaceSimplePresence">TpSvcConnectionInterfaceSimplePresence</link> *self,
                                                         const <link linkend="gchar">gchar</link> *in_Status,
                                                         const <link linkend="gchar">gchar</link> *in_Status_Message,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);


                    <link linkend="TpSvcConnectionInterfacePresence-struct">TpSvcConnectionInterfacePresence</link>;
                    <link linkend="TpSvcConnectionInterfacePresenceClass">TpSvcConnectionInterfacePresenceClass</link>;
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-interface-presence-add-status-impl">*tp_svc_connection_interface_presence_add_status_impl</link>)
                                                        (<link linkend="TpSvcConnectionInterfacePresence">TpSvcConnectionInterfacePresence</link> *self,
                                                         const <link linkend="gchar">gchar</link> *in_Status,
                                                         <link linkend="GHashTable">GHashTable</link> *in_Parameters,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-presence-implement-add-status">tp_svc_connection_interface_presence_implement_add_status</link>
                                                        (<link linkend="TpSvcConnectionInterfacePresenceClass">TpSvcConnectionInterfacePresenceClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-presence-add-status-impl">tp_svc_connection_interface_presence_add_status_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-presence-return-from-add-status">tp_svc_connection_interface_presence_return_from_add_status</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-interface-presence-clear-status-impl">*tp_svc_connection_interface_presence_clear_status_impl</link>)
                                                        (<link linkend="TpSvcConnectionInterfacePresence">TpSvcConnectionInterfacePresence</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-presence-implement-clear-status">tp_svc_connection_interface_presence_implement_clear_status</link>
                                                        (<link linkend="TpSvcConnectionInterfacePresenceClass">TpSvcConnectionInterfacePresenceClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-presence-clear-status-impl">tp_svc_connection_interface_presence_clear_status_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-presence-return-from-clear-status">tp_svc_connection_interface_presence_return_from_clear_status</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-interface-presence-get-presence-impl">*tp_svc_connection_interface_presence_get_presence_impl</link>)
                                                        (<link linkend="TpSvcConnectionInterfacePresence">TpSvcConnectionInterfacePresence</link> *self,
                                                         const <link linkend="GArray">GArray</link> *in_Contacts,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-presence-implement-get-presence">tp_svc_connection_interface_presence_implement_get_presence</link>
                                                        (<link linkend="TpSvcConnectionInterfacePresenceClass">TpSvcConnectionInterfacePresenceClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-presence-get-presence-impl">tp_svc_connection_interface_presence_get_presence_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-presence-return-from-get-presence">tp_svc_connection_interface_presence_return_from_get_presence</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         <link linkend="GHashTable">GHashTable</link> *out_Presence);
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-interface-presence-get-statuses-impl">*tp_svc_connection_interface_presence_get_statuses_impl</link>)
                                                        (<link linkend="TpSvcConnectionInterfacePresence">TpSvcConnectionInterfacePresence</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-presence-implement-get-statuses">tp_svc_connection_interface_presence_implement_get_statuses</link>
                                                        (<link linkend="TpSvcConnectionInterfacePresenceClass">TpSvcConnectionInterfacePresenceClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-presence-get-statuses-impl">tp_svc_connection_interface_presence_get_statuses_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-presence-return-from-get-statuses">tp_svc_connection_interface_presence_return_from_get_statuses</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         <link linkend="GHashTable">GHashTable</link> *out_Available_Statuses);
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-interface-presence-remove-status-impl">*tp_svc_connection_interface_presence_remove_status_impl</link>)
                                                        (<link linkend="TpSvcConnectionInterfacePresence">TpSvcConnectionInterfacePresence</link> *self,
                                                         const <link linkend="gchar">gchar</link> *in_Status,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-presence-implement-remove-status">tp_svc_connection_interface_presence_implement_remove_status</link>
                                                        (<link linkend="TpSvcConnectionInterfacePresenceClass">TpSvcConnectionInterfacePresenceClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-presence-remove-status-impl">tp_svc_connection_interface_presence_remove_status_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-presence-return-from-remove-status">tp_svc_connection_interface_presence_return_from_remove_status</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-interface-presence-request-presence-impl">*tp_svc_connection_interface_presence_request_presence_impl</link>)
                                                        (<link linkend="TpSvcConnectionInterfacePresence">TpSvcConnectionInterfacePresence</link> *self,
                                                         const <link linkend="GArray">GArray</link> *in_Contacts,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-presence-implement-request-presence">tp_svc_connection_interface_presence_implement_request_presence</link>
                                                        (<link linkend="TpSvcConnectionInterfacePresenceClass">TpSvcConnectionInterfacePresenceClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-presence-request-presence-impl">tp_svc_connection_interface_presence_request_presence_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-presence-return-from-request-presence">tp_svc_connection_interface_presence_return_from_request_presence</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-interface-presence-set-last-activity-time-impl">*tp_svc_connection_interface_presence_set_last_activity_time_impl</link>)
                                                        (<link linkend="TpSvcConnectionInterfacePresence">TpSvcConnectionInterfacePresence</link> *self,
                                                         <link linkend="guint">guint</link> in_Time,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-presence-implement-set-last-activity-time">tp_svc_connection_interface_presence_implement_set_last_activity_time</link>
                                                        (<link linkend="TpSvcConnectionInterfacePresenceClass">TpSvcConnectionInterfacePresenceClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-presence-set-last-activity-time-impl">tp_svc_connection_interface_presence_set_last_activity_time_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-presence-return-from-set-last-activity-time">tp_svc_connection_interface_presence_return_from_set_last_activity_time</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-interface-presence-set-status-impl">*tp_svc_connection_interface_presence_set_status_impl</link>)
                                                        (<link linkend="TpSvcConnectionInterfacePresence">TpSvcConnectionInterfacePresence</link> *self,
                                                         <link linkend="GHashTable">GHashTable</link> *in_Statuses,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-presence-implement-set-status">tp_svc_connection_interface_presence_implement_set_status</link>
                                                        (<link linkend="TpSvcConnectionInterfacePresenceClass">TpSvcConnectionInterfacePresenceClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-presence-set-status-impl">tp_svc_connection_interface_presence_set_status_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-presence-return-from-set-status">tp_svc_connection_interface_presence_return_from_set_status</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-presence-emit-presence-update">tp_svc_connection_interface_presence_emit_presence_update</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         <link linkend="GHashTable">GHashTable</link> *arg_Presence);


                    <link linkend="TpSvcConnectionInterfaceAvatars-struct">TpSvcConnectionInterfaceAvatars</link>;
                    <link linkend="TpSvcConnectionInterfaceAvatarsClass">TpSvcConnectionInterfaceAvatarsClass</link>;
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-interface-avatars-clear-avatar-impl">*tp_svc_connection_interface_avatars_clear_avatar_impl</link>)
                                                        (<link linkend="TpSvcConnectionInterfaceAvatars">TpSvcConnectionInterfaceAvatars</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-avatars-implement-clear-avatar">tp_svc_connection_interface_avatars_implement_clear_avatar</link>
                                                        (<link linkend="TpSvcConnectionInterfaceAvatarsClass">TpSvcConnectionInterfaceAvatarsClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-avatars-clear-avatar-impl">tp_svc_connection_interface_avatars_clear_avatar_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-avatars-return-from-clear-avatar">tp_svc_connection_interface_avatars_return_from_clear_avatar</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-interface-avatars-get-avatar-requirements-impl">*tp_svc_connection_interface_avatars_get_avatar_requirements_impl</link>)
                                                        (<link linkend="TpSvcConnectionInterfaceAvatars">TpSvcConnectionInterfaceAvatars</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-avatars-implement-get-avatar-requirements">tp_svc_connection_interface_avatars_implement_get_avatar_requirements</link>
                                                        (<link linkend="TpSvcConnectionInterfaceAvatarsClass">TpSvcConnectionInterfaceAvatarsClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-avatars-get-avatar-requirements-impl">tp_svc_connection_interface_avatars_get_avatar_requirements_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-avatars-return-from-get-avatar-requirements">tp_svc_connection_interface_avatars_return_from_get_avatar_requirements</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="gchar">gchar</link> **out_MIME_Types,
                                                         <link linkend="guint">guint</link> out_Min_Width,
                                                         <link linkend="guint">guint</link> out_Min_Height,
                                                         <link linkend="guint">guint</link> out_Max_Width,
                                                         <link linkend="guint">guint</link> out_Max_Height,
                                                         <link linkend="guint">guint</link> out_Max_Bytes);
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-interface-avatars-get-avatar-tokens-impl">*tp_svc_connection_interface_avatars_get_avatar_tokens_impl</link>)
                                                        (<link linkend="TpSvcConnectionInterfaceAvatars">TpSvcConnectionInterfaceAvatars</link> *self,
                                                         const <link linkend="GArray">GArray</link> *in_Contacts,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-avatars-implement-get-avatar-tokens">tp_svc_connection_interface_avatars_implement_get_avatar_tokens</link>
                                                        (<link linkend="TpSvcConnectionInterfaceAvatarsClass">TpSvcConnectionInterfaceAvatarsClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-avatars-get-avatar-tokens-impl">tp_svc_connection_interface_avatars_get_avatar_tokens_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-avatars-return-from-get-avatar-tokens">tp_svc_connection_interface_avatars_return_from_get_avatar_tokens</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="gchar">gchar</link> **out_Tokens);
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-interface-avatars-request-avatar-impl">*tp_svc_connection_interface_avatars_request_avatar_impl</link>)
                                                        (<link linkend="TpSvcConnectionInterfaceAvatars">TpSvcConnectionInterfaceAvatars</link> *self,
                                                         <link linkend="guint">guint</link> in_Contact,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-avatars-implement-request-avatar">tp_svc_connection_interface_avatars_implement_request_avatar</link>
                                                        (<link linkend="TpSvcConnectionInterfaceAvatarsClass">TpSvcConnectionInterfaceAvatarsClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-avatars-request-avatar-impl">tp_svc_connection_interface_avatars_request_avatar_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-avatars-return-from-request-avatar">tp_svc_connection_interface_avatars_return_from_request_avatar</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="GArray">GArray</link> *out_Data,
                                                         const <link linkend="gchar">gchar</link> *out_MIME_Type);
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-interface-avatars-set-avatar-impl">*tp_svc_connection_interface_avatars_set_avatar_impl</link>)
                                                        (<link linkend="TpSvcConnectionInterfaceAvatars">TpSvcConnectionInterfaceAvatars</link> *self,
                                                         const <link linkend="GArray">GArray</link> *in_Avatar,
                                                         const <link linkend="gchar">gchar</link> *in_MIME_Type,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-avatars-implement-set-avatar">tp_svc_connection_interface_avatars_implement_set_avatar</link>
                                                        (<link linkend="TpSvcConnectionInterfaceAvatarsClass">TpSvcConnectionInterfaceAvatarsClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-avatars-set-avatar-impl">tp_svc_connection_interface_avatars_set_avatar_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-avatars-return-from-set-avatar">tp_svc_connection_interface_avatars_return_from_set_avatar</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="gchar">gchar</link> *out_Token);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-avatars-emit-avatar-updated">tp_svc_connection_interface_avatars_emit_avatar_updated</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         <link linkend="guint">guint</link> arg_Contact,
                                                         const <link linkend="gchar">gchar</link> *arg_New_Avatar_Token);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-avatars-emit-avatar-retrieved">tp_svc_connection_interface_avatars_emit_avatar_retrieved</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         <link linkend="guint">guint</link> arg_Contact,
                                                         const <link linkend="gchar">gchar</link> *arg_Token,
                                                         const <link linkend="GArray">GArray</link> *arg_Avatar,
                                                         const <link linkend="gchar">gchar</link> *arg_Type);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-avatars-implement-request-avatars">tp_svc_connection_interface_avatars_implement_request_avatars</link>
                                                        (<link linkend="TpSvcConnectionInterfaceAvatarsClass">TpSvcConnectionInterfaceAvatarsClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-avatars-request-avatars-impl">tp_svc_connection_interface_avatars_request_avatars_impl</link> impl);
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-interface-avatars-request-avatars-impl">*tp_svc_connection_interface_avatars_request_avatars_impl</link>)
                                                        (<link linkend="TpSvcConnectionInterfaceAvatars">TpSvcConnectionInterfaceAvatars</link> *self,
                                                         const <link linkend="GArray">GArray</link> *in_Contacts,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-avatars-return-from-request-avatars">tp_svc_connection_interface_avatars_return_from_request_avatars</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-interface-avatars-get-known-avatar-tokens-impl">*tp_svc_connection_interface_avatars_get_known_avatar_tokens_impl</link>)
                                                        (<link linkend="TpSvcConnectionInterfaceAvatars">TpSvcConnectionInterfaceAvatars</link> *self,
                                                         const <link linkend="GArray">GArray</link> *in_Contacts,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-avatars-implement-get-known-avatar-tokens">tp_svc_connection_interface_avatars_implement_get_known_avatar_tokens</link>
                                                        (<link linkend="TpSvcConnectionInterfaceAvatarsClass">TpSvcConnectionInterfaceAvatarsClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-avatars-get-known-avatar-tokens-impl">tp_svc_connection_interface_avatars_get_known_avatar_tokens_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-avatars-return-from-get-known-avatar-tokens">tp_svc_connection_interface_avatars_return_from_get_known_avatar_tokens</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         <link linkend="GHashTable">GHashTable</link> *out_Tokens);


                    <link linkend="TpSvcConnectionInterfaceAliasing-struct">TpSvcConnectionInterfaceAliasing</link>;
                    <link linkend="TpSvcConnectionInterfaceAliasingClass">TpSvcConnectionInterfaceAliasingClass</link>;
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-interface-aliasing-get-alias-flags-impl">*tp_svc_connection_interface_aliasing_get_alias_flags_impl</link>)
                                                        (<link linkend="TpSvcConnectionInterfaceAliasing">TpSvcConnectionInterfaceAliasing</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-aliasing-implement-get-alias-flags">tp_svc_connection_interface_aliasing_implement_get_alias_flags</link>
                                                        (<link linkend="TpSvcConnectionInterfaceAliasingClass">TpSvcConnectionInterfaceAliasingClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-aliasing-get-alias-flags-impl">tp_svc_connection_interface_aliasing_get_alias_flags_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-aliasing-return-from-get-alias-flags">tp_svc_connection_interface_aliasing_return_from_get_alias_flags</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         <link linkend="guint">guint</link> out_Alias_Flags);
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-interface-aliasing-request-aliases-impl">*tp_svc_connection_interface_aliasing_request_aliases_impl</link>)
                                                        (<link linkend="TpSvcConnectionInterfaceAliasing">TpSvcConnectionInterfaceAliasing</link> *self,
                                                         const <link linkend="GArray">GArray</link> *in_Contacts,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-aliasing-implement-request-aliases">tp_svc_connection_interface_aliasing_implement_request_aliases</link>
                                                        (<link linkend="TpSvcConnectionInterfaceAliasingClass">TpSvcConnectionInterfaceAliasingClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-aliasing-request-aliases-impl">tp_svc_connection_interface_aliasing_request_aliases_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-aliasing-return-from-request-aliases">tp_svc_connection_interface_aliasing_return_from_request_aliases</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="gchar">gchar</link> **out_Aliases);
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-interface-aliasing-get-aliases-impl">*tp_svc_connection_interface_aliasing_get_aliases_impl</link>)
                                                        (<link linkend="TpSvcConnectionInterfaceAliasing">TpSvcConnectionInterfaceAliasing</link> *self,
                                                         const <link linkend="GArray">GArray</link> *in_Contacts,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-aliasing-implement-get-aliases">tp_svc_connection_interface_aliasing_implement_get_aliases</link>
                                                        (<link linkend="TpSvcConnectionInterfaceAliasingClass">TpSvcConnectionInterfaceAliasingClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-aliasing-get-aliases-impl">tp_svc_connection_interface_aliasing_get_aliases_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-aliasing-return-from-get-aliases">tp_svc_connection_interface_aliasing_return_from_get_aliases</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         <link linkend="GHashTable">GHashTable</link> *out_Aliases);
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-interface-aliasing-set-aliases-impl">*tp_svc_connection_interface_aliasing_set_aliases_impl</link>)
                                                        (<link linkend="TpSvcConnectionInterfaceAliasing">TpSvcConnectionInterfaceAliasing</link> *self,
                                                         <link linkend="GHashTable">GHashTable</link> *in_Aliases,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-aliasing-implement-set-aliases">tp_svc_connection_interface_aliasing_implement_set_aliases</link>
                                                        (<link linkend="TpSvcConnectionInterfaceAliasingClass">TpSvcConnectionInterfaceAliasingClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-aliasing-set-aliases-impl">tp_svc_connection_interface_aliasing_set_aliases_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-aliasing-return-from-set-aliases">tp_svc_connection_interface_aliasing_return_from_set_aliases</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-aliasing-emit-aliases-changed">tp_svc_connection_interface_aliasing_emit_aliases_changed</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *arg_Aliases);


                    <link linkend="TpSvcConnectionInterfaceCapabilities-struct">TpSvcConnectionInterfaceCapabilities</link>;
                    <link linkend="TpSvcConnectionInterfaceCapabilitiesClass">TpSvcConnectionInterfaceCapabilitiesClass</link>;
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-interface-capabilities-advertise-capabilities-impl">*tp_svc_connection_interface_capabilities_advertise_capabilities_impl</link>)
                                                        (<link linkend="TpSvcConnectionInterfaceCapabilities">TpSvcConnectionInterfaceCapabilities</link> *self,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *in_Add,
                                                         const <link linkend="gchar">gchar</link> **in_Remove,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-capabilities-implement-advertise-capabilities">tp_svc_connection_interface_capabilities_implement_advertise_capabilities</link>
                                                        (<link linkend="TpSvcConnectionInterfaceCapabilitiesClass">TpSvcConnectionInterfaceCapabilitiesClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-capabilities-advertise-capabilities-impl">tp_svc_connection_interface_capabilities_advertise_capabilities_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-capabilities-return-from-advertise-capabilities">tp_svc_connection_interface_capabilities_return_from_advertise_capabilities</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *out_Self_Capabilities);
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-interface-capabilities-get-capabilities-impl">*tp_svc_connection_interface_capabilities_get_capabilities_impl</link>)
                                                        (<link linkend="TpSvcConnectionInterfaceCapabilities">TpSvcConnectionInterfaceCapabilities</link> *self,
                                                         const <link linkend="GArray">GArray</link> *in_Handles,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-capabilities-implement-get-capabilities">tp_svc_connection_interface_capabilities_implement_get_capabilities</link>
                                                        (<link linkend="TpSvcConnectionInterfaceCapabilitiesClass">TpSvcConnectionInterfaceCapabilitiesClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-capabilities-get-capabilities-impl">tp_svc_connection_interface_capabilities_get_capabilities_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-capabilities-return-from-get-capabilities">tp_svc_connection_interface_capabilities_return_from_get_capabilities</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *out_Contact_Capabilities);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-capabilities-emit-capabilities-changed">tp_svc_connection_interface_capabilities_emit_capabilities_changed</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *arg_Caps);
</synopsis>
</refsynopsisdiv>

<refsect1 id="telepathy-glib-svc-connection.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>
  <link linkend="GInterface">GInterface</link>
   +----TpSvcConnection
</synopsis>
<synopsis>
  <link linkend="GInterface">GInterface</link>
   +----TpSvcConnectionInterfaceContacts
</synopsis>
<synopsis>
  <link linkend="GInterface">GInterface</link>
   +----TpSvcConnectionInterfaceRequests
</synopsis>
<synopsis>
  <link linkend="GInterface">GInterface</link>
   +----TpSvcConnectionInterfaceSimplePresence
</synopsis>
<synopsis>
  <link linkend="GInterface">GInterface</link>
   +----TpSvcConnectionInterfacePresence
</synopsis>
<synopsis>
  <link linkend="GInterface">GInterface</link>
   +----TpSvcConnectionInterfaceAvatars
</synopsis>
<synopsis>
  <link linkend="GInterface">GInterface</link>
   +----TpSvcConnectionInterfaceAliasing
</synopsis>
<synopsis>
  <link linkend="GInterface">GInterface</link>
   +----TpSvcConnectionInterfaceCapabilities
</synopsis>
</refsect1>




<refsect1 id="telepathy-glib-svc-connection.implementations" role="implementations">
<title role="implementations.title">Known Implementations</title>
<para>
TpSvcConnection is implemented by
 <link linkend="TpBaseConnection">TpBaseConnection</link>.</para>
<para>
TpSvcConnectionInterfaceRequests is implemented by
 <link linkend="TpBaseConnection">TpBaseConnection</link>.</para>
</refsect1>


<refsect1 id="telepathy-glib-svc-connection.signals" role="signal_proto">
<title role="signal_proto.title">Signals</title>
<synopsis>
  &quot;<link linkend="TpSvcConnection-connection-error">connection-error</link>&quot;                               : Run Last / Has Details
  &quot;<link linkend="TpSvcConnection-new-channel">new-channel</link>&quot;                                    : Run Last / Has Details
  &quot;<link linkend="TpSvcConnection-self-handle-changed">self-handle-changed</link>&quot;                            : Run Last / Has Details
  &quot;<link linkend="TpSvcConnection-status-changed">status-changed</link>&quot;                                 : Run Last / Has Details
  &quot;<link linkend="TpSvcConnectionInterfaceRequests-channel-closed">channel-closed</link>&quot;                                 : Run Last / Has Details
  &quot;<link linkend="TpSvcConnectionInterfaceRequests-new-channels">new-channels</link>&quot;                                   : Run Last / Has Details
  &quot;<link linkend="TpSvcConnectionInterfaceSimplePresence-presences-changed">presences-changed</link>&quot;                              : Run Last / Has Details
  &quot;<link linkend="TpSvcConnectionInterfacePresence-presence-update">presence-update</link>&quot;                                : Run Last / Has Details
  &quot;<link linkend="TpSvcConnectionInterfaceAvatars-avatar-retrieved">avatar-retrieved</link>&quot;                               : Run Last / Has Details
  &quot;<link linkend="TpSvcConnectionInterfaceAvatars-avatar-updated">avatar-updated</link>&quot;                                 : Run Last / Has Details
  &quot;<link linkend="TpSvcConnectionInterfaceAliasing-aliases-changed">aliases-changed</link>&quot;                                : Run Last / Has Details
  &quot;<link linkend="TpSvcConnectionInterfaceCapabilities-capabilities-changed">capabilities-changed</link>&quot;                           : Run Last / Has Details
</synopsis>
</refsect1>


<refsect1 id="telepathy-glib-svc-connection.description" role="desc">
<title role="desc.title">Description</title>
<para>
These interfaces (auto-generated from the Telepathy spec) make it easier
to export objects implementing the Telepathy Connection and its
optional interfaces, with the correct method and signal signatures,
and emit signals from those objects in a type-safe way.</para>
<para>
</para>
</refsect1>

<refsect1 id="telepathy-glib-svc-connection.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="TpSvcConnection-struct" role="struct">
<title>TpSvcConnection</title>
<indexterm zone="TpSvcConnection-struct"><primary sortas="TpSvcConnection">TpSvcConnection</primary></indexterm><programlisting>typedef struct _TpSvcConnection TpSvcConnection;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>
</para></refsect2>
<refsect2 id="TpSvcConnectionClass" role="struct">
<title>TpSvcConnectionClass</title>
<indexterm zone="TpSvcConnectionClass"><primary sortas="TpSvcConnectionClass">TpSvcConnectionClass</primary></indexterm><programlisting>typedef struct _TpSvcConnectionClass TpSvcConnectionClass;</programlisting>
<para>
The class of TpSvcConnection.</para>
<para>
</para></refsect2>
<refsect2 id="tp-svc-connection-connect-impl" role="function">
<title>tp_svc_connection_connect_impl ()</title>
<indexterm zone="tp-svc-connection-connect-impl"><primary sortas="tp_svc_connection_connect_impl">tp_svc_connection_connect_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_connect_impl)   (<link linkend="TpSvcConnection">TpSvcConnection</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
Connect on interface org.freedesktop.Telepathy.Connection.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-implement-connect" role="function">
<title>tp_svc_connection_implement_connect ()</title>
<indexterm zone="tp-svc-connection-implement-connect"><primary sortas="tp_svc_connection_implement_connect">tp_svc_connection_implement_connect</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_implement_connect (<link linkend="TpSvcConnectionClass">TpSvcConnectionClass</link> *klass,
                                                         <link linkend="tp-svc-connection-connect-impl">tp_svc_connection_connect_impl</link> impl);</programlisting>
<para>
Register an implementation for the Connect method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the Connect D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-return-from-connect" role="function">
<title>tp_svc_connection_return_from_connect ()</title>
<indexterm zone="tp-svc-connection-return-from-connect"><primary sortas="tp_svc_connection_return_from_connect">tp_svc_connection_return_from_connect</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_return_from_connect
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-disconnect-impl" role="function">
<title>tp_svc_connection_disconnect_impl ()</title>
<indexterm zone="tp-svc-connection-disconnect-impl"><primary sortas="tp_svc_connection_disconnect_impl">tp_svc_connection_disconnect_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_disconnect_impl)
                                                        (<link linkend="TpSvcConnection">TpSvcConnection</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
Disconnect on interface org.freedesktop.Telepathy.Connection.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-implement-disconnect" role="function">
<title>tp_svc_connection_implement_disconnect ()</title>
<indexterm zone="tp-svc-connection-implement-disconnect"><primary sortas="tp_svc_connection_implement_disconnect">tp_svc_connection_implement_disconnect</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_implement_disconnect
                                                        (<link linkend="TpSvcConnectionClass">TpSvcConnectionClass</link> *klass,
                                                         <link linkend="tp-svc-connection-disconnect-impl">tp_svc_connection_disconnect_impl</link> impl);</programlisting>
<para>
Register an implementation for the Disconnect method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the Disconnect D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-return-from-disconnect" role="function">
<title>tp_svc_connection_return_from_disconnect ()</title>
<indexterm zone="tp-svc-connection-return-from-disconnect"><primary sortas="tp_svc_connection_return_from_disconnect">tp_svc_connection_return_from_disconnect</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_return_from_disconnect
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-get-interfaces-impl" role="function">
<title>tp_svc_connection_get_interfaces_impl ()</title>
<indexterm zone="tp-svc-connection-get-interfaces-impl"><primary sortas="tp_svc_connection_get_interfaces_impl">tp_svc_connection_get_interfaces_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_get_interfaces_impl)
                                                        (<link linkend="TpSvcConnection">TpSvcConnection</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
GetInterfaces on interface org.freedesktop.Telepathy.Connection.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-implement-get-interfaces" role="function">
<title>tp_svc_connection_implement_get_interfaces ()</title>
<indexterm zone="tp-svc-connection-implement-get-interfaces"><primary sortas="tp_svc_connection_implement_get_interfaces">tp_svc_connection_implement_get_interfaces</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_implement_get_interfaces
                                                        (<link linkend="TpSvcConnectionClass">TpSvcConnectionClass</link> *klass,
                                                         <link linkend="tp-svc-connection-get-interfaces-impl">tp_svc_connection_get_interfaces_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetInterfaces method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the GetInterfaces D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-return-from-get-interfaces" role="function">
<title>tp_svc_connection_return_from_get_interfaces ()</title>
<indexterm zone="tp-svc-connection-return-from-get-interfaces"><primary sortas="tp_svc_connection_return_from_get_interfaces">tp_svc_connection_return_from_get_interfaces</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_return_from_get_interfaces
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="gchar">gchar</link> **out_Interfaces);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Interfaces</parameter>&#160;:</term>
<listitem><simpara> const gchar ** (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-get-protocol-impl" role="function">
<title>tp_svc_connection_get_protocol_impl ()</title>
<indexterm zone="tp-svc-connection-get-protocol-impl"><primary sortas="tp_svc_connection_get_protocol_impl">tp_svc_connection_get_protocol_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_get_protocol_impl)
                                                        (<link linkend="TpSvcConnection">TpSvcConnection</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
GetProtocol on interface org.freedesktop.Telepathy.Connection.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-implement-get-protocol" role="function">
<title>tp_svc_connection_implement_get_protocol ()</title>
<indexterm zone="tp-svc-connection-implement-get-protocol"><primary sortas="tp_svc_connection_implement_get_protocol">tp_svc_connection_implement_get_protocol</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_implement_get_protocol
                                                        (<link linkend="TpSvcConnectionClass">TpSvcConnectionClass</link> *klass,
                                                         <link linkend="tp-svc-connection-get-protocol-impl">tp_svc_connection_get_protocol_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetProtocol method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the GetProtocol D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-return-from-get-protocol" role="function">
<title>tp_svc_connection_return_from_get_protocol ()</title>
<indexterm zone="tp-svc-connection-return-from-get-protocol"><primary sortas="tp_svc_connection_return_from_get_protocol">tp_svc_connection_return_from_get_protocol</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_return_from_get_protocol
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="gchar">gchar</link> *out_Protocol);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Protocol</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-get-self-handle-impl" role="function">
<title>tp_svc_connection_get_self_handle_impl ()</title>
<indexterm zone="tp-svc-connection-get-self-handle-impl"><primary sortas="tp_svc_connection_get_self_handle_impl">tp_svc_connection_get_self_handle_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_get_self_handle_impl)
                                                        (<link linkend="TpSvcConnection">TpSvcConnection</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
GetSelfHandle on interface org.freedesktop.Telepathy.Connection.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-implement-get-self-handle" role="function">
<title>tp_svc_connection_implement_get_self_handle ()</title>
<indexterm zone="tp-svc-connection-implement-get-self-handle"><primary sortas="tp_svc_connection_implement_get_self_handle">tp_svc_connection_implement_get_self_handle</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_implement_get_self_handle
                                                        (<link linkend="TpSvcConnectionClass">TpSvcConnectionClass</link> *klass,
                                                         <link linkend="tp-svc-connection-get-self-handle-impl">tp_svc_connection_get_self_handle_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetSelfHandle method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the GetSelfHandle D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-return-from-get-self-handle" role="function">
<title>tp_svc_connection_return_from_get_self_handle ()</title>
<indexterm zone="tp-svc-connection-return-from-get-self-handle"><primary sortas="tp_svc_connection_return_from_get_self_handle">tp_svc_connection_return_from_get_self_handle</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_return_from_get_self_handle
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         <link linkend="guint">guint</link> out_Self_Handle);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Self_Handle</parameter>&#160;:</term>
<listitem><simpara> guint  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-get-status-impl" role="function">
<title>tp_svc_connection_get_status_impl ()</title>
<indexterm zone="tp-svc-connection-get-status-impl"><primary sortas="tp_svc_connection_get_status_impl">tp_svc_connection_get_status_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_get_status_impl)
                                                        (<link linkend="TpSvcConnection">TpSvcConnection</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
GetStatus on interface org.freedesktop.Telepathy.Connection.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-implement-get-status" role="function">
<title>tp_svc_connection_implement_get_status ()</title>
<indexterm zone="tp-svc-connection-implement-get-status"><primary sortas="tp_svc_connection_implement_get_status">tp_svc_connection_implement_get_status</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_implement_get_status
                                                        (<link linkend="TpSvcConnectionClass">TpSvcConnectionClass</link> *klass,
                                                         <link linkend="tp-svc-connection-get-status-impl">tp_svc_connection_get_status_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetStatus method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the GetStatus D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-return-from-get-status" role="function">
<title>tp_svc_connection_return_from_get_status ()</title>
<indexterm zone="tp-svc-connection-return-from-get-status"><primary sortas="tp_svc_connection_return_from_get_status">tp_svc_connection_return_from_get_status</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_return_from_get_status
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         <link linkend="guint">guint</link> out_Status);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Status</parameter>&#160;:</term>
<listitem><simpara> guint  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-hold-handles-impl" role="function">
<title>tp_svc_connection_hold_handles_impl ()</title>
<indexterm zone="tp-svc-connection-hold-handles-impl"><primary sortas="tp_svc_connection_hold_handles_impl">tp_svc_connection_hold_handles_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_hold_handles_impl)
                                                        (<link linkend="TpSvcConnection">TpSvcConnection</link> *self,
                                                         <link linkend="guint">guint</link> in_Handle_Type,
                                                         const <link linkend="GArray">GArray</link> *in_Handles,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
HoldHandles on interface org.freedesktop.Telepathy.Connection.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Handle_Type</parameter>&#160;:</term>
<listitem><simpara> guint  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Handles</parameter>&#160;:</term>
<listitem><simpara> const GArray * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-implement-hold-handles" role="function">
<title>tp_svc_connection_implement_hold_handles ()</title>
<indexterm zone="tp-svc-connection-implement-hold-handles"><primary sortas="tp_svc_connection_implement_hold_handles">tp_svc_connection_implement_hold_handles</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_implement_hold_handles
                                                        (<link linkend="TpSvcConnectionClass">TpSvcConnectionClass</link> *klass,
                                                         <link linkend="tp-svc-connection-hold-handles-impl">tp_svc_connection_hold_handles_impl</link> impl);</programlisting>
<para>
Register an implementation for the HoldHandles method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the HoldHandles D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-return-from-hold-handles" role="function">
<title>tp_svc_connection_return_from_hold_handles ()</title>
<indexterm zone="tp-svc-connection-return-from-hold-handles"><primary sortas="tp_svc_connection_return_from_hold_handles">tp_svc_connection_return_from_hold_handles</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_return_from_hold_handles
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-inspect-handles-impl" role="function">
<title>tp_svc_connection_inspect_handles_impl ()</title>
<indexterm zone="tp-svc-connection-inspect-handles-impl"><primary sortas="tp_svc_connection_inspect_handles_impl">tp_svc_connection_inspect_handles_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_inspect_handles_impl)
                                                        (<link linkend="TpSvcConnection">TpSvcConnection</link> *self,
                                                         <link linkend="guint">guint</link> in_Handle_Type,
                                                         const <link linkend="GArray">GArray</link> *in_Handles,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
InspectHandles on interface org.freedesktop.Telepathy.Connection.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Handle_Type</parameter>&#160;:</term>
<listitem><simpara> guint  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Handles</parameter>&#160;:</term>
<listitem><simpara> const GArray * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-implement-inspect-handles" role="function">
<title>tp_svc_connection_implement_inspect_handles ()</title>
<indexterm zone="tp-svc-connection-implement-inspect-handles"><primary sortas="tp_svc_connection_implement_inspect_handles">tp_svc_connection_implement_inspect_handles</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_implement_inspect_handles
                                                        (<link linkend="TpSvcConnectionClass">TpSvcConnectionClass</link> *klass,
                                                         <link linkend="tp-svc-connection-inspect-handles-impl">tp_svc_connection_inspect_handles_impl</link> impl);</programlisting>
<para>
Register an implementation for the InspectHandles method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the InspectHandles D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-return-from-inspect-handles" role="function">
<title>tp_svc_connection_return_from_inspect_handles ()</title>
<indexterm zone="tp-svc-connection-return-from-inspect-handles"><primary sortas="tp_svc_connection_return_from_inspect_handles">tp_svc_connection_return_from_inspect_handles</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_return_from_inspect_handles
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="gchar">gchar</link> **out_Identifiers);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Identifiers</parameter>&#160;:</term>
<listitem><simpara> const gchar ** (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-list-channels-impl" role="function">
<title>tp_svc_connection_list_channels_impl ()</title>
<indexterm zone="tp-svc-connection-list-channels-impl"><primary sortas="tp_svc_connection_list_channels_impl">tp_svc_connection_list_channels_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_list_channels_impl)
                                                        (<link linkend="TpSvcConnection">TpSvcConnection</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
ListChannels on interface org.freedesktop.Telepathy.Connection.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-implement-list-channels" role="function">
<title>tp_svc_connection_implement_list_channels ()</title>
<indexterm zone="tp-svc-connection-implement-list-channels"><primary sortas="tp_svc_connection_implement_list_channels">tp_svc_connection_implement_list_channels</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_implement_list_channels
                                                        (<link linkend="TpSvcConnectionClass">TpSvcConnectionClass</link> *klass,
                                                         <link linkend="tp-svc-connection-list-channels-impl">tp_svc_connection_list_channels_impl</link> impl);</programlisting>
<para>
Register an implementation for the ListChannels method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the ListChannels D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-return-from-list-channels" role="function">
<title>tp_svc_connection_return_from_list_channels ()</title>
<indexterm zone="tp-svc-connection-return-from-list-channels"><primary sortas="tp_svc_connection_return_from_list_channels">tp_svc_connection_return_from_list_channels</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_return_from_list_channels
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *out_Channel_Info);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Channel_Info</parameter>&#160;:</term>
<listitem><simpara> const GPtrArray * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-release-handles-impl" role="function">
<title>tp_svc_connection_release_handles_impl ()</title>
<indexterm zone="tp-svc-connection-release-handles-impl"><primary sortas="tp_svc_connection_release_handles_impl">tp_svc_connection_release_handles_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_release_handles_impl)
                                                        (<link linkend="TpSvcConnection">TpSvcConnection</link> *self,
                                                         <link linkend="guint">guint</link> in_Handle_Type,
                                                         const <link linkend="GArray">GArray</link> *in_Handles,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
ReleaseHandles on interface org.freedesktop.Telepathy.Connection.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Handle_Type</parameter>&#160;:</term>
<listitem><simpara> guint  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Handles</parameter>&#160;:</term>
<listitem><simpara> const GArray * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-implement-release-handles" role="function">
<title>tp_svc_connection_implement_release_handles ()</title>
<indexterm zone="tp-svc-connection-implement-release-handles"><primary sortas="tp_svc_connection_implement_release_handles">tp_svc_connection_implement_release_handles</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_implement_release_handles
                                                        (<link linkend="TpSvcConnectionClass">TpSvcConnectionClass</link> *klass,
                                                         <link linkend="tp-svc-connection-release-handles-impl">tp_svc_connection_release_handles_impl</link> impl);</programlisting>
<para>
Register an implementation for the ReleaseHandles method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the ReleaseHandles D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-return-from-release-handles" role="function">
<title>tp_svc_connection_return_from_release_handles ()</title>
<indexterm zone="tp-svc-connection-return-from-release-handles"><primary sortas="tp_svc_connection_return_from_release_handles">tp_svc_connection_return_from_release_handles</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_return_from_release_handles
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-request-channel-impl" role="function">
<title>tp_svc_connection_request_channel_impl ()</title>
<indexterm zone="tp-svc-connection-request-channel-impl"><primary sortas="tp_svc_connection_request_channel_impl">tp_svc_connection_request_channel_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_request_channel_impl)
                                                        (<link linkend="TpSvcConnection">TpSvcConnection</link> *self,
                                                         const <link linkend="gchar">gchar</link> *in_Type,
                                                         <link linkend="guint">guint</link> in_Handle_Type,
                                                         <link linkend="guint">guint</link> in_Handle,
                                                         <link linkend="gboolean">gboolean</link> in_Suppress_Handler,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
RequestChannel on interface org.freedesktop.Telepathy.Connection.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Type</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Handle_Type</parameter>&#160;:</term>
<listitem><simpara> guint  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Handle</parameter>&#160;:</term>
<listitem><simpara> guint  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Suppress_Handler</parameter>&#160;:</term>
<listitem><simpara> gboolean  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-implement-request-channel" role="function">
<title>tp_svc_connection_implement_request_channel ()</title>
<indexterm zone="tp-svc-connection-implement-request-channel"><primary sortas="tp_svc_connection_implement_request_channel">tp_svc_connection_implement_request_channel</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_implement_request_channel
                                                        (<link linkend="TpSvcConnectionClass">TpSvcConnectionClass</link> *klass,
                                                         <link linkend="tp-svc-connection-request-channel-impl">tp_svc_connection_request_channel_impl</link> impl);</programlisting>
<para>
Register an implementation for the RequestChannel method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the RequestChannel D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-return-from-request-channel" role="function">
<title>tp_svc_connection_return_from_request_channel ()</title>
<indexterm zone="tp-svc-connection-return-from-request-channel"><primary sortas="tp_svc_connection_return_from_request_channel">tp_svc_connection_return_from_request_channel</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_return_from_request_channel
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="gchar">gchar</link> *out_Object_Path);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Object_Path</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-request-handles-impl" role="function">
<title>tp_svc_connection_request_handles_impl ()</title>
<indexterm zone="tp-svc-connection-request-handles-impl"><primary sortas="tp_svc_connection_request_handles_impl">tp_svc_connection_request_handles_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_request_handles_impl)
                                                        (<link linkend="TpSvcConnection">TpSvcConnection</link> *self,
                                                         <link linkend="guint">guint</link> in_Handle_Type,
                                                         const <link linkend="gchar">gchar</link> **in_Names,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
RequestHandles on interface org.freedesktop.Telepathy.Connection.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Handle_Type</parameter>&#160;:</term>
<listitem><simpara> guint  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Names</parameter>&#160;:</term>
<listitem><simpara> const gchar ** (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-implement-request-handles" role="function">
<title>tp_svc_connection_implement_request_handles ()</title>
<indexterm zone="tp-svc-connection-implement-request-handles"><primary sortas="tp_svc_connection_implement_request_handles">tp_svc_connection_implement_request_handles</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_implement_request_handles
                                                        (<link linkend="TpSvcConnectionClass">TpSvcConnectionClass</link> *klass,
                                                         <link linkend="tp-svc-connection-request-handles-impl">tp_svc_connection_request_handles_impl</link> impl);</programlisting>
<para>
Register an implementation for the RequestHandles method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the RequestHandles D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-return-from-request-handles" role="function">
<title>tp_svc_connection_return_from_request_handles ()</title>
<indexterm zone="tp-svc-connection-return-from-request-handles"><primary sortas="tp_svc_connection_return_from_request_handles">tp_svc_connection_return_from_request_handles</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_return_from_request_handles
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="GArray">GArray</link> *out_Handles);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Handles</parameter>&#160;:</term>
<listitem><simpara> const GArray * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-emit-new-channel" role="function">
<title>tp_svc_connection_emit_new_channel ()</title>
<indexterm zone="tp-svc-connection-emit-new-channel"><primary sortas="tp_svc_connection_emit_new_channel">tp_svc_connection_emit_new_channel</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_emit_new_channel  (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="gchar">gchar</link> *arg_Object_Path,
                                                         const <link linkend="gchar">gchar</link> *arg_Channel_Type,
                                                         <link linkend="guint">guint</link> arg_Handle_Type,
                                                         <link linkend="guint">guint</link> arg_Handle,
                                                         <link linkend="gboolean">gboolean</link> arg_Suppress_Handler);</programlisting>
<para>
Type-safe wrapper around g_signal_emit to emit the
NewChannel signal on interface org.freedesktop.Telepathy.Connection.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Object_Path</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Channel_Type</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Handle_Type</parameter>&#160;:</term>
<listitem><simpara> guint  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Handle</parameter>&#160;:</term>
<listitem><simpara> guint  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Suppress_Handler</parameter>&#160;:</term>
<listitem><simpara> gboolean  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-emit-self-handle-changed" role="function">
<title>tp_svc_connection_emit_self_handle_changed ()</title>
<indexterm zone="tp-svc-connection-emit-self-handle-changed"><primary sortas="tp_svc_connection_emit_self_handle_changed">tp_svc_connection_emit_self_handle_changed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_emit_self_handle_changed
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         <link linkend="guint">guint</link> arg_Self_Handle);</programlisting>
<para>
Type-safe wrapper around g_signal_emit to emit the
SelfHandleChanged signal on interface org.freedesktop.Telepathy.Connection.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Self_Handle</parameter>&#160;:</term>
<listitem><simpara> guint  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-emit-status-changed" role="function">
<title>tp_svc_connection_emit_status_changed ()</title>
<indexterm zone="tp-svc-connection-emit-status-changed"><primary sortas="tp_svc_connection_emit_status_changed">tp_svc_connection_emit_status_changed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_emit_status_changed
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         <link linkend="guint">guint</link> arg_Status,
                                                         <link linkend="guint">guint</link> arg_Reason);</programlisting>
<para>
Type-safe wrapper around g_signal_emit to emit the
StatusChanged signal on interface org.freedesktop.Telepathy.Connection.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Status</parameter>&#160;:</term>
<listitem><simpara> guint  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Reason</parameter>&#160;:</term>
<listitem><simpara> guint  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-emit-connection-error" role="function">
<title>tp_svc_connection_emit_connection_error ()</title>
<indexterm zone="tp-svc-connection-emit-connection-error"><primary sortas="tp_svc_connection_emit_connection_error">tp_svc_connection_emit_connection_error</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_emit_connection_error
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="gchar">gchar</link> *arg_Error,
                                                         <link linkend="GHashTable">GHashTable</link> *arg_Details);</programlisting>
<para>
Type-safe wrapper around g_signal_emit to emit the
ConnectionError signal on interface org.freedesktop.Telepathy.Connection.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Error</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Details</parameter>&#160;:</term>
<listitem><simpara> GHashTable * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="TpSvcConnectionInterfaceContacts-struct" role="struct">
<title>TpSvcConnectionInterfaceContacts</title>
<indexterm zone="TpSvcConnectionInterfaceContacts-struct"><primary sortas="TpSvcConnectionInterfaceContacts">TpSvcConnectionInterfaceContacts</primary></indexterm><programlisting>typedef struct _TpSvcConnectionInterfaceContacts TpSvcConnectionInterfaceContacts;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>
</para></refsect2>
<refsect2 id="TpSvcConnectionInterfaceContactsClass" role="struct">
<title>TpSvcConnectionInterfaceContactsClass</title>
<indexterm zone="TpSvcConnectionInterfaceContactsClass"><primary sortas="TpSvcConnectionInterfaceContactsClass">TpSvcConnectionInterfaceContactsClass</primary></indexterm><programlisting>typedef struct _TpSvcConnectionInterfaceContactsClass TpSvcConnectionInterfaceContactsClass;</programlisting>
<para>
The class of TpSvcConnectionInterfaceContacts.</para>
<para>
</para></refsect2>
<refsect2 id="tp-svc-connection-interface-contacts-get-contact-attributes-impl" role="function">
<title>tp_svc_connection_interface_contacts_get_contact_attributes_impl ()</title>
<indexterm zone="tp-svc-connection-interface-contacts-get-contact-attributes-impl"><primary sortas="tp_svc_connection_interface_contacts_get_contact_attributes_impl">tp_svc_connection_interface_contacts_get_contact_attributes_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_interface_contacts_get_contact_attributes_impl)
                                                        (<link linkend="TpSvcConnectionInterfaceContacts">TpSvcConnectionInterfaceContacts</link> *self,
                                                         const <link linkend="GArray">GArray</link> *in_Handles,
                                                         const <link linkend="gchar">gchar</link> **in_Interfaces,
                                                         <link linkend="gboolean">gboolean</link> in_Hold,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
GetContactAttributes on interface org.freedesktop.Telepathy.Connection.Interface.Contacts.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Handles</parameter>&#160;:</term>
<listitem><simpara> const GArray * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Interfaces</parameter>&#160;:</term>
<listitem><simpara> const gchar ** (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Hold</parameter>&#160;:</term>
<listitem><simpara> gboolean  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-contacts-implement-get-contact-attributes" role="function">
<title>tp_svc_connection_interface_contacts_implement_get_contact_attributes ()</title>
<indexterm zone="tp-svc-connection-interface-contacts-implement-get-contact-attributes"><primary sortas="tp_svc_connection_interface_contacts_implement_get_contact_attributes">tp_svc_connection_interface_contacts_implement_get_contact_attributes</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_contacts_implement_get_contact_attributes
                                                        (<link linkend="TpSvcConnectionInterfaceContactsClass">TpSvcConnectionInterfaceContactsClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-contacts-get-contact-attributes-impl">tp_svc_connection_interface_contacts_get_contact_attributes_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetContactAttributes method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the GetContactAttributes D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-contacts-return-from-get-contact-attributes" role="function">
<title>tp_svc_connection_interface_contacts_return_from_get_contact_attributes ()</title>
<indexterm zone="tp-svc-connection-interface-contacts-return-from-get-contact-attributes"><primary sortas="tp_svc_connection_interface_contacts_return_from_get_contact_attributes">tp_svc_connection_interface_contacts_return_from_get_contact_attributes</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_contacts_return_from_get_contact_attributes
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         <link linkend="GHashTable">GHashTable</link> *out_Attributes);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Attributes</parameter>&#160;:</term>
<listitem><simpara> GHashTable * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="TpSvcConnectionInterfaceRequests-struct" role="struct">
<title>TpSvcConnectionInterfaceRequests</title>
<indexterm zone="TpSvcConnectionInterfaceRequests-struct"><primary sortas="TpSvcConnectionInterfaceRequests">TpSvcConnectionInterfaceRequests</primary></indexterm><programlisting>typedef struct _TpSvcConnectionInterfaceRequests TpSvcConnectionInterfaceRequests;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>
</para></refsect2>
<refsect2 id="TpSvcConnectionInterfaceRequestsClass" role="struct">
<title>TpSvcConnectionInterfaceRequestsClass</title>
<indexterm zone="TpSvcConnectionInterfaceRequestsClass"><primary sortas="TpSvcConnectionInterfaceRequestsClass">TpSvcConnectionInterfaceRequestsClass</primary></indexterm><programlisting>typedef struct _TpSvcConnectionInterfaceRequestsClass TpSvcConnectionInterfaceRequestsClass;</programlisting>
<para>
The class of TpSvcConnectionInterfaceRequests.</para>
<para>
</para></refsect2>
<refsect2 id="tp-svc-connection-interface-requests-create-channel-impl" role="function">
<title>tp_svc_connection_interface_requests_create_channel_impl ()</title>
<indexterm zone="tp-svc-connection-interface-requests-create-channel-impl"><primary sortas="tp_svc_connection_interface_requests_create_channel_impl">tp_svc_connection_interface_requests_create_channel_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_interface_requests_create_channel_impl)
                                                        (<link linkend="TpSvcConnectionInterfaceRequests">TpSvcConnectionInterfaceRequests</link> *self,
                                                         <link linkend="GHashTable">GHashTable</link> *in_Request,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
CreateChannel on interface org.freedesktop.Telepathy.Connection.Interface.Requests.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Request</parameter>&#160;:</term>
<listitem><simpara> GHashTable * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-requests-emit-channel-closed" role="function">
<title>tp_svc_connection_interface_requests_emit_channel_closed ()</title>
<indexterm zone="tp-svc-connection-interface-requests-emit-channel-closed"><primary sortas="tp_svc_connection_interface_requests_emit_channel_closed">tp_svc_connection_interface_requests_emit_channel_closed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_requests_emit_channel_closed
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="gchar">gchar</link> *arg_Removed);</programlisting>
<para>
Type-safe wrapper around g_signal_emit to emit the
ChannelClosed signal on interface org.freedesktop.Telepathy.Connection.Interface.Requests.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Removed</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-requests-emit-new-channels" role="function">
<title>tp_svc_connection_interface_requests_emit_new_channels ()</title>
<indexterm zone="tp-svc-connection-interface-requests-emit-new-channels"><primary sortas="tp_svc_connection_interface_requests_emit_new_channels">tp_svc_connection_interface_requests_emit_new_channels</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_requests_emit_new_channels
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *arg_Channels);</programlisting>
<para>
Type-safe wrapper around g_signal_emit to emit the
NewChannels signal on interface org.freedesktop.Telepathy.Connection.Interface.Requests.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Channels</parameter>&#160;:</term>
<listitem><simpara> const GPtrArray * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-requests-ensure-channel-impl" role="function">
<title>tp_svc_connection_interface_requests_ensure_channel_impl ()</title>
<indexterm zone="tp-svc-connection-interface-requests-ensure-channel-impl"><primary sortas="tp_svc_connection_interface_requests_ensure_channel_impl">tp_svc_connection_interface_requests_ensure_channel_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_interface_requests_ensure_channel_impl)
                                                        (<link linkend="TpSvcConnectionInterfaceRequests">TpSvcConnectionInterfaceRequests</link> *self,
                                                         <link linkend="GHashTable">GHashTable</link> *in_Request,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
EnsureChannel on interface org.freedesktop.Telepathy.Connection.Interface.Requests.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Request</parameter>&#160;:</term>
<listitem><simpara> GHashTable * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-requests-implement-create-channel" role="function">
<title>tp_svc_connection_interface_requests_implement_create_channel ()</title>
<indexterm zone="tp-svc-connection-interface-requests-implement-create-channel"><primary sortas="tp_svc_connection_interface_requests_implement_create_channel">tp_svc_connection_interface_requests_implement_create_channel</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_requests_implement_create_channel
                                                        (<link linkend="TpSvcConnectionInterfaceRequestsClass">TpSvcConnectionInterfaceRequestsClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-requests-create-channel-impl">tp_svc_connection_interface_requests_create_channel_impl</link> impl);</programlisting>
<para>
Register an implementation for the CreateChannel method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the CreateChannel D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-requests-implement-ensure-channel" role="function">
<title>tp_svc_connection_interface_requests_implement_ensure_channel ()</title>
<indexterm zone="tp-svc-connection-interface-requests-implement-ensure-channel"><primary sortas="tp_svc_connection_interface_requests_implement_ensure_channel">tp_svc_connection_interface_requests_implement_ensure_channel</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_requests_implement_ensure_channel
                                                        (<link linkend="TpSvcConnectionInterfaceRequestsClass">TpSvcConnectionInterfaceRequestsClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-requests-ensure-channel-impl">tp_svc_connection_interface_requests_ensure_channel_impl</link> impl);</programlisting>
<para>
Register an implementation for the EnsureChannel method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the EnsureChannel D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-requests-return-from-create-channel" role="function">
<title>tp_svc_connection_interface_requests_return_from_create_channel ()</title>
<indexterm zone="tp-svc-connection-interface-requests-return-from-create-channel"><primary sortas="tp_svc_connection_interface_requests_return_from_create_channel">tp_svc_connection_interface_requests_return_from_create_channel</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_requests_return_from_create_channel
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="gchar">gchar</link> *out_Channel,
                                                         <link linkend="GHashTable">GHashTable</link> *out_Properties);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Channel</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Properties</parameter>&#160;:</term>
<listitem><simpara> GHashTable * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-requests-return-from-ensure-channel" role="function">
<title>tp_svc_connection_interface_requests_return_from_ensure_channel ()</title>
<indexterm zone="tp-svc-connection-interface-requests-return-from-ensure-channel"><primary sortas="tp_svc_connection_interface_requests_return_from_ensure_channel">tp_svc_connection_interface_requests_return_from_ensure_channel</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_requests_return_from_ensure_channel
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         <link linkend="gboolean">gboolean</link> out_Yours,
                                                         const <link linkend="gchar">gchar</link> *out_Channel,
                                                         <link linkend="GHashTable">GHashTable</link> *out_Properties);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Yours</parameter>&#160;:</term>
<listitem><simpara> gboolean  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Channel</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Properties</parameter>&#160;:</term>
<listitem><simpara> GHashTable * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="TpSvcConnectionInterfaceSimplePresence-struct" role="struct">
<title>TpSvcConnectionInterfaceSimplePresence</title>
<indexterm zone="TpSvcConnectionInterfaceSimplePresence-struct"><primary sortas="TpSvcConnectionInterfaceSimplePresence">TpSvcConnectionInterfaceSimplePresence</primary></indexterm><programlisting>typedef struct _TpSvcConnectionInterfaceSimplePresence TpSvcConnectionInterfaceSimplePresence;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>
</para></refsect2>
<refsect2 id="TpSvcConnectionInterfaceSimplePresenceClass" role="struct">
<title>TpSvcConnectionInterfaceSimplePresenceClass</title>
<indexterm zone="TpSvcConnectionInterfaceSimplePresenceClass"><primary sortas="TpSvcConnectionInterfaceSimplePresenceClass">TpSvcConnectionInterfaceSimplePresenceClass</primary></indexterm><programlisting>typedef struct _TpSvcConnectionInterfaceSimplePresenceClass TpSvcConnectionInterfaceSimplePresenceClass;</programlisting>
<para>
The class of TpSvcConnectionInterfaceSimplePresence.</para>
<para>
</para></refsect2>
<refsect2 id="tp-svc-connection-interface-simple-presence-emit-presences-changed" role="function">
<title>tp_svc_connection_interface_simple_presence_emit_presences_changed ()</title>
<indexterm zone="tp-svc-connection-interface-simple-presence-emit-presences-changed"><primary sortas="tp_svc_connection_interface_simple_presence_emit_presences_changed">tp_svc_connection_interface_simple_presence_emit_presences_changed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_simple_presence_emit_presences_changed
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         <link linkend="GHashTable">GHashTable</link> *arg_Presence);</programlisting>
<para>
Type-safe wrapper around g_signal_emit to emit the
PresencesChanged signal on interface org.freedesktop.Telepathy.Connection.Interface.SimplePresence.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Presence</parameter>&#160;:</term>
<listitem><simpara> GHashTable * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-simple-presence-get-presences-impl" role="function">
<title>tp_svc_connection_interface_simple_presence_get_presences_impl ()</title>
<indexterm zone="tp-svc-connection-interface-simple-presence-get-presences-impl"><primary sortas="tp_svc_connection_interface_simple_presence_get_presences_impl">tp_svc_connection_interface_simple_presence_get_presences_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_interface_simple_presence_get_presences_impl)
                                                        (<link linkend="TpSvcConnectionInterfaceSimplePresence">TpSvcConnectionInterfaceSimplePresence</link> *self,
                                                         const <link linkend="GArray">GArray</link> *in_Contacts,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
GetPresences on interface org.freedesktop.Telepathy.Connection.Interface.SimplePresence.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Contacts</parameter>&#160;:</term>
<listitem><simpara> const GArray * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-simple-presence-implement-get-presences" role="function">
<title>tp_svc_connection_interface_simple_presence_implement_get_presences ()</title>
<indexterm zone="tp-svc-connection-interface-simple-presence-implement-get-presences"><primary sortas="tp_svc_connection_interface_simple_presence_implement_get_presences">tp_svc_connection_interface_simple_presence_implement_get_presences</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_simple_presence_implement_get_presences
                                                        (<link linkend="TpSvcConnectionInterfaceSimplePresenceClass">TpSvcConnectionInterfaceSimplePresenceClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-simple-presence-get-presences-impl">tp_svc_connection_interface_simple_presence_get_presences_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetPresences method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the GetPresences D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-simple-presence-implement-set-presence" role="function">
<title>tp_svc_connection_interface_simple_presence_implement_set_presence ()</title>
<indexterm zone="tp-svc-connection-interface-simple-presence-implement-set-presence"><primary sortas="tp_svc_connection_interface_simple_presence_implement_set_presence">tp_svc_connection_interface_simple_presence_implement_set_presence</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_simple_presence_implement_set_presence
                                                        (<link linkend="TpSvcConnectionInterfaceSimplePresenceClass">TpSvcConnectionInterfaceSimplePresenceClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-simple-presence-set-presence-impl">tp_svc_connection_interface_simple_presence_set_presence_impl</link> impl);</programlisting>
<para>
Register an implementation for the SetPresence method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the SetPresence D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-simple-presence-return-from-get-presences" role="function">
<title>tp_svc_connection_interface_simple_presence_return_from_get_presences ()</title>
<indexterm zone="tp-svc-connection-interface-simple-presence-return-from-get-presences"><primary sortas="tp_svc_connection_interface_simple_presence_return_from_get_presences">tp_svc_connection_interface_simple_presence_return_from_get_presences</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_simple_presence_return_from_get_presences
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         <link linkend="GHashTable">GHashTable</link> *out_Presence);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Presence</parameter>&#160;:</term>
<listitem><simpara> GHashTable * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-simple-presence-return-from-set-presence" role="function">
<title>tp_svc_connection_interface_simple_presence_return_from_set_presence ()</title>
<indexterm zone="tp-svc-connection-interface-simple-presence-return-from-set-presence"><primary sortas="tp_svc_connection_interface_simple_presence_return_from_set_presence">tp_svc_connection_interface_simple_presence_return_from_set_presence</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_simple_presence_return_from_set_presence
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-simple-presence-set-presence-impl" role="function">
<title>tp_svc_connection_interface_simple_presence_set_presence_impl ()</title>
<indexterm zone="tp-svc-connection-interface-simple-presence-set-presence-impl"><primary sortas="tp_svc_connection_interface_simple_presence_set_presence_impl">tp_svc_connection_interface_simple_presence_set_presence_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_interface_simple_presence_set_presence_impl)
                                                        (<link linkend="TpSvcConnectionInterfaceSimplePresence">TpSvcConnectionInterfaceSimplePresence</link> *self,
                                                         const <link linkend="gchar">gchar</link> *in_Status,
                                                         const <link linkend="gchar">gchar</link> *in_Status_Message,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
SetPresence on interface org.freedesktop.Telepathy.Connection.Interface.SimplePresence.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Status</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Status_Message</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="TpSvcConnectionInterfacePresence-struct" role="struct">
<title>TpSvcConnectionInterfacePresence</title>
<indexterm zone="TpSvcConnectionInterfacePresence-struct"><primary sortas="TpSvcConnectionInterfacePresence">TpSvcConnectionInterfacePresence</primary></indexterm><programlisting>typedef struct _TpSvcConnectionInterfacePresence TpSvcConnectionInterfacePresence;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>
</para></refsect2>
<refsect2 id="TpSvcConnectionInterfacePresenceClass" role="struct">
<title>TpSvcConnectionInterfacePresenceClass</title>
<indexterm zone="TpSvcConnectionInterfacePresenceClass"><primary sortas="TpSvcConnectionInterfacePresenceClass">TpSvcConnectionInterfacePresenceClass</primary></indexterm><programlisting>typedef struct _TpSvcConnectionInterfacePresenceClass TpSvcConnectionInterfacePresenceClass;</programlisting>
<para>
The class of TpSvcConnectionInterfacePresence.</para>
<para>
</para></refsect2>
<refsect2 id="tp-svc-connection-interface-presence-add-status-impl" role="function">
<title>tp_svc_connection_interface_presence_add_status_impl ()</title>
<indexterm zone="tp-svc-connection-interface-presence-add-status-impl"><primary sortas="tp_svc_connection_interface_presence_add_status_impl">tp_svc_connection_interface_presence_add_status_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_interface_presence_add_status_impl)
                                                        (<link linkend="TpSvcConnectionInterfacePresence">TpSvcConnectionInterfacePresence</link> *self,
                                                         const <link linkend="gchar">gchar</link> *in_Status,
                                                         <link linkend="GHashTable">GHashTable</link> *in_Parameters,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
AddStatus on interface org.freedesktop.Telepathy.Connection.Interface.Presence.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Status</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Parameters</parameter>&#160;:</term>
<listitem><simpara> GHashTable * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-presence-implement-add-status" role="function">
<title>tp_svc_connection_interface_presence_implement_add_status ()</title>
<indexterm zone="tp-svc-connection-interface-presence-implement-add-status"><primary sortas="tp_svc_connection_interface_presence_implement_add_status">tp_svc_connection_interface_presence_implement_add_status</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_presence_implement_add_status
                                                        (<link linkend="TpSvcConnectionInterfacePresenceClass">TpSvcConnectionInterfacePresenceClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-presence-add-status-impl">tp_svc_connection_interface_presence_add_status_impl</link> impl);</programlisting>
<para>
Register an implementation for the AddStatus method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the AddStatus D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-presence-return-from-add-status" role="function">
<title>tp_svc_connection_interface_presence_return_from_add_status ()</title>
<indexterm zone="tp-svc-connection-interface-presence-return-from-add-status"><primary sortas="tp_svc_connection_interface_presence_return_from_add_status">tp_svc_connection_interface_presence_return_from_add_status</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_presence_return_from_add_status
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-presence-clear-status-impl" role="function">
<title>tp_svc_connection_interface_presence_clear_status_impl ()</title>
<indexterm zone="tp-svc-connection-interface-presence-clear-status-impl"><primary sortas="tp_svc_connection_interface_presence_clear_status_impl">tp_svc_connection_interface_presence_clear_status_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_interface_presence_clear_status_impl)
                                                        (<link linkend="TpSvcConnectionInterfacePresence">TpSvcConnectionInterfacePresence</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
ClearStatus on interface org.freedesktop.Telepathy.Connection.Interface.Presence.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-presence-implement-clear-status" role="function">
<title>tp_svc_connection_interface_presence_implement_clear_status ()</title>
<indexterm zone="tp-svc-connection-interface-presence-implement-clear-status"><primary sortas="tp_svc_connection_interface_presence_implement_clear_status">tp_svc_connection_interface_presence_implement_clear_status</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_presence_implement_clear_status
                                                        (<link linkend="TpSvcConnectionInterfacePresenceClass">TpSvcConnectionInterfacePresenceClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-presence-clear-status-impl">tp_svc_connection_interface_presence_clear_status_impl</link> impl);</programlisting>
<para>
Register an implementation for the ClearStatus method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the ClearStatus D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-presence-return-from-clear-status" role="function">
<title>tp_svc_connection_interface_presence_return_from_clear_status ()</title>
<indexterm zone="tp-svc-connection-interface-presence-return-from-clear-status"><primary sortas="tp_svc_connection_interface_presence_return_from_clear_status">tp_svc_connection_interface_presence_return_from_clear_status</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_presence_return_from_clear_status
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-presence-get-presence-impl" role="function">
<title>tp_svc_connection_interface_presence_get_presence_impl ()</title>
<indexterm zone="tp-svc-connection-interface-presence-get-presence-impl"><primary sortas="tp_svc_connection_interface_presence_get_presence_impl">tp_svc_connection_interface_presence_get_presence_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_interface_presence_get_presence_impl)
                                                        (<link linkend="TpSvcConnectionInterfacePresence">TpSvcConnectionInterfacePresence</link> *self,
                                                         const <link linkend="GArray">GArray</link> *in_Contacts,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
GetPresence on interface org.freedesktop.Telepathy.Connection.Interface.Presence.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Contacts</parameter>&#160;:</term>
<listitem><simpara> const GArray * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-presence-implement-get-presence" role="function">
<title>tp_svc_connection_interface_presence_implement_get_presence ()</title>
<indexterm zone="tp-svc-connection-interface-presence-implement-get-presence"><primary sortas="tp_svc_connection_interface_presence_implement_get_presence">tp_svc_connection_interface_presence_implement_get_presence</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_presence_implement_get_presence
                                                        (<link linkend="TpSvcConnectionInterfacePresenceClass">TpSvcConnectionInterfacePresenceClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-presence-get-presence-impl">tp_svc_connection_interface_presence_get_presence_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetPresence method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the GetPresence D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-presence-return-from-get-presence" role="function">
<title>tp_svc_connection_interface_presence_return_from_get_presence ()</title>
<indexterm zone="tp-svc-connection-interface-presence-return-from-get-presence"><primary sortas="tp_svc_connection_interface_presence_return_from_get_presence">tp_svc_connection_interface_presence_return_from_get_presence</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_presence_return_from_get_presence
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         <link linkend="GHashTable">GHashTable</link> *out_Presence);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Presence</parameter>&#160;:</term>
<listitem><simpara> GHashTable * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-presence-get-statuses-impl" role="function">
<title>tp_svc_connection_interface_presence_get_statuses_impl ()</title>
<indexterm zone="tp-svc-connection-interface-presence-get-statuses-impl"><primary sortas="tp_svc_connection_interface_presence_get_statuses_impl">tp_svc_connection_interface_presence_get_statuses_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_interface_presence_get_statuses_impl)
                                                        (<link linkend="TpSvcConnectionInterfacePresence">TpSvcConnectionInterfacePresence</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
GetStatuses on interface org.freedesktop.Telepathy.Connection.Interface.Presence.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-presence-implement-get-statuses" role="function">
<title>tp_svc_connection_interface_presence_implement_get_statuses ()</title>
<indexterm zone="tp-svc-connection-interface-presence-implement-get-statuses"><primary sortas="tp_svc_connection_interface_presence_implement_get_statuses">tp_svc_connection_interface_presence_implement_get_statuses</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_presence_implement_get_statuses
                                                        (<link linkend="TpSvcConnectionInterfacePresenceClass">TpSvcConnectionInterfacePresenceClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-presence-get-statuses-impl">tp_svc_connection_interface_presence_get_statuses_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetStatuses method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the GetStatuses D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-presence-return-from-get-statuses" role="function">
<title>tp_svc_connection_interface_presence_return_from_get_statuses ()</title>
<indexterm zone="tp-svc-connection-interface-presence-return-from-get-statuses"><primary sortas="tp_svc_connection_interface_presence_return_from_get_statuses">tp_svc_connection_interface_presence_return_from_get_statuses</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_presence_return_from_get_statuses
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         <link linkend="GHashTable">GHashTable</link> *out_Available_Statuses);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Available_Statuses</parameter>&#160;:</term>
<listitem><simpara> GHashTable * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-presence-remove-status-impl" role="function">
<title>tp_svc_connection_interface_presence_remove_status_impl ()</title>
<indexterm zone="tp-svc-connection-interface-presence-remove-status-impl"><primary sortas="tp_svc_connection_interface_presence_remove_status_impl">tp_svc_connection_interface_presence_remove_status_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_interface_presence_remove_status_impl)
                                                        (<link linkend="TpSvcConnectionInterfacePresence">TpSvcConnectionInterfacePresence</link> *self,
                                                         const <link linkend="gchar">gchar</link> *in_Status,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
RemoveStatus on interface org.freedesktop.Telepathy.Connection.Interface.Presence.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Status</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-presence-implement-remove-status" role="function">
<title>tp_svc_connection_interface_presence_implement_remove_status ()</title>
<indexterm zone="tp-svc-connection-interface-presence-implement-remove-status"><primary sortas="tp_svc_connection_interface_presence_implement_remove_status">tp_svc_connection_interface_presence_implement_remove_status</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_presence_implement_remove_status
                                                        (<link linkend="TpSvcConnectionInterfacePresenceClass">TpSvcConnectionInterfacePresenceClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-presence-remove-status-impl">tp_svc_connection_interface_presence_remove_status_impl</link> impl);</programlisting>
<para>
Register an implementation for the RemoveStatus method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the RemoveStatus D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-presence-return-from-remove-status" role="function">
<title>tp_svc_connection_interface_presence_return_from_remove_status ()</title>
<indexterm zone="tp-svc-connection-interface-presence-return-from-remove-status"><primary sortas="tp_svc_connection_interface_presence_return_from_remove_status">tp_svc_connection_interface_presence_return_from_remove_status</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_presence_return_from_remove_status
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-presence-request-presence-impl" role="function">
<title>tp_svc_connection_interface_presence_request_presence_impl ()</title>
<indexterm zone="tp-svc-connection-interface-presence-request-presence-impl"><primary sortas="tp_svc_connection_interface_presence_request_presence_impl">tp_svc_connection_interface_presence_request_presence_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_interface_presence_request_presence_impl)
                                                        (<link linkend="TpSvcConnectionInterfacePresence">TpSvcConnectionInterfacePresence</link> *self,
                                                         const <link linkend="GArray">GArray</link> *in_Contacts,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
RequestPresence on interface org.freedesktop.Telepathy.Connection.Interface.Presence.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Contacts</parameter>&#160;:</term>
<listitem><simpara> const GArray * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-presence-implement-request-presence" role="function">
<title>tp_svc_connection_interface_presence_implement_request_presence ()</title>
<indexterm zone="tp-svc-connection-interface-presence-implement-request-presence"><primary sortas="tp_svc_connection_interface_presence_implement_request_presence">tp_svc_connection_interface_presence_implement_request_presence</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_presence_implement_request_presence
                                                        (<link linkend="TpSvcConnectionInterfacePresenceClass">TpSvcConnectionInterfacePresenceClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-presence-request-presence-impl">tp_svc_connection_interface_presence_request_presence_impl</link> impl);</programlisting>
<para>
Register an implementation for the RequestPresence method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the RequestPresence D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-presence-return-from-request-presence" role="function">
<title>tp_svc_connection_interface_presence_return_from_request_presence ()</title>
<indexterm zone="tp-svc-connection-interface-presence-return-from-request-presence"><primary sortas="tp_svc_connection_interface_presence_return_from_request_presence">tp_svc_connection_interface_presence_return_from_request_presence</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_presence_return_from_request_presence
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-presence-set-last-activity-time-impl" role="function">
<title>tp_svc_connection_interface_presence_set_last_activity_time_impl ()</title>
<indexterm zone="tp-svc-connection-interface-presence-set-last-activity-time-impl"><primary sortas="tp_svc_connection_interface_presence_set_last_activity_time_impl">tp_svc_connection_interface_presence_set_last_activity_time_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_interface_presence_set_last_activity_time_impl)
                                                        (<link linkend="TpSvcConnectionInterfacePresence">TpSvcConnectionInterfacePresence</link> *self,
                                                         <link linkend="guint">guint</link> in_Time,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
SetLastActivityTime on interface org.freedesktop.Telepathy.Connection.Interface.Presence.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Time</parameter>&#160;:</term>
<listitem><simpara> guint  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-presence-implement-set-last-activity-time" role="function">
<title>tp_svc_connection_interface_presence_implement_set_last_activity_time ()</title>
<indexterm zone="tp-svc-connection-interface-presence-implement-set-last-activity-time"><primary sortas="tp_svc_connection_interface_presence_implement_set_last_activity_time">tp_svc_connection_interface_presence_implement_set_last_activity_time</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_presence_implement_set_last_activity_time
                                                        (<link linkend="TpSvcConnectionInterfacePresenceClass">TpSvcConnectionInterfacePresenceClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-presence-set-last-activity-time-impl">tp_svc_connection_interface_presence_set_last_activity_time_impl</link> impl);</programlisting>
<para>
Register an implementation for the SetLastActivityTime method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the SetLastActivityTime D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-presence-return-from-set-last-activity-time" role="function">
<title>tp_svc_connection_interface_presence_return_from_set_last_activity_time ()</title>
<indexterm zone="tp-svc-connection-interface-presence-return-from-set-last-activity-time"><primary sortas="tp_svc_connection_interface_presence_return_from_set_last_activity_time">tp_svc_connection_interface_presence_return_from_set_last_activity_time</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_presence_return_from_set_last_activity_time
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-presence-set-status-impl" role="function">
<title>tp_svc_connection_interface_presence_set_status_impl ()</title>
<indexterm zone="tp-svc-connection-interface-presence-set-status-impl"><primary sortas="tp_svc_connection_interface_presence_set_status_impl">tp_svc_connection_interface_presence_set_status_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_interface_presence_set_status_impl)
                                                        (<link linkend="TpSvcConnectionInterfacePresence">TpSvcConnectionInterfacePresence</link> *self,
                                                         <link linkend="GHashTable">GHashTable</link> *in_Statuses,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
SetStatus on interface org.freedesktop.Telepathy.Connection.Interface.Presence.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Statuses</parameter>&#160;:</term>
<listitem><simpara> GHashTable * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-presence-implement-set-status" role="function">
<title>tp_svc_connection_interface_presence_implement_set_status ()</title>
<indexterm zone="tp-svc-connection-interface-presence-implement-set-status"><primary sortas="tp_svc_connection_interface_presence_implement_set_status">tp_svc_connection_interface_presence_implement_set_status</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_presence_implement_set_status
                                                        (<link linkend="TpSvcConnectionInterfacePresenceClass">TpSvcConnectionInterfacePresenceClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-presence-set-status-impl">tp_svc_connection_interface_presence_set_status_impl</link> impl);</programlisting>
<para>
Register an implementation for the SetStatus method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the SetStatus D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-presence-return-from-set-status" role="function">
<title>tp_svc_connection_interface_presence_return_from_set_status ()</title>
<indexterm zone="tp-svc-connection-interface-presence-return-from-set-status"><primary sortas="tp_svc_connection_interface_presence_return_from_set_status">tp_svc_connection_interface_presence_return_from_set_status</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_presence_return_from_set_status
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-presence-emit-presence-update" role="function">
<title>tp_svc_connection_interface_presence_emit_presence_update ()</title>
<indexterm zone="tp-svc-connection-interface-presence-emit-presence-update"><primary sortas="tp_svc_connection_interface_presence_emit_presence_update">tp_svc_connection_interface_presence_emit_presence_update</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_presence_emit_presence_update
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         <link linkend="GHashTable">GHashTable</link> *arg_Presence);</programlisting>
<para>
Type-safe wrapper around g_signal_emit to emit the
PresenceUpdate signal on interface org.freedesktop.Telepathy.Connection.Interface.Presence.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Presence</parameter>&#160;:</term>
<listitem><simpara> GHashTable * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="TpSvcConnectionInterfaceAvatars-struct" role="struct">
<title>TpSvcConnectionInterfaceAvatars</title>
<indexterm zone="TpSvcConnectionInterfaceAvatars-struct"><primary sortas="TpSvcConnectionInterfaceAvatars">TpSvcConnectionInterfaceAvatars</primary></indexterm><programlisting>typedef struct _TpSvcConnectionInterfaceAvatars TpSvcConnectionInterfaceAvatars;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>
</para></refsect2>
<refsect2 id="TpSvcConnectionInterfaceAvatarsClass" role="struct">
<title>TpSvcConnectionInterfaceAvatarsClass</title>
<indexterm zone="TpSvcConnectionInterfaceAvatarsClass"><primary sortas="TpSvcConnectionInterfaceAvatarsClass">TpSvcConnectionInterfaceAvatarsClass</primary></indexterm><programlisting>typedef struct _TpSvcConnectionInterfaceAvatarsClass TpSvcConnectionInterfaceAvatarsClass;</programlisting>
<para>
The class of TpSvcConnectionInterfaceAvatars.</para>
<para>
</para></refsect2>
<refsect2 id="tp-svc-connection-interface-avatars-clear-avatar-impl" role="function">
<title>tp_svc_connection_interface_avatars_clear_avatar_impl ()</title>
<indexterm zone="tp-svc-connection-interface-avatars-clear-avatar-impl"><primary sortas="tp_svc_connection_interface_avatars_clear_avatar_impl">tp_svc_connection_interface_avatars_clear_avatar_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_interface_avatars_clear_avatar_impl)
                                                        (<link linkend="TpSvcConnectionInterfaceAvatars">TpSvcConnectionInterfaceAvatars</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
ClearAvatar on interface org.freedesktop.Telepathy.Connection.Interface.Avatars.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-avatars-implement-clear-avatar" role="function">
<title>tp_svc_connection_interface_avatars_implement_clear_avatar ()</title>
<indexterm zone="tp-svc-connection-interface-avatars-implement-clear-avatar"><primary sortas="tp_svc_connection_interface_avatars_implement_clear_avatar">tp_svc_connection_interface_avatars_implement_clear_avatar</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_avatars_implement_clear_avatar
                                                        (<link linkend="TpSvcConnectionInterfaceAvatarsClass">TpSvcConnectionInterfaceAvatarsClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-avatars-clear-avatar-impl">tp_svc_connection_interface_avatars_clear_avatar_impl</link> impl);</programlisting>
<para>
Register an implementation for the ClearAvatar method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the ClearAvatar D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-avatars-return-from-clear-avatar" role="function">
<title>tp_svc_connection_interface_avatars_return_from_clear_avatar ()</title>
<indexterm zone="tp-svc-connection-interface-avatars-return-from-clear-avatar"><primary sortas="tp_svc_connection_interface_avatars_return_from_clear_avatar">tp_svc_connection_interface_avatars_return_from_clear_avatar</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_avatars_return_from_clear_avatar
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-avatars-get-avatar-requirements-impl" role="function">
<title>tp_svc_connection_interface_avatars_get_avatar_requirements_impl ()</title>
<indexterm zone="tp-svc-connection-interface-avatars-get-avatar-requirements-impl"><primary sortas="tp_svc_connection_interface_avatars_get_avatar_requirements_impl">tp_svc_connection_interface_avatars_get_avatar_requirements_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_interface_avatars_get_avatar_requirements_impl)
                                                        (<link linkend="TpSvcConnectionInterfaceAvatars">TpSvcConnectionInterfaceAvatars</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
GetAvatarRequirements on interface org.freedesktop.Telepathy.Connection.Interface.Avatars.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-avatars-implement-get-avatar-requirements" role="function">
<title>tp_svc_connection_interface_avatars_implement_get_avatar_requirements ()</title>
<indexterm zone="tp-svc-connection-interface-avatars-implement-get-avatar-requirements"><primary sortas="tp_svc_connection_interface_avatars_implement_get_avatar_requirements">tp_svc_connection_interface_avatars_implement_get_avatar_requirements</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_avatars_implement_get_avatar_requirements
                                                        (<link linkend="TpSvcConnectionInterfaceAvatarsClass">TpSvcConnectionInterfaceAvatarsClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-avatars-get-avatar-requirements-impl">tp_svc_connection_interface_avatars_get_avatar_requirements_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetAvatarRequirements method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the GetAvatarRequirements D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-avatars-return-from-get-avatar-requirements" role="function">
<title>tp_svc_connection_interface_avatars_return_from_get_avatar_requirements ()</title>
<indexterm zone="tp-svc-connection-interface-avatars-return-from-get-avatar-requirements"><primary sortas="tp_svc_connection_interface_avatars_return_from_get_avatar_requirements">tp_svc_connection_interface_avatars_return_from_get_avatar_requirements</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_avatars_return_from_get_avatar_requirements
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="gchar">gchar</link> **out_MIME_Types,
                                                         <link linkend="guint">guint</link> out_Min_Width,
                                                         <link linkend="guint">guint</link> out_Min_Height,
                                                         <link linkend="guint">guint</link> out_Max_Width,
                                                         <link linkend="guint">guint</link> out_Max_Height,
                                                         <link linkend="guint">guint</link> out_Max_Bytes);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_MIME_Types</parameter>&#160;:</term>
<listitem><simpara> const gchar ** (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Min_Width</parameter>&#160;:</term>
<listitem><simpara> guint  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Min_Height</parameter>&#160;:</term>
<listitem><simpara> guint  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Max_Width</parameter>&#160;:</term>
<listitem><simpara> guint  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Max_Height</parameter>&#160;:</term>
<listitem><simpara> guint  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Max_Bytes</parameter>&#160;:</term>
<listitem><simpara> guint  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-avatars-get-avatar-tokens-impl" role="function">
<title>tp_svc_connection_interface_avatars_get_avatar_tokens_impl ()</title>
<indexterm zone="tp-svc-connection-interface-avatars-get-avatar-tokens-impl"><primary sortas="tp_svc_connection_interface_avatars_get_avatar_tokens_impl">tp_svc_connection_interface_avatars_get_avatar_tokens_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_interface_avatars_get_avatar_tokens_impl)
                                                        (<link linkend="TpSvcConnectionInterfaceAvatars">TpSvcConnectionInterfaceAvatars</link> *self,
                                                         const <link linkend="GArray">GArray</link> *in_Contacts,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
GetAvatarTokens on interface org.freedesktop.Telepathy.Connection.Interface.Avatars.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Contacts</parameter>&#160;:</term>
<listitem><simpara> const GArray * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-avatars-implement-get-avatar-tokens" role="function">
<title>tp_svc_connection_interface_avatars_implement_get_avatar_tokens ()</title>
<indexterm zone="tp-svc-connection-interface-avatars-implement-get-avatar-tokens"><primary sortas="tp_svc_connection_interface_avatars_implement_get_avatar_tokens">tp_svc_connection_interface_avatars_implement_get_avatar_tokens</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_avatars_implement_get_avatar_tokens
                                                        (<link linkend="TpSvcConnectionInterfaceAvatarsClass">TpSvcConnectionInterfaceAvatarsClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-avatars-get-avatar-tokens-impl">tp_svc_connection_interface_avatars_get_avatar_tokens_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetAvatarTokens method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the GetAvatarTokens D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-avatars-return-from-get-avatar-tokens" role="function">
<title>tp_svc_connection_interface_avatars_return_from_get_avatar_tokens ()</title>
<indexterm zone="tp-svc-connection-interface-avatars-return-from-get-avatar-tokens"><primary sortas="tp_svc_connection_interface_avatars_return_from_get_avatar_tokens">tp_svc_connection_interface_avatars_return_from_get_avatar_tokens</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_avatars_return_from_get_avatar_tokens
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="gchar">gchar</link> **out_Tokens);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Tokens</parameter>&#160;:</term>
<listitem><simpara> const gchar ** (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-avatars-request-avatar-impl" role="function">
<title>tp_svc_connection_interface_avatars_request_avatar_impl ()</title>
<indexterm zone="tp-svc-connection-interface-avatars-request-avatar-impl"><primary sortas="tp_svc_connection_interface_avatars_request_avatar_impl">tp_svc_connection_interface_avatars_request_avatar_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_interface_avatars_request_avatar_impl)
                                                        (<link linkend="TpSvcConnectionInterfaceAvatars">TpSvcConnectionInterfaceAvatars</link> *self,
                                                         <link linkend="guint">guint</link> in_Contact,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
RequestAvatar on interface org.freedesktop.Telepathy.Connection.Interface.Avatars.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Contact</parameter>&#160;:</term>
<listitem><simpara> guint  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-avatars-implement-request-avatar" role="function">
<title>tp_svc_connection_interface_avatars_implement_request_avatar ()</title>
<indexterm zone="tp-svc-connection-interface-avatars-implement-request-avatar"><primary sortas="tp_svc_connection_interface_avatars_implement_request_avatar">tp_svc_connection_interface_avatars_implement_request_avatar</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_avatars_implement_request_avatar
                                                        (<link linkend="TpSvcConnectionInterfaceAvatarsClass">TpSvcConnectionInterfaceAvatarsClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-avatars-request-avatar-impl">tp_svc_connection_interface_avatars_request_avatar_impl</link> impl);</programlisting>
<para>
Register an implementation for the RequestAvatar method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the RequestAvatar D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-avatars-return-from-request-avatar" role="function">
<title>tp_svc_connection_interface_avatars_return_from_request_avatar ()</title>
<indexterm zone="tp-svc-connection-interface-avatars-return-from-request-avatar"><primary sortas="tp_svc_connection_interface_avatars_return_from_request_avatar">tp_svc_connection_interface_avatars_return_from_request_avatar</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_avatars_return_from_request_avatar
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="GArray">GArray</link> *out_Data,
                                                         const <link linkend="gchar">gchar</link> *out_MIME_Type);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Data</parameter>&#160;:</term>
<listitem><simpara> const GArray * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_MIME_Type</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-avatars-set-avatar-impl" role="function">
<title>tp_svc_connection_interface_avatars_set_avatar_impl ()</title>
<indexterm zone="tp-svc-connection-interface-avatars-set-avatar-impl"><primary sortas="tp_svc_connection_interface_avatars_set_avatar_impl">tp_svc_connection_interface_avatars_set_avatar_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_interface_avatars_set_avatar_impl)
                                                        (<link linkend="TpSvcConnectionInterfaceAvatars">TpSvcConnectionInterfaceAvatars</link> *self,
                                                         const <link linkend="GArray">GArray</link> *in_Avatar,
                                                         const <link linkend="gchar">gchar</link> *in_MIME_Type,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
SetAvatar on interface org.freedesktop.Telepathy.Connection.Interface.Avatars.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Avatar</parameter>&#160;:</term>
<listitem><simpara> const GArray * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_MIME_Type</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-avatars-implement-set-avatar" role="function">
<title>tp_svc_connection_interface_avatars_implement_set_avatar ()</title>
<indexterm zone="tp-svc-connection-interface-avatars-implement-set-avatar"><primary sortas="tp_svc_connection_interface_avatars_implement_set_avatar">tp_svc_connection_interface_avatars_implement_set_avatar</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_avatars_implement_set_avatar
                                                        (<link linkend="TpSvcConnectionInterfaceAvatarsClass">TpSvcConnectionInterfaceAvatarsClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-avatars-set-avatar-impl">tp_svc_connection_interface_avatars_set_avatar_impl</link> impl);</programlisting>
<para>
Register an implementation for the SetAvatar method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the SetAvatar D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-avatars-return-from-set-avatar" role="function">
<title>tp_svc_connection_interface_avatars_return_from_set_avatar ()</title>
<indexterm zone="tp-svc-connection-interface-avatars-return-from-set-avatar"><primary sortas="tp_svc_connection_interface_avatars_return_from_set_avatar">tp_svc_connection_interface_avatars_return_from_set_avatar</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_avatars_return_from_set_avatar
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="gchar">gchar</link> *out_Token);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Token</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-avatars-emit-avatar-updated" role="function">
<title>tp_svc_connection_interface_avatars_emit_avatar_updated ()</title>
<indexterm zone="tp-svc-connection-interface-avatars-emit-avatar-updated"><primary sortas="tp_svc_connection_interface_avatars_emit_avatar_updated">tp_svc_connection_interface_avatars_emit_avatar_updated</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_avatars_emit_avatar_updated
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         <link linkend="guint">guint</link> arg_Contact,
                                                         const <link linkend="gchar">gchar</link> *arg_New_Avatar_Token);</programlisting>
<para>
Type-safe wrapper around g_signal_emit to emit the
AvatarUpdated signal on interface org.freedesktop.Telepathy.Connection.Interface.Avatars.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Contact</parameter>&#160;:</term>
<listitem><simpara> guint  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_New_Avatar_Token</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-avatars-emit-avatar-retrieved" role="function">
<title>tp_svc_connection_interface_avatars_emit_avatar_retrieved ()</title>
<indexterm zone="tp-svc-connection-interface-avatars-emit-avatar-retrieved"><primary sortas="tp_svc_connection_interface_avatars_emit_avatar_retrieved">tp_svc_connection_interface_avatars_emit_avatar_retrieved</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_avatars_emit_avatar_retrieved
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         <link linkend="guint">guint</link> arg_Contact,
                                                         const <link linkend="gchar">gchar</link> *arg_Token,
                                                         const <link linkend="GArray">GArray</link> *arg_Avatar,
                                                         const <link linkend="gchar">gchar</link> *arg_Type);</programlisting>
<para>
Type-safe wrapper around g_signal_emit to emit the
AvatarRetrieved signal on interface org.freedesktop.Telepathy.Connection.Interface.Avatars.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Contact</parameter>&#160;:</term>
<listitem><simpara> guint  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Token</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Avatar</parameter>&#160;:</term>
<listitem><simpara> const GArray * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Type</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-avatars-implement-request-avatars" role="function">
<title>tp_svc_connection_interface_avatars_implement_request_avatars ()</title>
<indexterm zone="tp-svc-connection-interface-avatars-implement-request-avatars"><primary sortas="tp_svc_connection_interface_avatars_implement_request_avatars">tp_svc_connection_interface_avatars_implement_request_avatars</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_avatars_implement_request_avatars
                                                        (<link linkend="TpSvcConnectionInterfaceAvatarsClass">TpSvcConnectionInterfaceAvatarsClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-avatars-request-avatars-impl">tp_svc_connection_interface_avatars_request_avatars_impl</link> impl);</programlisting>
<para>
Register an implementation for the RequestAvatars method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the RequestAvatars D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-avatars-request-avatars-impl" role="function">
<title>tp_svc_connection_interface_avatars_request_avatars_impl ()</title>
<indexterm zone="tp-svc-connection-interface-avatars-request-avatars-impl"><primary sortas="tp_svc_connection_interface_avatars_request_avatars_impl">tp_svc_connection_interface_avatars_request_avatars_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_interface_avatars_request_avatars_impl)
                                                        (<link linkend="TpSvcConnectionInterfaceAvatars">TpSvcConnectionInterfaceAvatars</link> *self,
                                                         const <link linkend="GArray">GArray</link> *in_Contacts,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
RequestAvatars on interface org.freedesktop.Telepathy.Connection.Interface.Avatars.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Contacts</parameter>&#160;:</term>
<listitem><simpara> const GArray * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-avatars-return-from-request-avatars" role="function">
<title>tp_svc_connection_interface_avatars_return_from_request_avatars ()</title>
<indexterm zone="tp-svc-connection-interface-avatars-return-from-request-avatars"><primary sortas="tp_svc_connection_interface_avatars_return_from_request_avatars">tp_svc_connection_interface_avatars_return_from_request_avatars</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_avatars_return_from_request_avatars
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-avatars-get-known-avatar-tokens-impl" role="function">
<title>tp_svc_connection_interface_avatars_get_known_avatar_tokens_impl ()</title>
<indexterm zone="tp-svc-connection-interface-avatars-get-known-avatar-tokens-impl"><primary sortas="tp_svc_connection_interface_avatars_get_known_avatar_tokens_impl">tp_svc_connection_interface_avatars_get_known_avatar_tokens_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_interface_avatars_get_known_avatar_tokens_impl)
                                                        (<link linkend="TpSvcConnectionInterfaceAvatars">TpSvcConnectionInterfaceAvatars</link> *self,
                                                         const <link linkend="GArray">GArray</link> *in_Contacts,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
GetKnownAvatarTokens on interface org.freedesktop.Telepathy.Connection.Interface.Avatars.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Contacts</parameter>&#160;:</term>
<listitem><simpara> const GArray * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-avatars-implement-get-known-avatar-tokens" role="function">
<title>tp_svc_connection_interface_avatars_implement_get_known_avatar_tokens ()</title>
<indexterm zone="tp-svc-connection-interface-avatars-implement-get-known-avatar-tokens"><primary sortas="tp_svc_connection_interface_avatars_implement_get_known_avatar_tokens">tp_svc_connection_interface_avatars_implement_get_known_avatar_tokens</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_avatars_implement_get_known_avatar_tokens
                                                        (<link linkend="TpSvcConnectionInterfaceAvatarsClass">TpSvcConnectionInterfaceAvatarsClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-avatars-get-known-avatar-tokens-impl">tp_svc_connection_interface_avatars_get_known_avatar_tokens_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetKnownAvatarTokens method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the GetKnownAvatarTokens D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-avatars-return-from-get-known-avatar-tokens" role="function">
<title>tp_svc_connection_interface_avatars_return_from_get_known_avatar_tokens ()</title>
<indexterm zone="tp-svc-connection-interface-avatars-return-from-get-known-avatar-tokens"><primary sortas="tp_svc_connection_interface_avatars_return_from_get_known_avatar_tokens">tp_svc_connection_interface_avatars_return_from_get_known_avatar_tokens</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_avatars_return_from_get_known_avatar_tokens
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         <link linkend="GHashTable">GHashTable</link> *out_Tokens);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Tokens</parameter>&#160;:</term>
<listitem><simpara> GHashTable * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="TpSvcConnectionInterfaceAliasing-struct" role="struct">
<title>TpSvcConnectionInterfaceAliasing</title>
<indexterm zone="TpSvcConnectionInterfaceAliasing-struct"><primary sortas="TpSvcConnectionInterfaceAliasing">TpSvcConnectionInterfaceAliasing</primary></indexterm><programlisting>typedef struct _TpSvcConnectionInterfaceAliasing TpSvcConnectionInterfaceAliasing;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>
</para></refsect2>
<refsect2 id="TpSvcConnectionInterfaceAliasingClass" role="struct">
<title>TpSvcConnectionInterfaceAliasingClass</title>
<indexterm zone="TpSvcConnectionInterfaceAliasingClass"><primary sortas="TpSvcConnectionInterfaceAliasingClass">TpSvcConnectionInterfaceAliasingClass</primary></indexterm><programlisting>typedef struct _TpSvcConnectionInterfaceAliasingClass TpSvcConnectionInterfaceAliasingClass;</programlisting>
<para>
The class of TpSvcConnectionInterfaceAliasing.</para>
<para>
</para></refsect2>
<refsect2 id="tp-svc-connection-interface-aliasing-get-alias-flags-impl" role="function">
<title>tp_svc_connection_interface_aliasing_get_alias_flags_impl ()</title>
<indexterm zone="tp-svc-connection-interface-aliasing-get-alias-flags-impl"><primary sortas="tp_svc_connection_interface_aliasing_get_alias_flags_impl">tp_svc_connection_interface_aliasing_get_alias_flags_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_interface_aliasing_get_alias_flags_impl)
                                                        (<link linkend="TpSvcConnectionInterfaceAliasing">TpSvcConnectionInterfaceAliasing</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
GetAliasFlags on interface org.freedesktop.Telepathy.Connection.Interface.Aliasing.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-aliasing-implement-get-alias-flags" role="function">
<title>tp_svc_connection_interface_aliasing_implement_get_alias_flags ()</title>
<indexterm zone="tp-svc-connection-interface-aliasing-implement-get-alias-flags"><primary sortas="tp_svc_connection_interface_aliasing_implement_get_alias_flags">tp_svc_connection_interface_aliasing_implement_get_alias_flags</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_aliasing_implement_get_alias_flags
                                                        (<link linkend="TpSvcConnectionInterfaceAliasingClass">TpSvcConnectionInterfaceAliasingClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-aliasing-get-alias-flags-impl">tp_svc_connection_interface_aliasing_get_alias_flags_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetAliasFlags method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the GetAliasFlags D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-aliasing-return-from-get-alias-flags" role="function">
<title>tp_svc_connection_interface_aliasing_return_from_get_alias_flags ()</title>
<indexterm zone="tp-svc-connection-interface-aliasing-return-from-get-alias-flags"><primary sortas="tp_svc_connection_interface_aliasing_return_from_get_alias_flags">tp_svc_connection_interface_aliasing_return_from_get_alias_flags</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_aliasing_return_from_get_alias_flags
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         <link linkend="guint">guint</link> out_Alias_Flags);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Alias_Flags</parameter>&#160;:</term>
<listitem><simpara> guint  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-aliasing-request-aliases-impl" role="function">
<title>tp_svc_connection_interface_aliasing_request_aliases_impl ()</title>
<indexterm zone="tp-svc-connection-interface-aliasing-request-aliases-impl"><primary sortas="tp_svc_connection_interface_aliasing_request_aliases_impl">tp_svc_connection_interface_aliasing_request_aliases_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_interface_aliasing_request_aliases_impl)
                                                        (<link linkend="TpSvcConnectionInterfaceAliasing">TpSvcConnectionInterfaceAliasing</link> *self,
                                                         const <link linkend="GArray">GArray</link> *in_Contacts,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
RequestAliases on interface org.freedesktop.Telepathy.Connection.Interface.Aliasing.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Contacts</parameter>&#160;:</term>
<listitem><simpara> const GArray * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-aliasing-implement-request-aliases" role="function">
<title>tp_svc_connection_interface_aliasing_implement_request_aliases ()</title>
<indexterm zone="tp-svc-connection-interface-aliasing-implement-request-aliases"><primary sortas="tp_svc_connection_interface_aliasing_implement_request_aliases">tp_svc_connection_interface_aliasing_implement_request_aliases</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_aliasing_implement_request_aliases
                                                        (<link linkend="TpSvcConnectionInterfaceAliasingClass">TpSvcConnectionInterfaceAliasingClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-aliasing-request-aliases-impl">tp_svc_connection_interface_aliasing_request_aliases_impl</link> impl);</programlisting>
<para>
Register an implementation for the RequestAliases method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the RequestAliases D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-aliasing-return-from-request-aliases" role="function">
<title>tp_svc_connection_interface_aliasing_return_from_request_aliases ()</title>
<indexterm zone="tp-svc-connection-interface-aliasing-return-from-request-aliases"><primary sortas="tp_svc_connection_interface_aliasing_return_from_request_aliases">tp_svc_connection_interface_aliasing_return_from_request_aliases</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_aliasing_return_from_request_aliases
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="gchar">gchar</link> **out_Aliases);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Aliases</parameter>&#160;:</term>
<listitem><simpara> const gchar ** (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-aliasing-get-aliases-impl" role="function">
<title>tp_svc_connection_interface_aliasing_get_aliases_impl ()</title>
<indexterm zone="tp-svc-connection-interface-aliasing-get-aliases-impl"><primary sortas="tp_svc_connection_interface_aliasing_get_aliases_impl">tp_svc_connection_interface_aliasing_get_aliases_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_interface_aliasing_get_aliases_impl)
                                                        (<link linkend="TpSvcConnectionInterfaceAliasing">TpSvcConnectionInterfaceAliasing</link> *self,
                                                         const <link linkend="GArray">GArray</link> *in_Contacts,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
GetAliases on interface org.freedesktop.Telepathy.Connection.Interface.Aliasing.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Contacts</parameter>&#160;:</term>
<listitem><simpara> const GArray * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-aliasing-implement-get-aliases" role="function">
<title>tp_svc_connection_interface_aliasing_implement_get_aliases ()</title>
<indexterm zone="tp-svc-connection-interface-aliasing-implement-get-aliases"><primary sortas="tp_svc_connection_interface_aliasing_implement_get_aliases">tp_svc_connection_interface_aliasing_implement_get_aliases</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_aliasing_implement_get_aliases
                                                        (<link linkend="TpSvcConnectionInterfaceAliasingClass">TpSvcConnectionInterfaceAliasingClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-aliasing-get-aliases-impl">tp_svc_connection_interface_aliasing_get_aliases_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetAliases method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the GetAliases D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-aliasing-return-from-get-aliases" role="function">
<title>tp_svc_connection_interface_aliasing_return_from_get_aliases ()</title>
<indexterm zone="tp-svc-connection-interface-aliasing-return-from-get-aliases"><primary sortas="tp_svc_connection_interface_aliasing_return_from_get_aliases">tp_svc_connection_interface_aliasing_return_from_get_aliases</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_aliasing_return_from_get_aliases
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         <link linkend="GHashTable">GHashTable</link> *out_Aliases);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Aliases</parameter>&#160;:</term>
<listitem><simpara> GHashTable * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-aliasing-set-aliases-impl" role="function">
<title>tp_svc_connection_interface_aliasing_set_aliases_impl ()</title>
<indexterm zone="tp-svc-connection-interface-aliasing-set-aliases-impl"><primary sortas="tp_svc_connection_interface_aliasing_set_aliases_impl">tp_svc_connection_interface_aliasing_set_aliases_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_interface_aliasing_set_aliases_impl)
                                                        (<link linkend="TpSvcConnectionInterfaceAliasing">TpSvcConnectionInterfaceAliasing</link> *self,
                                                         <link linkend="GHashTable">GHashTable</link> *in_Aliases,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
SetAliases on interface org.freedesktop.Telepathy.Connection.Interface.Aliasing.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Aliases</parameter>&#160;:</term>
<listitem><simpara> GHashTable * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-aliasing-implement-set-aliases" role="function">
<title>tp_svc_connection_interface_aliasing_implement_set_aliases ()</title>
<indexterm zone="tp-svc-connection-interface-aliasing-implement-set-aliases"><primary sortas="tp_svc_connection_interface_aliasing_implement_set_aliases">tp_svc_connection_interface_aliasing_implement_set_aliases</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_aliasing_implement_set_aliases
                                                        (<link linkend="TpSvcConnectionInterfaceAliasingClass">TpSvcConnectionInterfaceAliasingClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-aliasing-set-aliases-impl">tp_svc_connection_interface_aliasing_set_aliases_impl</link> impl);</programlisting>
<para>
Register an implementation for the SetAliases method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the SetAliases D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-aliasing-return-from-set-aliases" role="function">
<title>tp_svc_connection_interface_aliasing_return_from_set_aliases ()</title>
<indexterm zone="tp-svc-connection-interface-aliasing-return-from-set-aliases"><primary sortas="tp_svc_connection_interface_aliasing_return_from_set_aliases">tp_svc_connection_interface_aliasing_return_from_set_aliases</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_aliasing_return_from_set_aliases
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-aliasing-emit-aliases-changed" role="function">
<title>tp_svc_connection_interface_aliasing_emit_aliases_changed ()</title>
<indexterm zone="tp-svc-connection-interface-aliasing-emit-aliases-changed"><primary sortas="tp_svc_connection_interface_aliasing_emit_aliases_changed">tp_svc_connection_interface_aliasing_emit_aliases_changed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_aliasing_emit_aliases_changed
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *arg_Aliases);</programlisting>
<para>
Type-safe wrapper around g_signal_emit to emit the
AliasesChanged signal on interface org.freedesktop.Telepathy.Connection.Interface.Aliasing.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Aliases</parameter>&#160;:</term>
<listitem><simpara> const GPtrArray * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="TpSvcConnectionInterfaceCapabilities-struct" role="struct">
<title>TpSvcConnectionInterfaceCapabilities</title>
<indexterm zone="TpSvcConnectionInterfaceCapabilities-struct"><primary sortas="TpSvcConnectionInterfaceCapabilities">TpSvcConnectionInterfaceCapabilities</primary></indexterm><programlisting>typedef struct _TpSvcConnectionInterfaceCapabilities TpSvcConnectionInterfaceCapabilities;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>
</para></refsect2>
<refsect2 id="TpSvcConnectionInterfaceCapabilitiesClass" role="struct">
<title>TpSvcConnectionInterfaceCapabilitiesClass</title>
<indexterm zone="TpSvcConnectionInterfaceCapabilitiesClass"><primary sortas="TpSvcConnectionInterfaceCapabilitiesClass">TpSvcConnectionInterfaceCapabilitiesClass</primary></indexterm><programlisting>typedef struct _TpSvcConnectionInterfaceCapabilitiesClass TpSvcConnectionInterfaceCapabilitiesClass;</programlisting>
<para>
The class of TpSvcConnectionInterfaceCapabilities.</para>
<para>
</para></refsect2>
<refsect2 id="tp-svc-connection-interface-capabilities-advertise-capabilities-impl" role="function">
<title>tp_svc_connection_interface_capabilities_advertise_capabilities_impl ()</title>
<indexterm zone="tp-svc-connection-interface-capabilities-advertise-capabilities-impl"><primary sortas="tp_svc_connection_interface_capabilities_advertise_capabilities_impl">tp_svc_connection_interface_capabilities_advertise_capabilities_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_interface_capabilities_advertise_capabilities_impl)
                                                        (<link linkend="TpSvcConnectionInterfaceCapabilities">TpSvcConnectionInterfaceCapabilities</link> *self,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *in_Add,
                                                         const <link linkend="gchar">gchar</link> **in_Remove,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
AdvertiseCapabilities on interface org.freedesktop.Telepathy.Connection.Interface.Capabilities.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Add</parameter>&#160;:</term>
<listitem><simpara> const GPtrArray * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Remove</parameter>&#160;:</term>
<listitem><simpara> const gchar ** (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-capabilities-implement-advertise-capabilities" role="function">
<title>tp_svc_connection_interface_capabilities_implement_advertise_capabilities ()</title>
<indexterm zone="tp-svc-connection-interface-capabilities-implement-advertise-capabilities"><primary sortas="tp_svc_connection_interface_capabilities_implement_advertise_capabilities">tp_svc_connection_interface_capabilities_implement_advertise_capabilities</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_capabilities_implement_advertise_capabilities
                                                        (<link linkend="TpSvcConnectionInterfaceCapabilitiesClass">TpSvcConnectionInterfaceCapabilitiesClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-capabilities-advertise-capabilities-impl">tp_svc_connection_interface_capabilities_advertise_capabilities_impl</link> impl);</programlisting>
<para>
Register an implementation for the AdvertiseCapabilities method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the AdvertiseCapabilities D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-capabilities-return-from-advertise-capabilities" role="function">
<title>tp_svc_connection_interface_capabilities_return_from_advertise_capabilities ()</title>
<indexterm zone="tp-svc-connection-interface-capabilities-return-from-advertise-capabilities"><primary sortas="tp_svc_connection_interface_capabilities_return_from_advertise_capabilities">tp_svc_connection_interface_capabilities_return_from_advertise_capabilities</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_capabilities_return_from_advertise_capabilities
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *out_Self_Capabilities);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Self_Capabilities</parameter>&#160;:</term>
<listitem><simpara> const GPtrArray * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-capabilities-get-capabilities-impl" role="function">
<title>tp_svc_connection_interface_capabilities_get_capabilities_impl ()</title>
<indexterm zone="tp-svc-connection-interface-capabilities-get-capabilities-impl"><primary sortas="tp_svc_connection_interface_capabilities_get_capabilities_impl">tp_svc_connection_interface_capabilities_get_capabilities_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_interface_capabilities_get_capabilities_impl)
                                                        (<link linkend="TpSvcConnectionInterfaceCapabilities">TpSvcConnectionInterfaceCapabilities</link> *self,
                                                         const <link linkend="GArray">GArray</link> *in_Handles,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
The signature of an implementation of the D-Bus method
GetCapabilities on interface org.freedesktop.Telepathy.Connection.Interface.Capabilities.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Handles</parameter>&#160;:</term>
<listitem><simpara> const GArray * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Used to return values or throw an error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-capabilities-implement-get-capabilities" role="function">
<title>tp_svc_connection_interface_capabilities_implement_get_capabilities ()</title>
<indexterm zone="tp-svc-connection-interface-capabilities-implement-get-capabilities"><primary sortas="tp_svc_connection_interface_capabilities_implement_get_capabilities">tp_svc_connection_interface_capabilities_implement_get_capabilities</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_capabilities_implement_get_capabilities
                                                        (<link linkend="TpSvcConnectionInterfaceCapabilitiesClass">TpSvcConnectionInterfaceCapabilitiesClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-capabilities-get-capabilities-impl">tp_svc_connection_interface_capabilities_get_capabilities_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetCapabilities method in the vtable
of an implementation of this interface. To be called from
the interface init function.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&#160;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&#160;:</term>
<listitem><simpara> A callback used to implement the GetCapabilities D-Bus method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-capabilities-return-from-get-capabilities" role="function">
<title>tp_svc_connection_interface_capabilities_return_from_get_capabilities ()</title>
<indexterm zone="tp-svc-connection-interface-capabilities-return-from-get-capabilities"><primary sortas="tp_svc_connection_interface_capabilities_return_from_get_capabilities">tp_svc_connection_interface_capabilities_return_from_get_capabilities</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_capabilities_return_from_get_capabilities
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *out_Contact_Capabilities);</programlisting>
<para>
Return successfully by calling <link linkend="dbus-g-method-return"><function>dbus_g_method_return()</function></link>.
This inline function exists only to provide type-safety.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Contact_Capabilities</parameter>&#160;:</term>
<listitem><simpara> const GPtrArray * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-capabilities-emit-capabilities-changed" role="function">
<title>tp_svc_connection_interface_capabilities_emit_capabilities_changed ()</title>
<indexterm zone="tp-svc-connection-interface-capabilities-emit-capabilities-changed"><primary sortas="tp_svc_connection_interface_capabilities_emit_capabilities_changed">tp_svc_connection_interface_capabilities_emit_capabilities_changed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_capabilities_emit_capabilities_changed
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="GPtrArray">GPtrArray</link> *arg_Caps);</programlisting>
<para>
Type-safe wrapper around g_signal_emit to emit the
CapabilitiesChanged signal on interface org.freedesktop.Telepathy.Connection.Interface.Capabilities.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&#160;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Caps</parameter>&#160;:</term>
<listitem><simpara> const GPtrArray * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>

<refsect1 id="telepathy-glib-svc-connection.signal-details" role="signals">
<title role="signals.title">Signal Details</title>
<refsect2 id="TpSvcConnection-connection-error" role="signal"><title>The <literal>&quot;connection-error&quot;</literal> signal</title>
<indexterm zone="TpSvcConnection-connection-error"><primary sortas="TpSvcConnection::connection-error">TpSvcConnection::connection-error</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="TpSvcConnection">TpSvcConnection</link> *arg_Error,
                                                        <link linkend="gchar">gchar</link>           *arg_Details,
                                                        <link linkend="gpointer">gpointer</link>         user_data)        : Run Last / Has Details</programlisting>
<para>
The ConnectionError D-Bus signal is emitted whenever this GObject signal is.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>arg_Error</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Details</parameter>&#160;:</term>
<listitem><simpara> GHashTable * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="TpSvcConnection-new-channel" role="signal"><title>The <literal>&quot;new-channel&quot;</literal> signal</title>
<indexterm zone="TpSvcConnection-new-channel"><primary sortas="TpSvcConnection::new-channel">TpSvcConnection::new-channel</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="TpSvcConnection">TpSvcConnection</link> *arg_Object_Path,
                                                        <link linkend="DBusGObjectPath">DBusGObjectPath</link> *arg_Channel_Type,
                                                        <link linkend="gchar">gchar</link>           *arg_Handle_Type,
                                                        <link linkend="guint">guint</link>            arg_Handle,
                                                        <link linkend="guint">guint</link>            arg_Suppress_Handler,
                                                        <link linkend="gboolean">gboolean</link>         arg5,
                                                        <link linkend="gpointer">gpointer</link>         user_data)                 : Run Last / Has Details</programlisting>
<para>
The NewChannel D-Bus signal is emitted whenever this GObject signal is.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>arg_Object_Path</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Channel_Type</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Handle_Type</parameter>&#160;:</term>
<listitem><simpara> guint  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Handle</parameter>&#160;:</term>
<listitem><simpara> guint  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Suppress_Handler</parameter>&#160;:</term>
<listitem><simpara> gboolean  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="TpSvcConnection-self-handle-changed" role="signal"><title>The <literal>&quot;self-handle-changed&quot;</literal> signal</title>
<indexterm zone="TpSvcConnection-self-handle-changed"><primary sortas="TpSvcConnection::self-handle-changed">TpSvcConnection::self-handle-changed</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="TpSvcConnection">TpSvcConnection</link> *arg_Self_Handle,
                                                        <link linkend="guint">guint</link>            arg1,
                                                        <link linkend="gpointer">gpointer</link>         user_data)            : Run Last / Has Details</programlisting>
<para>
The SelfHandleChanged D-Bus signal is emitted whenever this GObject signal is.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>arg_Self_Handle</parameter>&#160;:</term>
<listitem><simpara> guint  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="TpSvcConnection-status-changed" role="signal"><title>The <literal>&quot;status-changed&quot;</literal> signal</title>
<indexterm zone="TpSvcConnection-status-changed"><primary sortas="TpSvcConnection::status-changed">TpSvcConnection::status-changed</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="TpSvcConnection">TpSvcConnection</link> *arg_Status,
                                                        <link linkend="guint">guint</link>            arg_Reason,
                                                        <link linkend="guint">guint</link>            arg2,
                                                        <link linkend="gpointer">gpointer</link>         user_data)       : Run Last / Has Details</programlisting>
<para>
The StatusChanged D-Bus signal is emitted whenever this GObject signal is.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>arg_Status</parameter>&#160;:</term>
<listitem><simpara> guint  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Reason</parameter>&#160;:</term>
<listitem><simpara> guint  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="TpSvcConnectionInterfaceRequests-channel-closed" role="signal"><title>The <literal>&quot;channel-closed&quot;</literal> signal</title>
<indexterm zone="TpSvcConnectionInterfaceRequests-channel-closed"><primary sortas="TpSvcConnectionInterfaceRequests::channel-closed">TpSvcConnectionInterfaceRequests::channel-closed</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="TpSvcConnectionInterfaceRequests">TpSvcConnectionInterfaceRequests</link> *arg_Removed,
                                                        <link linkend="DBusGObjectPath">DBusGObjectPath</link>                  *arg1,
                                                        <link linkend="gpointer">gpointer</link>                          user_data)        : Run Last / Has Details</programlisting>
<para>
The ChannelClosed D-Bus signal is emitted whenever this GObject signal is.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>arg_Removed</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="TpSvcConnectionInterfaceRequests-new-channels" role="signal"><title>The <literal>&quot;new-channels&quot;</literal> signal</title>
<indexterm zone="TpSvcConnectionInterfaceRequests-new-channels"><primary sortas="TpSvcConnectionInterfaceRequests::new-channels">TpSvcConnectionInterfaceRequests::new-channels</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="TpSvcConnectionInterfaceRequests">TpSvcConnectionInterfaceRequests</link> *arg_Channels,
                                                        <link linkend="gpointer">gpointer</link>                          user_data)         : Run Last / Has Details</programlisting>
<para>
The NewChannels D-Bus signal is emitted whenever this GObject signal is.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>arg_Channels</parameter>&#160;:</term>
<listitem><simpara> const GPtrArray * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="TpSvcConnectionInterfaceSimplePresence-presences-changed" role="signal"><title>The <literal>&quot;presences-changed&quot;</literal> signal</title>
<indexterm zone="TpSvcConnectionInterfaceSimplePresence-presences-changed"><primary sortas="TpSvcConnectionInterfaceSimplePresence::presences-changed">TpSvcConnectionInterfaceSimplePresence::presences-changed</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="TpSvcConnectionInterfaceSimplePresence">TpSvcConnectionInterfaceSimplePresence</link> *arg_Presence,
                                                        <link linkend="gpointer">gpointer</link>                                user_data)         : Run Last / Has Details</programlisting>
<para>
The PresencesChanged D-Bus signal is emitted whenever this GObject signal is.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>arg_Presence</parameter>&#160;:</term>
<listitem><simpara> GHashTable * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="TpSvcConnectionInterfacePresence-presence-update" role="signal"><title>The <literal>&quot;presence-update&quot;</literal> signal</title>
<indexterm zone="TpSvcConnectionInterfacePresence-presence-update"><primary sortas="TpSvcConnectionInterfacePresence::presence-update">TpSvcConnectionInterfacePresence::presence-update</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="TpSvcConnectionInterfacePresence">TpSvcConnectionInterfacePresence</link> *arg_Presence,
                                                        <link linkend="gpointer">gpointer</link>                          user_data)         : Run Last / Has Details</programlisting>
<para>
The PresenceUpdate D-Bus signal is emitted whenever this GObject signal is.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>arg_Presence</parameter>&#160;:</term>
<listitem><simpara> GHashTable * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="TpSvcConnectionInterfaceAvatars-avatar-retrieved" role="signal"><title>The <literal>&quot;avatar-retrieved&quot;</literal> signal</title>
<indexterm zone="TpSvcConnectionInterfaceAvatars-avatar-retrieved"><primary sortas="TpSvcConnectionInterfaceAvatars::avatar-retrieved">TpSvcConnectionInterfaceAvatars::avatar-retrieved</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="TpSvcConnectionInterfaceAvatars">TpSvcConnectionInterfaceAvatars</link> *arg_Contact,
                                                        <link linkend="guint">guint</link>                            arg_Token,
                                                        <link linkend="gchar">gchar</link>                           *arg_Avatar,
                                                        <link linkend="GArray-guchar-">GArray_guchar_</link>                  *arg_Type,
                                                        <link linkend="gchar">gchar</link>                           *arg4,
                                                        <link linkend="gpointer">gpointer</link>                         user_data)        : Run Last / Has Details</programlisting>
<para>
The AvatarRetrieved D-Bus signal is emitted whenever this GObject signal is.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>arg_Contact</parameter>&#160;:</term>
<listitem><simpara> guint  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Token</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Avatar</parameter>&#160;:</term>
<listitem><simpara> const GArray * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Type</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="TpSvcConnectionInterfaceAvatars-avatar-updated" role="signal"><title>The <literal>&quot;avatar-updated&quot;</literal> signal</title>
<indexterm zone="TpSvcConnectionInterfaceAvatars-avatar-updated"><primary sortas="TpSvcConnectionInterfaceAvatars::avatar-updated">TpSvcConnectionInterfaceAvatars::avatar-updated</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="TpSvcConnectionInterfaceAvatars">TpSvcConnectionInterfaceAvatars</link> *arg_Contact,
                                                        <link linkend="guint">guint</link>                            arg_New_Avatar_Token,
                                                        <link linkend="gchar">gchar</link>                           *arg2,
                                                        <link linkend="gpointer">gpointer</link>                         user_data)                 : Run Last / Has Details</programlisting>
<para>
The AvatarUpdated D-Bus signal is emitted whenever this GObject signal is.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>arg_Contact</parameter>&#160;:</term>
<listitem><simpara> guint  (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_New_Avatar_Token</parameter>&#160;:</term>
<listitem><simpara> const gchar * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="TpSvcConnectionInterfaceAliasing-aliases-changed" role="signal"><title>The <literal>&quot;aliases-changed&quot;</literal> signal</title>
<indexterm zone="TpSvcConnectionInterfaceAliasing-aliases-changed"><primary sortas="TpSvcConnectionInterfaceAliasing::aliases-changed">TpSvcConnectionInterfaceAliasing::aliases-changed</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="TpSvcConnectionInterfaceAliasing">TpSvcConnectionInterfaceAliasing</link> *arg_Aliases,
                                                        <link linkend="gpointer">gpointer</link>                          user_data)        : Run Last / Has Details</programlisting>
<para>
The AliasesChanged D-Bus signal is emitted whenever this GObject signal is.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>arg_Aliases</parameter>&#160;:</term>
<listitem><simpara> const GPtrArray * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="TpSvcConnectionInterfaceCapabilities-capabilities-changed" role="signal"><title>The <literal>&quot;capabilities-changed&quot;</literal> signal</title>
<indexterm zone="TpSvcConnectionInterfaceCapabilities-capabilities-changed"><primary sortas="TpSvcConnectionInterfaceCapabilities::capabilities-changed">TpSvcConnectionInterfaceCapabilities::capabilities-changed</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="TpSvcConnectionInterfaceCapabilities">TpSvcConnectionInterfaceCapabilities</link> *arg_Caps,
                                                        <link linkend="gpointer">gpointer</link>                              user_data)      : Run Last / Has Details</programlisting>
<para>
The CapabilitiesChanged D-Bus signal is emitted whenever this GObject signal is.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>arg_Caps</parameter>&#160;:</term>
<listitem><simpara> const GPtrArray * (FIXME, generate documentation)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>


<refsect1 id="telepathy-glib-svc-connection.see-also">
<title>See Also</title>
#TpBaseConnection
</refsect1>

</refentry>

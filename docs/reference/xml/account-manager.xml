<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="telepathy-glib-account-manager">
<refmeta>
<refentrytitle role="top_of_page" id="telepathy-glib-account-manager.top_of_page">TpAccountManager</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>TELEPATHY-GLIB Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>TpAccountManager</refname>
<refpurpose>proxy object for the Telepathy account manager</refpurpose>
</refnamediv>

<refsynopsisdiv id="telepathy-glib-account-manager.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>
<anchor id="TpAccountManager"/>
<synopsis>

#include &lt;telepathy-glib/account-manager.h&gt;

                    <link linkend="TpAccountManager-struct">TpAccountManager</link>;
                    <link linkend="TpAccountManagerClass">TpAccountManagerClass</link>;
<link linkend="TpAccountManager">TpAccountManager</link> *  <link linkend="tp-account-manager-new">tp_account_manager_new</link>              (<link linkend="TpDBusDaemon">TpDBusDaemon</link> *bus_daemon);
<link linkend="void">void</link>                <link linkend="tp-account-manager-init-known-interfaces">tp_account_manager_init_known_interfaces</link>
                                                        (void);

<link linkend="void">void</link>                (<link linkend="tp-cli-account-manager-callback-for-create-account">*tp_cli_account_manager_callback_for_create_account</link>)
                                                        (<link linkend="TpAccountManager">TpAccountManager</link> *proxy,
                                                         const <link linkend="gchar">gchar</link> *out_Account,
                                                         const <link linkend="GError">GError</link> *error,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);
<link linkend="TpProxyPendingCall">TpProxyPendingCall</link> * <link linkend="tp-cli-account-manager-call-create-account">tp_cli_account_manager_call_create_account</link>
                                                        (<link linkend="TpAccountManager">TpAccountManager</link> *proxy,
                                                         <link linkend="gint">gint</link> timeout_ms,
                                                         const <link linkend="gchar">gchar</link> *in_Connection_Manager,
                                                         const <link linkend="gchar">gchar</link> *in_Protocol,
                                                         const <link linkend="gchar">gchar</link> *in_Display_Name,
                                                         <link linkend="GHashTable">GHashTable</link> *in_Parameters,
                                                         <link linkend="GHashTable">GHashTable</link> *in_Properties,
                                                         <link linkend="tp-cli-account-manager-callback-for-create-account">tp_cli_account_manager_callback_for_create_account</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object);
<link linkend="void">void</link>                (<link linkend="tp-cli-account-manager-signal-callback-account-removed">*tp_cli_account_manager_signal_callback_account_removed</link>)
                                                        (<link linkend="TpAccountManager">TpAccountManager</link> *proxy,
                                                         const <link linkend="gchar">gchar</link> *arg_Account,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);
<link linkend="TpProxySignalConnection">TpProxySignalConnection</link> * <link linkend="tp-cli-account-manager-connect-to-account-removed">tp_cli_account_manager_connect_to_account_removed</link>
                                                        (<link linkend="TpAccountManager">TpAccountManager</link> *proxy,
                                                         <link linkend="tp-cli-account-manager-signal-callback-account-removed">tp_cli_account_manager_signal_callback_account_removed</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object,
                                                         <link linkend="GError">GError</link> **error);
<link linkend="void">void</link>                (<link linkend="tp-cli-account-manager-signal-callback-account-validity-changed">*tp_cli_account_manager_signal_callback_account_validity_changed</link>)
                                                        (<link linkend="TpAccountManager">TpAccountManager</link> *proxy,
                                                         const <link linkend="gchar">gchar</link> *arg_Account,
                                                         <link linkend="gboolean">gboolean</link> arg_Valid,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);
<link linkend="TpProxySignalConnection">TpProxySignalConnection</link> * <link linkend="tp-cli-account-manager-connect-to-account-validity-changed">tp_cli_account_manager_connect_to_account_validity_changed</link>
                                                        (<link linkend="TpAccountManager">TpAccountManager</link> *proxy,
                                                         <link linkend="tp-cli-account-manager-signal-callback-account-validity-changed">tp_cli_account_manager_signal_callback_account_validity_changed</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object,
                                                         <link linkend="GError">GError</link> **error);
</synopsis>
</refsynopsisdiv>

<refsect1 id="telepathy-glib-account-manager.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>
  <link linkend="GObject">GObject</link>
   +----<link linkend="TpProxy">TpProxy</link>
         +----TpAccountManager
</synopsis>
</refsect1>








<refsect1 id="telepathy-glib-account-manager.description" role="desc">
<title role="desc.title">Description</title>
<para>
The <link linkend="TpAccountManager"><type>TpAccountManager</type></link> object is used to communicate with the Telepathy
AccountManager service.</para>
<para>
</para>
</refsect1>

<refsect1 id="telepathy-glib-account-manager.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="TpAccountManager-struct" role="struct">
<title>TpAccountManager</title>
<indexterm zone="TpAccountManager-struct" role="0.7.UNRELEASED"><primary sortas="TpAccountManager">TpAccountManager</primary></indexterm><programlisting>typedef struct _TpAccountManager TpAccountManager;</programlisting>
<para>
The Telepathy Account Manager stores real-time communication accounts and
their configuration, places accounts online on request, and manipulates
accounts' presence, nicknames and avatars.
</para>
<para>
This proxy is usable but incomplete: GObject signals and accessors for the
D-Bus properties will be added in a later version of telepathy-glib, along
with a mechanism similar to <link linkend="tp-connection-call-when-ready"><function>tp_connection_call_when_ready()</function></link>.
</para>
<para>
Until suitable convenience methods are implemented, the generic
<link linkend="tp-cli-dbus-properties-call-get-all"><function>tp_cli_dbus_properties_call_get_all()</function></link> method can be used to get the D-Bus
properties.</para>
<para>
</para><para role="since">Since 0.7.UNRELEASED</para></refsect2>
<refsect2 id="TpAccountManagerClass" role="struct">
<title>TpAccountManagerClass</title>
<indexterm zone="TpAccountManagerClass"><primary sortas="TpAccountManagerClass">TpAccountManagerClass</primary></indexterm><programlisting>typedef struct {
} TpAccountManagerClass;
</programlisting>
<para>
The class of a <link linkend="TpAccount"><type>TpAccount</type></link>.</para>
<para>
</para></refsect2>
<refsect2 id="tp-account-manager-new" role="function">
<title>tp_account_manager_new ()</title>
<indexterm zone="tp-account-manager-new"><primary sortas="tp_account_manager_new">tp_account_manager_new</primary></indexterm><programlisting><link linkend="TpAccountManager">TpAccountManager</link> *  tp_account_manager_new              (<link linkend="TpDBusDaemon">TpDBusDaemon</link> *bus_daemon);</programlisting>
<para>
Convenience function to create a new account manager proxy.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>bus_daemon</parameter>&#160;:</term>
<listitem><simpara> Proxy for the D-Bus daemon
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a new reference to an account manager proxy
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-account-manager-init-known-interfaces" role="function" condition="since:0.7.UNRELEASED">
<title>tp_account_manager_init_known_interfaces ()</title>
<indexterm zone="tp-account-manager-init-known-interfaces" role="0.7.UNRELEASED"><primary sortas="tp_account_manager_init_known_interfaces">tp_account_manager_init_known_interfaces</primary></indexterm><programlisting><link linkend="void">void</link>                tp_account_manager_init_known_interfaces
                                                        (void);</programlisting>
<para>
Ensure that the known interfaces for TpAccountManager have been set up.
This is done automatically when necessary, but for correct
overriding of library interfaces by local extensions, you should
call this function before calling
<link linkend="tp-proxy-or-subclass-hook-on-interface-add"><function>tp_proxy_or_subclass_hook_on_interface_add()</function></link> with first argument
<link linkend="TP-TYPE-ACCOUNT-MANAGER--CAPS"><literal>TP_TYPE_ACCOUNT_MANAGER</literal></link>.</para>
<para>
</para><para role="since">Since 0.7.UNRELEASED</para></refsect2>
<refsect2 id="tp-cli-account-manager-callback-for-create-account" role="function">
<title>tp_cli_account_manager_callback_for_create_account ()</title>
<indexterm zone="tp-cli-account-manager-callback-for-create-account"><primary sortas="tp_cli_account_manager_callback_for_create_account">tp_cli_account_manager_callback_for_create_account</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_cli_account_manager_callback_for_create_account)
                                                        (<link linkend="TpAccountManager">TpAccountManager</link> *proxy,
                                                         const <link linkend="gchar">gchar</link> *out_Account,
                                                         const <link linkend="GError">GError</link> *error,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);</programlisting>
<para>
Signature of the callback called when a CreateAccount method call
succeeds or fails.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> the proxy on which the call was made
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_Account</parameter>&#160;:</term>
<listitem><simpara> Used to return an 'out' argument if <parameter>error</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>: The new &lt;tp:dbus-ref namespace=&quot;org.freedesktop.Telepathy&quot;&gt;Account&lt;/tp:dbus-ref&gt;.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> <link linkend="NULL--CAPS"><literal>NULL</literal></link> on success, or an error on failure
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> user-supplied data
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> user-supplied object
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-cli-account-manager-call-create-account" role="function">
<title>tp_cli_account_manager_call_create_account ()</title>
<indexterm zone="tp-cli-account-manager-call-create-account"><primary sortas="tp_cli_account_manager_call_create_account">tp_cli_account_manager_call_create_account</primary></indexterm><programlisting><link linkend="TpProxyPendingCall">TpProxyPendingCall</link> * tp_cli_account_manager_call_create_account
                                                        (<link linkend="TpAccountManager">TpAccountManager</link> *proxy,
                                                         <link linkend="gint">gint</link> timeout_ms,
                                                         const <link linkend="gchar">gchar</link> *in_Connection_Manager,
                                                         const <link linkend="gchar">gchar</link> *in_Protocol,
                                                         const <link linkend="gchar">gchar</link> *in_Display_Name,
                                                         <link linkend="GHashTable">GHashTable</link> *in_Parameters,
                                                         <link linkend="GHashTable">GHashTable</link> *in_Properties,
                                                         <link linkend="tp-cli-account-manager-callback-for-create-account">tp_cli_account_manager_callback_for_create_account</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object);</programlisting>
<para>
Start a CreateAccount method call.
</para>
<para>
Request the creation of a new &lt;tp:dbus-ref namespace=&quot;org.freedesktop.Telepathy&quot;&gt;Account&lt;/tp:dbus-ref&gt;. The         account manager SHOULD NOT allow invalid accounts to be created.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="TpProxy"><type>TpProxy</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>timeout_ms</parameter>&#160;:</term>
<listitem><simpara> the timeout in milliseconds, or -1 to use the
  default
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Connection_Manager</parameter>&#160;:</term>
<listitem><simpara> Used to pass an 'in' argument: The name of the connection manager, e.g. &amp;quot;salut&amp;quot;.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Protocol</parameter>&#160;:</term>
<listitem><simpara> Used to pass an 'in' argument: The protocol, e.g. &amp;quot;local-xmpp&amp;quot;.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Display_Name</parameter>&#160;:</term>
<listitem><simpara> Used to pass an 'in' argument: The initial value of the new account&apos;s &lt;tp:dbus-ref namespace=&quot;org.freedesktop.Telepathy.Account&quot;&gt;DisplayName&lt;/tp:dbus-ref&gt;           property. The account manager SHOULD modify this to make it unique if           an Account already exists with the same display name, for instance by           appending a number or the &apos;account&apos; parameter. Account manager           implementations SHOULD accept an empty string, but account editing           user interfaces should avoid passing an empty string for this           parameter.            &lt;tp:rationale&gt;             &lt;p&gt;The account creation UI may ask the user for a name for the new               account. If the author of the UI chooses not to do this, the               account creation UI is better able to suggest a default display               name because it has protocol-specific knowledge which the account               manager does not.&lt;/p&gt;              &lt;p&gt;The account manager always knows the complete list of accounts so               it can easily tell whether it should append something to the               display name to avoid presenting two identically-named accounts to               the user.&lt;/p&gt;           &lt;/tp:rationale&gt;
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Parameters</parameter>&#160;:</term>
<listitem><simpara> Used to pass an 'in' argument: Initial parameter values, as would be passed to           &lt;tp:dbus-ref namespace=&quot;org.freedesktop.Telepathy.ConnectionManager&quot;&gt;RequestConnection&lt;/tp:dbus-ref&gt;.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in_Properties</parameter>&#160;:</term>
<listitem><simpara> Used to pass an 'in' argument: &lt;tp:docstring xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;           &lt;p&gt;The values of any other properties to be set immediately on the             new Account.&lt;/p&gt;            &lt;p&gt;Only the properties mentioned in             &lt;tp:member-ref&gt;SupportedAccountProperties&lt;/tp:member-ref&gt; are             acceptable here. In particular, the &lt;tp:dbus-ref namespace=&quot;org.freedesktop.Telepathy.Account&quot;&gt;DisplayName&lt;/tp:dbus-ref&gt;             and &lt;tp:dbus-ref namespace=&quot;org.freedesktop.Telepathy.Account&quot;&gt;Parameters&lt;/tp:dbus-ref&gt;             properties are never allowed here, since they are set using the other             arguments to this method.&lt;/p&gt;            &lt;p&gt;Account manager implementations SHOULD support creating accounts             with an empty value for this argument.&lt;/p&gt;
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara> called when the method call succeeds or fails;
  may be <link linkend="NULL--CAPS"><literal>NULL</literal></link> to make a "fire and forget" call with no 
  reply tracking
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> user-supplied data passed to the callback;
  must be <link linkend="NULL--CAPS"><literal>NULL</literal></link> if <parameter>callback</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>destroy</parameter>&#160;:</term>
<listitem><simpara> called with the user_data as argument, after the
  call has succeeded, failed or been cancelled;
  must be <link linkend="NULL--CAPS"><literal>NULL</literal></link> if <parameter>callback</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> If not <link linkend="NULL--CAPS"><literal>NULL</literal></link>, a <link linkend="GObject"><type>GObject</type></link> which will be 
  weakly referenced; if it is destroyed, this call 
  will automatically be cancelled. Must be <link linkend="NULL--CAPS"><literal>NULL</literal></link> if 
  <parameter>callback</parameter> is <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a <link linkend="TpProxyPendingCall"><type>TpProxyPendingCall</type></link> representing the call in
 progress. It is borrowed from the object, and will become
 invalid when the callback is called, the call is
 cancelled or the <link linkend="TpProxy"><type>TpProxy</type></link> becomes invalid.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-cli-account-manager-signal-callback-account-removed" role="function">
<title>tp_cli_account_manager_signal_callback_account_removed ()</title>
<indexterm zone="tp-cli-account-manager-signal-callback-account-removed"><primary sortas="tp_cli_account_manager_signal_callback_account_removed">tp_cli_account_manager_signal_callback_account_removed</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_cli_account_manager_signal_callback_account_removed)
                                                        (<link linkend="TpAccountManager">TpAccountManager</link> *proxy,
                                                         const <link linkend="gchar">gchar</link> *arg_Account,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);</programlisting>
<para>
Represents the signature of a callback for the signal AccountRemoved.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> The proxy on which <link linkend="tp-cli-account-manager-connect-to-account-removed"><function>tp_cli_account_manager_connect_to_account_removed()</function></link>
 was called
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Account</parameter>&#160;:</term>
<listitem><simpara> An Account, which must not be used any more.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> User-supplied data
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> User-supplied weakly referenced object
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-cli-account-manager-connect-to-account-removed" role="function">
<title>tp_cli_account_manager_connect_to_account_removed ()</title>
<indexterm zone="tp-cli-account-manager-connect-to-account-removed"><primary sortas="tp_cli_account_manager_connect_to_account_removed">tp_cli_account_manager_connect_to_account_removed</primary></indexterm><programlisting><link linkend="TpProxySignalConnection">TpProxySignalConnection</link> * tp_cli_account_manager_connect_to_account_removed
                                                        (<link linkend="TpAccountManager">TpAccountManager</link> *proxy,
                                                         <link linkend="tp-cli-account-manager-signal-callback-account-removed">tp_cli_account_manager_signal_callback_account_removed</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>
Connect a handler to the signal AccountRemoved.
</para>
<para>
The given account has been removed.          &lt;tp:rationale&gt;           This is effectively change notification for the valid and invalid           accounts lists. On emission of this signal, the Account indicated           will no longer be present in either of the lists.         &lt;/tp:rationale&gt;</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="TpAccountManager"><type>TpAccountManager</type></link> or subclass
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara> Callback to be called when the signal is
  received
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> User-supplied data for the callback
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>destroy</parameter>&#160;:</term>
<listitem><simpara> Destructor for the user-supplied data, which
  will be called when this signal is disconnected, or
  before this function returns <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GObject"><type>GObject</type></link> which will be weakly referenced; 
  if it is destroyed, this callback will automatically be
  disconnected
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> If not <link linkend="NULL--CAPS"><literal>NULL</literal></link>, used to raise an error if <link linkend="NULL--CAPS"><literal>NULL</literal></link> is
  returned
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a <link linkend="TpProxySignalConnection"><type>TpProxySignalConnection</type></link> containing all of the
above, which can be used to disconnect the signal; or
<link linkend="NULL--CAPS"><literal>NULL</literal></link> if the proxy does not have the desired interface
or has become invalid.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-cli-account-manager-signal-callback-account-validity-changed" role="function">
<title>tp_cli_account_manager_signal_callback_account_validity_changed ()</title>
<indexterm zone="tp-cli-account-manager-signal-callback-account-validity-changed"><primary sortas="tp_cli_account_manager_signal_callback_account_validity_changed">tp_cli_account_manager_signal_callback_account_validity_changed</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_cli_account_manager_signal_callback_account_validity_changed)
                                                        (<link linkend="TpAccountManager">TpAccountManager</link> *proxy,
                                                         const <link linkend="gchar">gchar</link> *arg_Account,
                                                         <link linkend="gboolean">gboolean</link> arg_Valid,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GObject">GObject</link> *weak_object);</programlisting>
<para>
Represents the signature of a callback for the signal AccountValidityChanged.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> The proxy on which <link linkend="tp-cli-account-manager-connect-to-account-validity-changed"><function>tp_cli_account_manager_connect_to_account_validity_changed()</function></link>
 was called
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Account</parameter>&#160;:</term>
<listitem><simpara> An Account.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg_Valid</parameter>&#160;:</term>
<listitem><simpara> True if the account is now valid.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> User-supplied data
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> User-supplied weakly referenced object
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-cli-account-manager-connect-to-account-validity-changed" role="function">
<title>tp_cli_account_manager_connect_to_account_validity_changed ()</title>
<indexterm zone="tp-cli-account-manager-connect-to-account-validity-changed"><primary sortas="tp_cli_account_manager_connect_to_account_validity_changed">tp_cli_account_manager_connect_to_account_validity_changed</primary></indexterm><programlisting><link linkend="TpProxySignalConnection">TpProxySignalConnection</link> * tp_cli_account_manager_connect_to_account_validity_changed
                                                        (<link linkend="TpAccountManager">TpAccountManager</link> *proxy,
                                                         <link linkend="tp-cli-account-manager-signal-callback-account-validity-changed">tp_cli_account_manager_signal_callback_account_validity_changed</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy,
                                                         <link linkend="GObject">GObject</link> *weak_object,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>
Connect a handler to the signal AccountValidityChanged.
</para>
<para>
The validity of the given account has changed. New accounts are         also indicated by this signal, as an account validity change         (usually to True) on an account that did not previously exist.          &lt;tp:rationale&gt;           This is effectively change notification for the valid and invalid           accounts lists.         &lt;/tp:rationale&gt;</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="TpAccountManager"><type>TpAccountManager</type></link> or subclass
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara> Callback to be called when the signal is
  received
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> User-supplied data for the callback
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>destroy</parameter>&#160;:</term>
<listitem><simpara> Destructor for the user-supplied data, which
  will be called when this signal is disconnected, or
  before this function returns <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weak_object</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GObject"><type>GObject</type></link> which will be weakly referenced; 
  if it is destroyed, this callback will automatically be
  disconnected
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> If not <link linkend="NULL--CAPS"><literal>NULL</literal></link>, used to raise an error if <link linkend="NULL--CAPS"><literal>NULL</literal></link> is
  returned
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a <link linkend="TpProxySignalConnection"><type>TpProxySignalConnection</type></link> containing all of the
above, which can be used to disconnect the signal; or
<link linkend="NULL--CAPS"><literal>NULL</literal></link> if the proxy does not have the desired interface
or has become invalid.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>



<refsect1 id="telepathy-glib-account-manager.see-also">
<title>See Also</title>
#TpAccount
</refsect1>

</refentry>

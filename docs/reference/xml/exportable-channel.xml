<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="TpExportableChannel">
<refmeta>
<refentrytitle role="top_of_page" id="TpExportableChannel.top_of_page">TpExportableChannel</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>TELEPATHY-GLIB Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>TpExportableChannel</refname>
<refpurpose>interface representing channels with several standard
                    properties</refpurpose>
</refnamediv>

<refsynopsisdiv id="TpExportableChannel.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>

#include &lt;telepathy-glib/exportable-channel.h&gt;

<link linkend="void">void</link>                (<link linkend="TpExportableChannelFunc">*TpExportableChannelFunc</link>)          (<link linkend="TpExportableChannel">TpExportableChannel</link> *channel,
                                                         <link linkend="gpointer">gpointer</link> user_data);
                    <link linkend="TpExportableChannel-struct">TpExportableChannel</link>;
                    <link linkend="TpExportableChannelIface">TpExportableChannelIface</link>;
</synopsis>
</refsynopsisdiv>

<refsect1 id="TpExportableChannel.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>
  <link linkend="GInterface">GInterface</link>
   +----TpExportableChannel
</synopsis>
</refsect1>

<refsect1 id="TpExportableChannel.prerequisites" role="prerequisites">
<title role="prerequisites.title">Prerequisites</title>
<para>
TpExportableChannel requires
 <link linkend="TpSvcChannel">TpSvcChannel</link>.</para>
</refsect1>




<refsect1 id="TpExportableChannel.properties" role="properties">
<title role="properties.title">Properties</title>
<synopsis>
  &quot;<link linkend="TpExportableChannel--channel-destroyed">channel-destroyed</link>&quot;        <link linkend="gboolean">gboolean</link>              : Read
  &quot;<link linkend="TpExportableChannel--channel-properties">channel-properties</link>&quot;       <link linkend="GHashTable-gchararray+GValue-*">GHashTable_gchararray+GValue_*</link>  : Read
  &quot;<link linkend="TpExportableChannel--object-path">object-path</link>&quot;              <link linkend="gchar">gchar</link>*                : Read / Write / Construct Only
</synopsis>
</refsect1>



<refsect1 id="TpExportableChannel.description" role="desc">
<title role="desc.title">Description</title>
<para>
This interface defines a set of channel properties on top of those of
<link linkend="TpChannelIface"><type>TpChannelIface</type></link>. It's mainly used by <link linkend="TpChannelManager"><type>TpChannelManager</type></link> to represent the
returned and managed channel objects.</para>
<para>
</para>
</refsect1>

<refsect1 id="TpExportableChannel.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="TpExportableChannelFunc" role="function">
<title>TpExportableChannelFunc ()</title>
<indexterm zone="TpExportableChannelFunc"><primary sortas="TpExportableChannelFunc">TpExportableChannelFunc</primary></indexterm><programlisting><link linkend="void">void</link>                (*TpExportableChannelFunc)          (<link linkend="TpExportableChannel">TpExportableChannel</link> *channel,
                                                         <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
A callback for functions which act on exportable channels.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>channel</parameter>&#160;:</term>
<listitem><simpara> An object implementing the exportable channel interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> Arbitrary user-supplied data
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="TpExportableChannel-struct" role="struct">
<title>TpExportableChannel</title>
<indexterm zone="TpExportableChannel-struct"><primary sortas="TpExportableChannel">TpExportableChannel</primary></indexterm><programlisting>typedef struct _TpExportableChannel TpExportableChannel;</programlisting>
<para>
Opaque typedef representing a channel with several standard properties.</para>
<para>
</para></refsect2>
<refsect2 id="TpExportableChannelIface" role="struct">
<title>TpExportableChannelIface</title>
<indexterm zone="TpExportableChannelIface"><primary sortas="TpExportableChannelIface">TpExportableChannelIface</primary></indexterm><programlisting>typedef struct {
    GTypeInterface parent;
} TpExportableChannelIface;
</programlisting>
<para>
The interface for <link linkend="TpExportableChannel"><type>TpExportableChannel</type></link> objects.</para>
<para>
</para><variablelist role="struct">
<varlistentry>
<term><link linkend="GTypeInterface">GTypeInterface</link>&#160;<structfield>parent</structfield>;</term>
<listitem><simpara> The parent interface
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>

</refsect1>
<refsect1 id="TpExportableChannel.property-details" role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2 id="TpExportableChannel--channel-destroyed" role="property"><title>The <literal>&quot;channel-destroyed&quot;</literal> property</title>
<indexterm zone="TpExportableChannel--channel-destroyed"><primary sortas="TpExportableChannel:channel-destroyed">TpExportableChannel:channel-destroyed</primary></indexterm><programlisting>  &quot;channel-destroyed&quot;        <link linkend="gboolean">gboolean</link>              : Read</programlisting>
<para>
If true, the closed signal on the Channel interface indicates that
the channel can go away.
</para>
<para>
If false, the closed signal indicates to the channel manager that the
channel should appear to go away and be re-created, by emitting Closed
followed by NewChannel. (This is to support the "respawning" of  Text
channels which are closed with unacknowledged messages.)</para>
<para>
</para><para>Default value: FALSE</para>
</refsect2>
<refsect2 id="TpExportableChannel--channel-properties" role="property"><title>The <literal>&quot;channel-properties&quot;</literal> property</title>
<indexterm zone="TpExportableChannel--channel-properties"><primary sortas="TpExportableChannel:channel-properties">TpExportableChannel:channel-properties</primary></indexterm><programlisting>  &quot;channel-properties&quot;       <link linkend="GHashTable-gchararray+GValue-*">GHashTable_gchararray+GValue_*</link>  : Read</programlisting>
<para>
The D-Bus properties to be announced in the NewChannels signal
and in the Channels property, as a map from
interface.name.propertyname to GValue.
</para>
<para>
A channel's immutable properties are constant for its lifetime on the
bus, so this property should only change when the closed signal is
emitted (so that respawned channels can reappear on the bus with
different properties).  All of the D-Bus properties mentioned here
should be exposed through the D-Bus properties interface; additional
(possibly mutable) properties not included here may also be exposed
via the D-Bus properties interface.
</para>
<para>
If the channel implementation uses <link linkend="TpDBusPropertiesMixin"><type>TpDBusPropertiesMixin</type></link>, this
property can implemented using
<link linkend="tp-dbus-properties-mixin-make-properties-hash"><type>tp_dbus_properties_mixin_make_properties_hash</type></link> as follows:
</para>
<para>
<informalexample><programlisting>
 case PROP_CHANNEL_PROPERTIES:
   g_value_take_boxed (value,
     tp_dbus_properties_mixin_make_properties_hash (object,
         // The spec says these properties MUST be included:
         TP_IFACE_CHANNEL, "TargetHandle",
         TP_IFACE_CHANNEL, "TargetHandleType",
         TP_IFACE_CHANNEL, "ChannelType",
         TP_IFACE_CHANNEL, "TargetID",
         TP_IFACE_CHANNEL, "Requested",
         // These aren't mandatory as of spec 0.17.17
         // (but they should be):
         TP_IFACE_CHANNEL, "InitiatorHandle",
         TP_IFACE_CHANNEL, "InitiatorID",
         TP_IFACE_CHANNEL, "Interfaces",
         // Perhaps your channel has some other immutable properties:
         TP_IFACE_CHANNEL_INTERFACE_MESSAGES, "SupportedContentTypes",
         // etc.
         NULL));
   break;
</programlisting></informalexample></para>
<para>
</para></refsect2>
<refsect2 id="TpExportableChannel--object-path" role="property"><title>The <literal>&quot;object-path&quot;</literal> property</title>
<indexterm zone="TpExportableChannel--object-path"><primary sortas="TpExportableChannel:object-path">TpExportableChannel:object-path</primary></indexterm><programlisting>  &quot;object-path&quot;              <link linkend="gchar">gchar</link>*                : Read / Write / Construct Only</programlisting>
<para>
The D-Bus object path used for this object on the bus. Read-only
except during construction.</para>
<para>
</para><para>Default value: NULL</para>
</refsect2>
</refsect1>



<refsect1 id="TpExportableChannel.see-also">
<title>See Also</title>
#TpChannelIface, <link linkend="TpChannelManager"><type>TpChannelManager</type></link>, <link linkend="TpSvcChannel"><type>TpSvcChannel</type></link>
</refsect1>

</refentry>

<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="telepathy-glib-svc-unstable">
<refmeta>
<refentrytitle role="top_of_page" id="telepathy-glib-svc-unstable.top_of_page">Interfaces in libtelepathy-glib-unstable</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>TELEPATHY-GLIB Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>Interfaces in libtelepathy-glib-unstable</refname>
<refpurpose>Deprecated module</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv id="telepathy-glib-svc-unstable.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>

#include &lt;telepathy-glib/svc-unstable.h&gt;

#define             <link linkend="TP-IFACE-CONNECTION-INTERFACE-CONTACT-INFO:CAPS">TP_IFACE_CONNECTION_INTERFACE_CONTACT_INFO</link>
#define             <link linkend="TP-IFACE-CONNECTION-INTERFACE-FORWARDING:CAPS">TP_IFACE_CONNECTION_INTERFACE_FORWARDING</link>
#define             <link linkend="TP-IFACE-CONNECTION-INTERFACE-PRIVACY:CAPS">TP_IFACE_CONNECTION_INTERFACE_PRIVACY</link>
#define             <link linkend="TP-IFACE-CONNECTION-INTERFACE-RENAMING:CAPS">TP_IFACE_CONNECTION_INTERFACE_RENAMING</link>
#define             <link linkend="TP-IFACE-CHANNEL-TYPE-CONTACT-SEARCH:CAPS">TP_IFACE_CHANNEL_TYPE_CONTACT_SEARCH</link>
#define             <link linkend="TP-IFACE-CHANNEL-INTERFACE-HOLD:CAPS">TP_IFACE_CHANNEL_INTERFACE_HOLD</link>
#define             <link linkend="TP-IFACE-CHANNEL-INTERFACE-TRANSFER:CAPS">TP_IFACE_CHANNEL_INTERFACE_TRANSFER</link>

enum                <link linkend="TpChannelContactSearchState">TpChannelContactSearchState</link>;
#define             <link linkend="NUM-TP-CHANNEL-CONTACT-SEARCH-STATES:CAPS">NUM_TP_CHANNEL_CONTACT_SEARCH_STATES</link>
enum                <link linkend="TpChannelHoldState">TpChannelHoldState</link>;
#define             <link linkend="NUM-TP-CHANNEL-HOLD-STATES:CAPS">NUM_TP_CHANNEL_HOLD_STATES</link>

                    <link linkend="TpSvcChannelTypeContactSearch">TpSvcChannelTypeContactSearch</link>;
                    <link linkend="TpSvcChannelTypeContactSearchClass">TpSvcChannelTypeContactSearchClass</link>;
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-type-contact-search-get-search-keys-impl">*tp_svc_channel_type_contact_search_get_search_keys_impl</link>)
                                                        (<link linkend="TpSvcChannelTypeContactSearch">TpSvcChannelTypeContactSearch</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-contact-search-implement-get-search-keys">tp_svc_channel_type_contact_search_implement_get_search_keys</link>
                                                        (<link linkend="TpSvcChannelTypeContactSearchClass">TpSvcChannelTypeContactSearchClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-contact-search-get-search-keys-impl">tp_svc_channel_type_contact_search_get_search_keys_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-contact-search-return-from-get-search-keys">tp_svc_channel_type_contact_search_return_from_get_search_keys</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="gchar">gchar</link> *ret,
                                                         <link linkend="GHashTable">GHashTable</link> *ret1);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-type-contact-search-get-search-state-impl">*tp_svc_channel_type_contact_search_get_search_state_impl</link>)
                                                        (<link linkend="TpSvcChannelTypeContactSearch">TpSvcChannelTypeContactSearch</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-contact-search-implement-get-search-state">tp_svc_channel_type_contact_search_implement_get_search_state</link>
                                                        (<link linkend="TpSvcChannelTypeContactSearchClass">TpSvcChannelTypeContactSearchClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-contact-search-get-search-state-impl">tp_svc_channel_type_contact_search_get_search_state_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-contact-search-return-from-get-search-state">tp_svc_channel_type_contact_search_return_from_get_search_state</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         <link linkend="guint">guint</link> ret);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-type-contact-search-search-impl">*tp_svc_channel_type_contact_search_search_impl</link>)
                                                        (<link linkend="TpSvcChannelTypeContactSearch">TpSvcChannelTypeContactSearch</link> *self,
                                                         <link linkend="GHashTable">GHashTable</link> *terms,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-contact-search-implement-search">tp_svc_channel_type_contact_search_implement_search</link>
                                                        (<link linkend="TpSvcChannelTypeContactSearchClass">TpSvcChannelTypeContactSearchClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-contact-search-search-impl">tp_svc_channel_type_contact_search_search_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-contact-search-return-from-search">tp_svc_channel_type_contact_search_return_from_search</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-contact-search-emit-search-result-received">tp_svc_channel_type_contact_search_emit_search_result_received</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> contact,
                                                         const <link linkend="GHashTable">GHashTable</link> *values);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-type-contact-search-emit-search-state-changed">tp_svc_channel_type_contact_search_emit_search_state_changed</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> state);


                    <link linkend="TpSvcChannelInterfaceTransfer">TpSvcChannelInterfaceTransfer</link>;
                    <link linkend="TpSvcChannelInterfaceTransferClass">TpSvcChannelInterfaceTransferClass</link>;
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-interface-transfer-transfer-impl">*tp_svc_channel_interface_transfer_transfer_impl</link>)
                                                        (<link linkend="TpSvcChannelInterfaceTransfer">TpSvcChannelInterfaceTransfer</link> *self,
                                                         <link linkend="guint">guint</link> member,
                                                         <link linkend="guint">guint</link> destination,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-transfer-implement-transfer">tp_svc_channel_interface_transfer_implement_transfer</link>
                                                        (<link linkend="TpSvcChannelInterfaceTransferClass">TpSvcChannelInterfaceTransferClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-transfer-transfer-impl">tp_svc_channel_interface_transfer_transfer_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-transfer-return-from-transfer">tp_svc_channel_interface_transfer_return_from_transfer</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);


                    <link linkend="TpSvcChannelInterfaceHold">TpSvcChannelInterfaceHold</link>;
                    <link linkend="TpSvcChannelInterfaceHoldClass">TpSvcChannelInterfaceHoldClass</link>;
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-interface-hold-get-hold-state-impl">*tp_svc_channel_interface_hold_get_hold_state_impl</link>)
                                                        (<link linkend="TpSvcChannelInterfaceHold">TpSvcChannelInterfaceHold</link> *self,
                                                         <link linkend="guint">guint</link> member,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-hold-implement-get-hold-state">tp_svc_channel_interface_hold_implement_get_hold_state</link>
                                                        (<link linkend="TpSvcChannelInterfaceHoldClass">TpSvcChannelInterfaceHoldClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-hold-get-hold-state-impl">tp_svc_channel_interface_hold_get_hold_state_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-hold-return-from-get-hold-state">tp_svc_channel_interface_hold_return_from_get_hold_state</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         <link linkend="guint">guint</link> ret);
<link linkend="void">void</link>                (<link linkend="tp-svc-channel-interface-hold-request-hold-impl">*tp_svc_channel_interface_hold_request_hold_impl</link>)
                                                        (<link linkend="TpSvcChannelInterfaceHold">TpSvcChannelInterfaceHold</link> *self,
                                                         <link linkend="guint">guint</link> member,
                                                         <link linkend="gboolean">gboolean</link> hold,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-hold-implement-request-hold">tp_svc_channel_interface_hold_implement_request_hold</link>
                                                        (<link linkend="TpSvcChannelInterfaceHoldClass">TpSvcChannelInterfaceHoldClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-hold-request-hold-impl">tp_svc_channel_interface_hold_request_hold_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-hold-return-from-request-hold">tp_svc_channel_interface_hold_return_from_request_hold</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);
<link linkend="void">void</link>                <link linkend="tp-svc-channel-interface-hold-emit-hold-state-changed">tp_svc_channel_interface_hold_emit_hold_state_changed</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> member,
                                                         const <link linkend="guint">guint</link> state);


                    <link linkend="TpSvcConnectionInterfaceRenaming">TpSvcConnectionInterfaceRenaming</link>;
                    <link linkend="TpSvcConnectionInterfaceRenamingClass">TpSvcConnectionInterfaceRenamingClass</link>;
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-interface-renaming-request-rename-impl">*tp_svc_connection_interface_renaming_request_rename_impl</link>)
                                                        (<link linkend="TpSvcConnectionInterfaceRenaming">TpSvcConnectionInterfaceRenaming</link> *self,
                                                         const <link linkend="gchar">gchar</link> *name,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-renaming-implement-request-rename">tp_svc_connection_interface_renaming_implement_request_rename</link>
                                                        (<link linkend="TpSvcConnectionInterfaceRenamingClass">TpSvcConnectionInterfaceRenamingClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-renaming-request-rename-impl">tp_svc_connection_interface_renaming_request_rename_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-renaming-return-from-request-rename">tp_svc_connection_interface_renaming_return_from_request_rename</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-renaming-emit-renamed">tp_svc_connection_interface_renaming_emit_renamed</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> original,
                                                         const <link linkend="guint">guint</link> new);


                    <link linkend="TpSvcConnectionInterfacePrivacy">TpSvcConnectionInterfacePrivacy</link>;
                    <link linkend="TpSvcConnectionInterfacePrivacyClass">TpSvcConnectionInterfacePrivacyClass</link>;
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-interface-privacy-get-privacy-mode-impl">*tp_svc_connection_interface_privacy_get_privacy_mode_impl</link>)
                                                        (<link linkend="TpSvcConnectionInterfacePrivacy">TpSvcConnectionInterfacePrivacy</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-privacy-implement-get-privacy-mode">tp_svc_connection_interface_privacy_implement_get_privacy_mode</link>
                                                        (<link linkend="TpSvcConnectionInterfacePrivacyClass">TpSvcConnectionInterfacePrivacyClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-privacy-get-privacy-mode-impl">tp_svc_connection_interface_privacy_get_privacy_mode_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-privacy-return-from-get-privacy-mode">tp_svc_connection_interface_privacy_return_from_get_privacy_mode</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="gchar">gchar</link> *ret);
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-interface-privacy-get-privacy-modes-impl">*tp_svc_connection_interface_privacy_get_privacy_modes_impl</link>)
                                                        (<link linkend="TpSvcConnectionInterfacePrivacy">TpSvcConnectionInterfacePrivacy</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-privacy-implement-get-privacy-modes">tp_svc_connection_interface_privacy_implement_get_privacy_modes</link>
                                                        (<link linkend="TpSvcConnectionInterfacePrivacyClass">TpSvcConnectionInterfacePrivacyClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-privacy-get-privacy-modes-impl">tp_svc_connection_interface_privacy_get_privacy_modes_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-privacy-return-from-get-privacy-modes">tp_svc_connection_interface_privacy_return_from_get_privacy_modes</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="gchar">gchar</link> **ret);
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-interface-privacy-set-privacy-mode-impl">*tp_svc_connection_interface_privacy_set_privacy_mode_impl</link>)
                                                        (<link linkend="TpSvcConnectionInterfacePrivacy">TpSvcConnectionInterfacePrivacy</link> *self,
                                                         const <link linkend="gchar">gchar</link> *mode,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-privacy-implement-set-privacy-mode">tp_svc_connection_interface_privacy_implement_set_privacy_mode</link>
                                                        (<link linkend="TpSvcConnectionInterfacePrivacyClass">TpSvcConnectionInterfacePrivacyClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-privacy-set-privacy-mode-impl">tp_svc_connection_interface_privacy_set_privacy_mode_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-privacy-return-from-set-privacy-mode">tp_svc_connection_interface_privacy_return_from_set_privacy_mode</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-privacy-emit-privacy-mode-changed">tp_svc_connection_interface_privacy_emit_privacy_mode_changed</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="gchar">gchar</link> *mode);


                    <link linkend="TpSvcConnectionInterfaceContactInfo">TpSvcConnectionInterfaceContactInfo</link>;
                    <link linkend="TpSvcConnectionInterfaceContactInfoClass">TpSvcConnectionInterfaceContactInfoClass</link>;
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-interface-contact-info-request-contact-info-impl">*tp_svc_connection_interface_contact_info_request_contact_info_impl</link>)
                                                        (<link linkend="TpSvcConnectionInterfaceContactInfo">TpSvcConnectionInterfaceContactInfo</link> *self,
                                                         <link linkend="guint">guint</link> contact,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-contact-info-implement-request-contact-info">tp_svc_connection_interface_contact_info_implement_request_contact_info</link>
                                                        (<link linkend="TpSvcConnectionInterfaceContactInfoClass">TpSvcConnectionInterfaceContactInfoClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-contact-info-request-contact-info-impl">tp_svc_connection_interface_contact_info_request_contact_info_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-contact-info-return-from-request-contact-info">tp_svc_connection_interface_contact_info_return_from_request_contact_info</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-contact-info-emit-got-contact-info">tp_svc_connection_interface_contact_info_emit_got_contact_info</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> contact,
                                                         const <link linkend="gchar">gchar</link> *vcard);


                    <link linkend="TpSvcConnectionInterfaceForwarding">TpSvcConnectionInterfaceForwarding</link>;
                    <link linkend="TpSvcConnectionInterfaceForwardingClass">TpSvcConnectionInterfaceForwardingClass</link>;
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-interface-forwarding-get-forwarding-handle-impl">*tp_svc_connection_interface_forwarding_get_forwarding_handle_impl</link>)
                                                        (<link linkend="TpSvcConnectionInterfaceForwarding">TpSvcConnectionInterfaceForwarding</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-forwarding-implement-get-forwarding-handle">tp_svc_connection_interface_forwarding_implement_get_forwarding_handle</link>
                                                        (<link linkend="TpSvcConnectionInterfaceForwardingClass">TpSvcConnectionInterfaceForwardingClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-forwarding-get-forwarding-handle-impl">tp_svc_connection_interface_forwarding_get_forwarding_handle_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-forwarding-return-from-get-forwarding-handle">tp_svc_connection_interface_forwarding_return_from_get_forwarding_handle</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         <link linkend="guint">guint</link> ret);
<link linkend="void">void</link>                (<link linkend="tp-svc-connection-interface-forwarding-set-forwarding-handle-impl">*tp_svc_connection_interface_forwarding_set_forwarding_handle_impl</link>)
                                                        (<link linkend="TpSvcConnectionInterfaceForwarding">TpSvcConnectionInterfaceForwarding</link> *self,
                                                         <link linkend="guint">guint</link> forward_to,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-forwarding-implement-set-forwarding-handle">tp_svc_connection_interface_forwarding_implement_set_forwarding_handle</link>
                                                        (<link linkend="TpSvcConnectionInterfaceForwardingClass">TpSvcConnectionInterfaceForwardingClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-forwarding-set-forwarding-handle-impl">tp_svc_connection_interface_forwarding_set_forwarding_handle_impl</link> impl);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-forwarding-return-from-set-forwarding-handle">tp_svc_connection_interface_forwarding_return_from_set_forwarding_handle</link>
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);
<link linkend="void">void</link>                <link linkend="tp-svc-connection-interface-forwarding-emit-forwarding-changed">tp_svc_connection_interface_forwarding_emit_forwarding_changed</link>
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> forward_to);
</synopsis>
</refsynopsisdiv>









<refsect1 id="telepathy-glib-svc-unstable.description" role="desc">
<title role="desc.title">Description</title>
<para>
Use of this module is deprecated. If you must implement these interfaces,
you should copy the relevant XML file from the spec into your source
package, and also copy in the code generation tools from telepathy-glib
(see the extensions/ directory in Gabble or Salut source for the structure
to use). Generate the code with a namespacing prefix other than Tp/tp_/TP_,
e.g. Gabble uses Gabble/gabble_/GABBLE_.
</para>
<para>
The static library telepathy-glib-unstable exists to support interfaces
in the Telepathy specification which do not yet have a stable API,
in order to avoid changing the API and ABI of telepathy-glib too often.
</para>
<para>
To use these interfaces you must use the pkg-config module
'telepathy-glib-unstable', or link against -ltelepathy-glib-unstable
and add /usr/include/telepathy-unstable to your header search path.</para>
<para>

</para>
</refsect1>

<refsect1 id="telepathy-glib-svc-unstable.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="TP-IFACE-CONNECTION-INTERFACE-CONTACT-INFO:CAPS" role="macro">
<title>TP_IFACE_CONNECTION_INTERFACE_CONTACT_INFO</title>
<indexterm zone="TP-IFACE-CONNECTION-INTERFACE-CONTACT-INFO:CAPS"><primary>TP_IFACE_CONNECTION_INTERFACE_CONTACT_INFO</primary></indexterm><programlisting>#define             TP_IFACE_CONNECTION_INTERFACE_CONTACT_INFO</programlisting>
<para>
The interface name "org.freedesktop.Telepathy.Connection.Interface.ContactInfo"</para>
<para>

</para></refsect2>
<refsect2 id="TP-IFACE-CONNECTION-INTERFACE-FORWARDING:CAPS" role="macro">
<title>TP_IFACE_CONNECTION_INTERFACE_FORWARDING</title>
<indexterm zone="TP-IFACE-CONNECTION-INTERFACE-FORWARDING:CAPS"><primary>TP_IFACE_CONNECTION_INTERFACE_FORWARDING</primary></indexterm><programlisting>#define             TP_IFACE_CONNECTION_INTERFACE_FORWARDING</programlisting>
<para>
The interface name "org.freedesktop.Telepathy.Connection.Interface.Forwarding"</para>
<para>

</para></refsect2>
<refsect2 id="TP-IFACE-CONNECTION-INTERFACE-PRIVACY:CAPS" role="macro">
<title>TP_IFACE_CONNECTION_INTERFACE_PRIVACY</title>
<indexterm zone="TP-IFACE-CONNECTION-INTERFACE-PRIVACY:CAPS"><primary>TP_IFACE_CONNECTION_INTERFACE_PRIVACY</primary></indexterm><programlisting>#define             TP_IFACE_CONNECTION_INTERFACE_PRIVACY</programlisting>
<para>
The interface name "org.freedesktop.Telepathy.Connection.Interface.Privacy"</para>
<para>

</para></refsect2>
<refsect2 id="TP-IFACE-CONNECTION-INTERFACE-RENAMING:CAPS" role="macro">
<title>TP_IFACE_CONNECTION_INTERFACE_RENAMING</title>
<indexterm zone="TP-IFACE-CONNECTION-INTERFACE-RENAMING:CAPS"><primary>TP_IFACE_CONNECTION_INTERFACE_RENAMING</primary></indexterm><programlisting>#define             TP_IFACE_CONNECTION_INTERFACE_RENAMING</programlisting>
<para>
The interface name "org.freedesktop.Telepathy.Connection.Interface.Renaming"</para>
<para>

</para></refsect2>
<refsect2 id="TP-IFACE-CHANNEL-TYPE-CONTACT-SEARCH:CAPS" role="macro">
<title>TP_IFACE_CHANNEL_TYPE_CONTACT_SEARCH</title>
<indexterm zone="TP-IFACE-CHANNEL-TYPE-CONTACT-SEARCH:CAPS"><primary>TP_IFACE_CHANNEL_TYPE_CONTACT_SEARCH</primary></indexterm><programlisting>#define             TP_IFACE_CHANNEL_TYPE_CONTACT_SEARCH</programlisting>
<para>
The interface name "org.freedesktop.Telepathy.Channel.Type.ContactSearch"</para>
<para>

</para></refsect2>
<refsect2 id="TP-IFACE-CHANNEL-INTERFACE-HOLD:CAPS" role="macro">
<title>TP_IFACE_CHANNEL_INTERFACE_HOLD</title>
<indexterm zone="TP-IFACE-CHANNEL-INTERFACE-HOLD:CAPS"><primary>TP_IFACE_CHANNEL_INTERFACE_HOLD</primary></indexterm><programlisting>#define             TP_IFACE_CHANNEL_INTERFACE_HOLD</programlisting>
<para>
The interface name "org.freedesktop.Telepathy.Channel.Interface.Hold"</para>
<para>

</para></refsect2>
<refsect2 id="TP-IFACE-CHANNEL-INTERFACE-TRANSFER:CAPS" role="macro">
<title>TP_IFACE_CHANNEL_INTERFACE_TRANSFER</title>
<indexterm zone="TP-IFACE-CHANNEL-INTERFACE-TRANSFER:CAPS"><primary>TP_IFACE_CHANNEL_INTERFACE_TRANSFER</primary></indexterm><programlisting>#define             TP_IFACE_CHANNEL_INTERFACE_TRANSFER</programlisting>
<para>
The interface name "org.freedesktop.Telepathy.Channel.Interface.Transfer"</para>
<para>

</para></refsect2>
<refsect2 id="TpChannelContactSearchState" role="enum">
<title>enum TpChannelContactSearchState</title>
<indexterm zone="TpChannelContactSearchState"><primary>TpChannelContactSearchState</primary></indexterm><programlisting>typedef enum {
    TP_CHANNEL_CONTACT_SEARCH_STATE_BEFORE = 0,
    TP_CHANNEL_CONTACT_SEARCH_STATE_DURING = 1,
    TP_CHANNEL_CONTACT_SEARCH_STATE_AFTER = 2,
} TpChannelContactSearchState;
</programlisting>
<para>
Enumeration generated from the Telepathy specification.</para>
<para>

</para><variablelist role="enum">
<varlistentry id="TP-CHANNEL-CONTACT-SEARCH-STATE-BEFORE:CAPS" role="constant">
<term><literal>TP_CHANNEL_CONTACT_SEARCH_STATE_BEFORE</literal></term>
<listitem><simpara> <![CDATA[The search has not started]]>
</simpara></listitem>
</varlistentry>
<varlistentry id="TP-CHANNEL-CONTACT-SEARCH-STATE-DURING:CAPS" role="constant">
<term><literal>TP_CHANNEL_CONTACT_SEARCH_STATE_DURING</literal></term>
<listitem><simpara> <![CDATA[The search is in progress]]>
</simpara></listitem>
</varlistentry>
<varlistentry id="TP-CHANNEL-CONTACT-SEARCH-STATE-AFTER:CAPS" role="constant">
<term><literal>TP_CHANNEL_CONTACT_SEARCH_STATE_AFTER</literal></term>
<listitem><simpara> <![CDATA[The search has been completed]]>
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2 id="NUM-TP-CHANNEL-CONTACT-SEARCH-STATES:CAPS" role="macro">
<title>NUM_TP_CHANNEL_CONTACT_SEARCH_STATES</title>
<indexterm zone="NUM-TP-CHANNEL-CONTACT-SEARCH-STATES:CAPS"><primary>NUM_TP_CHANNEL_CONTACT_SEARCH_STATES</primary></indexterm><programlisting>#define             NUM_TP_CHANNEL_CONTACT_SEARCH_STATES</programlisting>
<para>
1 higher than the highest valid value of <link linkend="TpChannelContactSearchState"><type>TpChannelContactSearchState</type></link>.</para>
<para>

</para></refsect2>
<refsect2 id="TpChannelHoldState" role="enum">
<title>enum TpChannelHoldState</title>
<indexterm zone="TpChannelHoldState"><primary>TpChannelHoldState</primary></indexterm><programlisting>typedef enum {
    TP_CHANNEL_HOLD_STATE_NONE = 0,
    TP_CHANNEL_HOLD_STATE_SEND_ONLY = 1,
    TP_CHANNEL_HOLD_STATE_RECV_ONLY = 2,
    TP_CHANNEL_HOLD_STATE_BOTH = 3,
} TpChannelHoldState;
</programlisting>
<para>
Enumeration generated from the Telepathy specification.</para>
<para>

</para><variablelist role="enum">
<varlistentry id="TP-CHANNEL-HOLD-STATE-NONE:CAPS" role="constant">
<term><literal>TP_CHANNEL_HOLD_STATE_NONE</literal></term>
<listitem><simpara> <![CDATA[             Neither the local user and the remote member are on hold, and media             is being sent bidirectionally.       ]]>
</simpara></listitem>
</varlistentry>
<varlistentry id="TP-CHANNEL-HOLD-STATE-SEND-ONLY:CAPS" role="constant">
<term><literal>TP_CHANNEL_HOLD_STATE_SEND_ONLY</literal></term>
<listitem><simpara> <![CDATA[             The local user has put the remote member on hold, so is sending             media but has arranged not to receive any media streams.       ]]>
</simpara></listitem>
</varlistentry>
<varlistentry id="TP-CHANNEL-HOLD-STATE-RECV-ONLY:CAPS" role="constant">
<term><literal>TP_CHANNEL_HOLD_STATE_RECV_ONLY</literal></term>
<listitem><simpara> <![CDATA[             The user has been put on hold by the remote member, so is receiving             media but has arranged not to send any media streams.       ]]>
</simpara></listitem>
</varlistentry>
<varlistentry id="TP-CHANNEL-HOLD-STATE-BOTH:CAPS" role="constant">
<term><literal>TP_CHANNEL_HOLD_STATE_BOTH</literal></term>
<listitem><simpara> <![CDATA[             Both the local user and the remote member have agreed not to send             any media streams to each other.       ]]>
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2 id="NUM-TP-CHANNEL-HOLD-STATES:CAPS" role="macro">
<title>NUM_TP_CHANNEL_HOLD_STATES</title>
<indexterm zone="NUM-TP-CHANNEL-HOLD-STATES:CAPS"><primary>NUM_TP_CHANNEL_HOLD_STATES</primary></indexterm><programlisting>#define             NUM_TP_CHANNEL_HOLD_STATES</programlisting>
<para>
1 higher than the highest valid value of <link linkend="TpChannelHoldState"><type>TpChannelHoldState</type></link>.</para>
<para>

</para></refsect2>
<refsect2 id="TpSvcChannelTypeContactSearch" role="struct">
<title>TpSvcChannelTypeContactSearch</title>
<indexterm zone="TpSvcChannelTypeContactSearch"><primary>TpSvcChannelTypeContactSearch</primary></indexterm><programlisting>typedef struct _TpSvcChannelTypeContactSearch TpSvcChannelTypeContactSearch;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>

</para></refsect2>
<refsect2 id="TpSvcChannelTypeContactSearchClass" role="struct">
<title>TpSvcChannelTypeContactSearchClass</title>
<indexterm zone="TpSvcChannelTypeContactSearchClass"><primary>TpSvcChannelTypeContactSearchClass</primary></indexterm><programlisting>typedef struct _TpSvcChannelTypeContactSearchClass TpSvcChannelTypeContactSearchClass;</programlisting>
<para>
The class of TpSvcChannelTypeContactSearch.</para>
<para>

</para></refsect2>
<refsect2 id="tp-svc-channel-type-contact-search-get-search-keys-impl" role="function">
<title>tp_svc_channel_type_contact_search_get_search_keys_impl ()</title>
<indexterm zone="tp-svc-channel-type-contact-search-get-search-keys-impl"><primary>tp_svc_channel_type_contact_search_get_search_keys_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_type_contact_search_get_search_keys_impl)
                                                        (<link linkend="TpSvcChannelTypeContactSearch">TpSvcChannelTypeContactSearch</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method GetSearchKeys
on interface org.freedesktop.Telepathy.Channel.Type.ContactSearch</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-contact-search-implement-get-search-keys" role="function">
<title>tp_svc_channel_type_contact_search_implement_get_search_keys ()</title>
<indexterm zone="tp-svc-channel-type-contact-search-implement-get-search-keys"><primary>tp_svc_channel_type_contact_search_implement_get_search_keys</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_contact_search_implement_get_search_keys
                                                        (<link linkend="TpSvcChannelTypeContactSearchClass">TpSvcChannelTypeContactSearchClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-contact-search-get-search-keys-impl">tp_svc_channel_type_contact_search_get_search_keys_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetSearchKeys method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetSearchKeys method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-contact-search-return-from-get-search-keys" role="function">
<title>tp_svc_channel_type_contact_search_return_from_get_search_keys ()</title>
<indexterm zone="tp-svc-channel-type-contact-search-return-from-get-search-keys"><primary>tp_svc_channel_type_contact_search_return_from_get_search_keys</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_contact_search_return_from_get_search_keys
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="gchar">gchar</link> *ret,
                                                         <link linkend="GHashTable">GHashTable</link> *ret1);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret1</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-contact-search-get-search-state-impl" role="function">
<title>tp_svc_channel_type_contact_search_get_search_state_impl ()</title>
<indexterm zone="tp-svc-channel-type-contact-search-get-search-state-impl"><primary>tp_svc_channel_type_contact_search_get_search_state_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_type_contact_search_get_search_state_impl)
                                                        (<link linkend="TpSvcChannelTypeContactSearch">TpSvcChannelTypeContactSearch</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method GetSearchState
on interface org.freedesktop.Telepathy.Channel.Type.ContactSearch</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-contact-search-implement-get-search-state" role="function">
<title>tp_svc_channel_type_contact_search_implement_get_search_state ()</title>
<indexterm zone="tp-svc-channel-type-contact-search-implement-get-search-state"><primary>tp_svc_channel_type_contact_search_implement_get_search_state</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_contact_search_implement_get_search_state
                                                        (<link linkend="TpSvcChannelTypeContactSearchClass">TpSvcChannelTypeContactSearchClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-contact-search-get-search-state-impl">tp_svc_channel_type_contact_search_get_search_state_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetSearchState method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetSearchState method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-contact-search-return-from-get-search-state" role="function">
<title>tp_svc_channel_type_contact_search_return_from_get_search_state ()</title>
<indexterm zone="tp-svc-channel-type-contact-search-return-from-get-search-state"><primary>tp_svc_channel_type_contact_search_return_from_get_search_state</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_contact_search_return_from_get_search_state
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         <link linkend="guint">guint</link> ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-contact-search-search-impl" role="function">
<title>tp_svc_channel_type_contact_search_search_impl ()</title>
<indexterm zone="tp-svc-channel-type-contact-search-search-impl"><primary>tp_svc_channel_type_contact_search_search_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_type_contact_search_search_impl)
                                                        (<link linkend="TpSvcChannelTypeContactSearch">TpSvcChannelTypeContactSearch</link> *self,
                                                         <link linkend="GHashTable">GHashTable</link> *terms,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method Search
on interface org.freedesktop.Telepathy.Channel.Type.ContactSearch</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>terms</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-contact-search-implement-search" role="function">
<title>tp_svc_channel_type_contact_search_implement_search ()</title>
<indexterm zone="tp-svc-channel-type-contact-search-implement-search"><primary>tp_svc_channel_type_contact_search_implement_search</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_contact_search_implement_search
                                                        (<link linkend="TpSvcChannelTypeContactSearchClass">TpSvcChannelTypeContactSearchClass</link> *klass,
                                                         <link linkend="tp-svc-channel-type-contact-search-search-impl">tp_svc_channel_type_contact_search_search_impl</link> impl);</programlisting>
<para>
Register an implementation for the Search method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the Search method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-contact-search-return-from-search" role="function">
<title>tp_svc_channel_type_contact_search_return_from_search ()</title>
<indexterm zone="tp-svc-channel-type-contact-search-return-from-search"><primary>tp_svc_channel_type_contact_search_return_from_search</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_contact_search_return_from_search
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-contact-search-emit-search-result-received" role="function">
<title>tp_svc_channel_type_contact_search_emit_search_result_received ()</title>
<indexterm zone="tp-svc-channel-type-contact-search-emit-search-result-received"><primary>tp_svc_channel_type_contact_search_emit_search_result_received</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_contact_search_emit_search_result_received
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> contact,
                                                         const <link linkend="GHashTable">GHashTable</link> *values);</programlisting>
<para>
Emit the SearchResultReceived D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>contact</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>values</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-type-contact-search-emit-search-state-changed" role="function">
<title>tp_svc_channel_type_contact_search_emit_search_state_changed ()</title>
<indexterm zone="tp-svc-channel-type-contact-search-emit-search-state-changed"><primary>tp_svc_channel_type_contact_search_emit_search_state_changed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_type_contact_search_emit_search_state_changed
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> state);</programlisting>
<para>
Emit the SearchStateChanged D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="TpSvcChannelInterfaceTransfer" role="struct">
<title>TpSvcChannelInterfaceTransfer</title>
<indexterm zone="TpSvcChannelInterfaceTransfer"><primary>TpSvcChannelInterfaceTransfer</primary></indexterm><programlisting>typedef struct _TpSvcChannelInterfaceTransfer TpSvcChannelInterfaceTransfer;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>

</para></refsect2>
<refsect2 id="TpSvcChannelInterfaceTransferClass" role="struct">
<title>TpSvcChannelInterfaceTransferClass</title>
<indexterm zone="TpSvcChannelInterfaceTransferClass"><primary>TpSvcChannelInterfaceTransferClass</primary></indexterm><programlisting>typedef struct _TpSvcChannelInterfaceTransferClass TpSvcChannelInterfaceTransferClass;</programlisting>
<para>
The class of TpSvcChannelInterfaceTransfer.</para>
<para>

</para></refsect2>
<refsect2 id="tp-svc-channel-interface-transfer-transfer-impl" role="function">
<title>tp_svc_channel_interface_transfer_transfer_impl ()</title>
<indexterm zone="tp-svc-channel-interface-transfer-transfer-impl"><primary>tp_svc_channel_interface_transfer_transfer_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_interface_transfer_transfer_impl)
                                                        (<link linkend="TpSvcChannelInterfaceTransfer">TpSvcChannelInterfaceTransfer</link> *self,
                                                         <link linkend="guint">guint</link> member,
                                                         <link linkend="guint">guint</link> destination,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method Transfer
on interface org.freedesktop.Telepathy.Channel.Interface.Transfer</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>member</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>destination</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-transfer-implement-transfer" role="function">
<title>tp_svc_channel_interface_transfer_implement_transfer ()</title>
<indexterm zone="tp-svc-channel-interface-transfer-implement-transfer"><primary>tp_svc_channel_interface_transfer_implement_transfer</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_transfer_implement_transfer
                                                        (<link linkend="TpSvcChannelInterfaceTransferClass">TpSvcChannelInterfaceTransferClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-transfer-transfer-impl">tp_svc_channel_interface_transfer_transfer_impl</link> impl);</programlisting>
<para>
Register an implementation for the Transfer method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the Transfer method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-transfer-return-from-transfer" role="function">
<title>tp_svc_channel_interface_transfer_return_from_transfer ()</title>
<indexterm zone="tp-svc-channel-interface-transfer-return-from-transfer"><primary>tp_svc_channel_interface_transfer_return_from_transfer</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_transfer_return_from_transfer
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="TpSvcChannelInterfaceHold" role="struct">
<title>TpSvcChannelInterfaceHold</title>
<indexterm zone="TpSvcChannelInterfaceHold"><primary>TpSvcChannelInterfaceHold</primary></indexterm><programlisting>typedef struct _TpSvcChannelInterfaceHold TpSvcChannelInterfaceHold;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>

</para></refsect2>
<refsect2 id="TpSvcChannelInterfaceHoldClass" role="struct">
<title>TpSvcChannelInterfaceHoldClass</title>
<indexterm zone="TpSvcChannelInterfaceHoldClass"><primary>TpSvcChannelInterfaceHoldClass</primary></indexterm><programlisting>typedef struct _TpSvcChannelInterfaceHoldClass TpSvcChannelInterfaceHoldClass;</programlisting>
<para>
The class of TpSvcChannelInterfaceHold.</para>
<para>

</para></refsect2>
<refsect2 id="tp-svc-channel-interface-hold-get-hold-state-impl" role="function">
<title>tp_svc_channel_interface_hold_get_hold_state_impl ()</title>
<indexterm zone="tp-svc-channel-interface-hold-get-hold-state-impl"><primary>tp_svc_channel_interface_hold_get_hold_state_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_interface_hold_get_hold_state_impl)
                                                        (<link linkend="TpSvcChannelInterfaceHold">TpSvcChannelInterfaceHold</link> *self,
                                                         <link linkend="guint">guint</link> member,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method GetHoldState
on interface org.freedesktop.Telepathy.Channel.Interface.Hold</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>member</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-hold-implement-get-hold-state" role="function">
<title>tp_svc_channel_interface_hold_implement_get_hold_state ()</title>
<indexterm zone="tp-svc-channel-interface-hold-implement-get-hold-state"><primary>tp_svc_channel_interface_hold_implement_get_hold_state</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_hold_implement_get_hold_state
                                                        (<link linkend="TpSvcChannelInterfaceHoldClass">TpSvcChannelInterfaceHoldClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-hold-get-hold-state-impl">tp_svc_channel_interface_hold_get_hold_state_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetHoldState method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetHoldState method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-hold-return-from-get-hold-state" role="function">
<title>tp_svc_channel_interface_hold_return_from_get_hold_state ()</title>
<indexterm zone="tp-svc-channel-interface-hold-return-from-get-hold-state"><primary>tp_svc_channel_interface_hold_return_from_get_hold_state</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_hold_return_from_get_hold_state
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         <link linkend="guint">guint</link> ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-hold-request-hold-impl" role="function">
<title>tp_svc_channel_interface_hold_request_hold_impl ()</title>
<indexterm zone="tp-svc-channel-interface-hold-request-hold-impl"><primary>tp_svc_channel_interface_hold_request_hold_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_channel_interface_hold_request_hold_impl)
                                                        (<link linkend="TpSvcChannelInterfaceHold">TpSvcChannelInterfaceHold</link> *self,
                                                         <link linkend="guint">guint</link> member,
                                                         <link linkend="gboolean">gboolean</link> hold,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method RequestHold
on interface org.freedesktop.Telepathy.Channel.Interface.Hold</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>member</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>hold</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-hold-implement-request-hold" role="function">
<title>tp_svc_channel_interface_hold_implement_request_hold ()</title>
<indexterm zone="tp-svc-channel-interface-hold-implement-request-hold"><primary>tp_svc_channel_interface_hold_implement_request_hold</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_hold_implement_request_hold
                                                        (<link linkend="TpSvcChannelInterfaceHoldClass">TpSvcChannelInterfaceHoldClass</link> *klass,
                                                         <link linkend="tp-svc-channel-interface-hold-request-hold-impl">tp_svc_channel_interface_hold_request_hold_impl</link> impl);</programlisting>
<para>
Register an implementation for the RequestHold method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the RequestHold method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-hold-return-from-request-hold" role="function">
<title>tp_svc_channel_interface_hold_return_from_request_hold ()</title>
<indexterm zone="tp-svc-channel-interface-hold-return-from-request-hold"><primary>tp_svc_channel_interface_hold_return_from_request_hold</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_hold_return_from_request_hold
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-channel-interface-hold-emit-hold-state-changed" role="function">
<title>tp_svc_channel_interface_hold_emit_hold_state_changed ()</title>
<indexterm zone="tp-svc-channel-interface-hold-emit-hold-state-changed"><primary>tp_svc_channel_interface_hold_emit_hold_state_changed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_channel_interface_hold_emit_hold_state_changed
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> member,
                                                         const <link linkend="guint">guint</link> state);</programlisting>
<para>
Emit the HoldStateChanged D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>member</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="TpSvcConnectionInterfaceRenaming" role="struct">
<title>TpSvcConnectionInterfaceRenaming</title>
<indexterm zone="TpSvcConnectionInterfaceRenaming"><primary>TpSvcConnectionInterfaceRenaming</primary></indexterm><programlisting>typedef struct _TpSvcConnectionInterfaceRenaming TpSvcConnectionInterfaceRenaming;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>

</para></refsect2>
<refsect2 id="TpSvcConnectionInterfaceRenamingClass" role="struct">
<title>TpSvcConnectionInterfaceRenamingClass</title>
<indexterm zone="TpSvcConnectionInterfaceRenamingClass"><primary>TpSvcConnectionInterfaceRenamingClass</primary></indexterm><programlisting>typedef struct _TpSvcConnectionInterfaceRenamingClass TpSvcConnectionInterfaceRenamingClass;</programlisting>
<para>
The class of TpSvcConnectionInterfaceRenaming.</para>
<para>

</para></refsect2>
<refsect2 id="tp-svc-connection-interface-renaming-request-rename-impl" role="function">
<title>tp_svc_connection_interface_renaming_request_rename_impl ()</title>
<indexterm zone="tp-svc-connection-interface-renaming-request-rename-impl"><primary>tp_svc_connection_interface_renaming_request_rename_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_interface_renaming_request_rename_impl)
                                                        (<link linkend="TpSvcConnectionInterfaceRenaming">TpSvcConnectionInterfaceRenaming</link> *self,
                                                         const <link linkend="gchar">gchar</link> *name,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method RequestRename
on interface org.freedesktop.Telepathy.Connection.Interface.Renaming</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-renaming-implement-request-rename" role="function">
<title>tp_svc_connection_interface_renaming_implement_request_rename ()</title>
<indexterm zone="tp-svc-connection-interface-renaming-implement-request-rename"><primary>tp_svc_connection_interface_renaming_implement_request_rename</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_renaming_implement_request_rename
                                                        (<link linkend="TpSvcConnectionInterfaceRenamingClass">TpSvcConnectionInterfaceRenamingClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-renaming-request-rename-impl">tp_svc_connection_interface_renaming_request_rename_impl</link> impl);</programlisting>
<para>
Register an implementation for the RequestRename method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the RequestRename method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-renaming-return-from-request-rename" role="function">
<title>tp_svc_connection_interface_renaming_return_from_request_rename ()</title>
<indexterm zone="tp-svc-connection-interface-renaming-return-from-request-rename"><primary>tp_svc_connection_interface_renaming_return_from_request_rename</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_renaming_return_from_request_rename
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-renaming-emit-renamed" role="function">
<title>tp_svc_connection_interface_renaming_emit_renamed ()</title>
<indexterm zone="tp-svc-connection-interface-renaming-emit-renamed"><primary>tp_svc_connection_interface_renaming_emit_renamed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_renaming_emit_renamed
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> original,
                                                         const <link linkend="guint">guint</link> new);</programlisting>
<para>
Emit the Renamed D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>original</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>new</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="TpSvcConnectionInterfacePrivacy" role="struct">
<title>TpSvcConnectionInterfacePrivacy</title>
<indexterm zone="TpSvcConnectionInterfacePrivacy"><primary>TpSvcConnectionInterfacePrivacy</primary></indexterm><programlisting>typedef struct _TpSvcConnectionInterfacePrivacy TpSvcConnectionInterfacePrivacy;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>

</para></refsect2>
<refsect2 id="TpSvcConnectionInterfacePrivacyClass" role="struct">
<title>TpSvcConnectionInterfacePrivacyClass</title>
<indexterm zone="TpSvcConnectionInterfacePrivacyClass"><primary>TpSvcConnectionInterfacePrivacyClass</primary></indexterm><programlisting>typedef struct _TpSvcConnectionInterfacePrivacyClass TpSvcConnectionInterfacePrivacyClass;</programlisting>
<para>
The class of TpSvcConnectionInterfacePrivacy.</para>
<para>

</para></refsect2>
<refsect2 id="tp-svc-connection-interface-privacy-get-privacy-mode-impl" role="function">
<title>tp_svc_connection_interface_privacy_get_privacy_mode_impl ()</title>
<indexterm zone="tp-svc-connection-interface-privacy-get-privacy-mode-impl"><primary>tp_svc_connection_interface_privacy_get_privacy_mode_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_interface_privacy_get_privacy_mode_impl)
                                                        (<link linkend="TpSvcConnectionInterfacePrivacy">TpSvcConnectionInterfacePrivacy</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method GetPrivacyMode
on interface org.freedesktop.Telepathy.Connection.Interface.Privacy</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-privacy-implement-get-privacy-mode" role="function">
<title>tp_svc_connection_interface_privacy_implement_get_privacy_mode ()</title>
<indexterm zone="tp-svc-connection-interface-privacy-implement-get-privacy-mode"><primary>tp_svc_connection_interface_privacy_implement_get_privacy_mode</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_privacy_implement_get_privacy_mode
                                                        (<link linkend="TpSvcConnectionInterfacePrivacyClass">TpSvcConnectionInterfacePrivacyClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-privacy-get-privacy-mode-impl">tp_svc_connection_interface_privacy_get_privacy_mode_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetPrivacyMode method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetPrivacyMode method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-privacy-return-from-get-privacy-mode" role="function">
<title>tp_svc_connection_interface_privacy_return_from_get_privacy_mode ()</title>
<indexterm zone="tp-svc-connection-interface-privacy-return-from-get-privacy-mode"><primary>tp_svc_connection_interface_privacy_return_from_get_privacy_mode</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_privacy_return_from_get_privacy_mode
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="gchar">gchar</link> *ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-privacy-get-privacy-modes-impl" role="function">
<title>tp_svc_connection_interface_privacy_get_privacy_modes_impl ()</title>
<indexterm zone="tp-svc-connection-interface-privacy-get-privacy-modes-impl"><primary>tp_svc_connection_interface_privacy_get_privacy_modes_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_interface_privacy_get_privacy_modes_impl)
                                                        (<link linkend="TpSvcConnectionInterfacePrivacy">TpSvcConnectionInterfacePrivacy</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method GetPrivacyModes
on interface org.freedesktop.Telepathy.Connection.Interface.Privacy</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-privacy-implement-get-privacy-modes" role="function">
<title>tp_svc_connection_interface_privacy_implement_get_privacy_modes ()</title>
<indexterm zone="tp-svc-connection-interface-privacy-implement-get-privacy-modes"><primary>tp_svc_connection_interface_privacy_implement_get_privacy_modes</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_privacy_implement_get_privacy_modes
                                                        (<link linkend="TpSvcConnectionInterfacePrivacyClass">TpSvcConnectionInterfacePrivacyClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-privacy-get-privacy-modes-impl">tp_svc_connection_interface_privacy_get_privacy_modes_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetPrivacyModes method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetPrivacyModes method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-privacy-return-from-get-privacy-modes" role="function">
<title>tp_svc_connection_interface_privacy_return_from_get_privacy_modes ()</title>
<indexterm zone="tp-svc-connection-interface-privacy-return-from-get-privacy-modes"><primary>tp_svc_connection_interface_privacy_return_from_get_privacy_modes</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_privacy_return_from_get_privacy_modes
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         const <link linkend="gchar">gchar</link> **ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-privacy-set-privacy-mode-impl" role="function">
<title>tp_svc_connection_interface_privacy_set_privacy_mode_impl ()</title>
<indexterm zone="tp-svc-connection-interface-privacy-set-privacy-mode-impl"><primary>tp_svc_connection_interface_privacy_set_privacy_mode_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_interface_privacy_set_privacy_mode_impl)
                                                        (<link linkend="TpSvcConnectionInterfacePrivacy">TpSvcConnectionInterfacePrivacy</link> *self,
                                                         const <link linkend="gchar">gchar</link> *mode,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method SetPrivacyMode
on interface org.freedesktop.Telepathy.Connection.Interface.Privacy</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>mode</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-privacy-implement-set-privacy-mode" role="function">
<title>tp_svc_connection_interface_privacy_implement_set_privacy_mode ()</title>
<indexterm zone="tp-svc-connection-interface-privacy-implement-set-privacy-mode"><primary>tp_svc_connection_interface_privacy_implement_set_privacy_mode</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_privacy_implement_set_privacy_mode
                                                        (<link linkend="TpSvcConnectionInterfacePrivacyClass">TpSvcConnectionInterfacePrivacyClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-privacy-set-privacy-mode-impl">tp_svc_connection_interface_privacy_set_privacy_mode_impl</link> impl);</programlisting>
<para>
Register an implementation for the SetPrivacyMode method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the SetPrivacyMode method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-privacy-return-from-set-privacy-mode" role="function">
<title>tp_svc_connection_interface_privacy_return_from_set_privacy_mode ()</title>
<indexterm zone="tp-svc-connection-interface-privacy-return-from-set-privacy-mode"><primary>tp_svc_connection_interface_privacy_return_from_set_privacy_mode</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_privacy_return_from_set_privacy_mode
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-privacy-emit-privacy-mode-changed" role="function">
<title>tp_svc_connection_interface_privacy_emit_privacy_mode_changed ()</title>
<indexterm zone="tp-svc-connection-interface-privacy-emit-privacy-mode-changed"><primary>tp_svc_connection_interface_privacy_emit_privacy_mode_changed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_privacy_emit_privacy_mode_changed
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="gchar">gchar</link> *mode);</programlisting>
<para>
Emit the PrivacyModeChanged D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>mode</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="TpSvcConnectionInterfaceContactInfo" role="struct">
<title>TpSvcConnectionInterfaceContactInfo</title>
<indexterm zone="TpSvcConnectionInterfaceContactInfo"><primary>TpSvcConnectionInterfaceContactInfo</primary></indexterm><programlisting>typedef struct _TpSvcConnectionInterfaceContactInfo TpSvcConnectionInterfaceContactInfo;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>

</para></refsect2>
<refsect2 id="TpSvcConnectionInterfaceContactInfoClass" role="struct">
<title>TpSvcConnectionInterfaceContactInfoClass</title>
<indexterm zone="TpSvcConnectionInterfaceContactInfoClass"><primary>TpSvcConnectionInterfaceContactInfoClass</primary></indexterm><programlisting>typedef struct _TpSvcConnectionInterfaceContactInfoClass TpSvcConnectionInterfaceContactInfoClass;</programlisting>
<para>
The class of TpSvcConnectionInterfaceContactInfo.</para>
<para>

</para></refsect2>
<refsect2 id="tp-svc-connection-interface-contact-info-request-contact-info-impl" role="function">
<title>tp_svc_connection_interface_contact_info_request_contact_info_impl ()</title>
<indexterm zone="tp-svc-connection-interface-contact-info-request-contact-info-impl"><primary>tp_svc_connection_interface_contact_info_request_contact_info_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_interface_contact_info_request_contact_info_impl)
                                                        (<link linkend="TpSvcConnectionInterfaceContactInfo">TpSvcConnectionInterfaceContactInfo</link> *self,
                                                         <link linkend="guint">guint</link> contact,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method RequestContactInfo
on interface org.freedesktop.Telepathy.Connection.Interface.ContactInfo</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>contact</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-contact-info-implement-request-contact-info" role="function">
<title>tp_svc_connection_interface_contact_info_implement_request_contact_info ()</title>
<indexterm zone="tp-svc-connection-interface-contact-info-implement-request-contact-info"><primary>tp_svc_connection_interface_contact_info_implement_request_contact_info</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_contact_info_implement_request_contact_info
                                                        (<link linkend="TpSvcConnectionInterfaceContactInfoClass">TpSvcConnectionInterfaceContactInfoClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-contact-info-request-contact-info-impl">tp_svc_connection_interface_contact_info_request_contact_info_impl</link> impl);</programlisting>
<para>
Register an implementation for the RequestContactInfo method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the RequestContactInfo method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-contact-info-return-from-request-contact-info" role="function">
<title>tp_svc_connection_interface_contact_info_return_from_request_contact_info ()</title>
<indexterm zone="tp-svc-connection-interface-contact-info-return-from-request-contact-info"><primary>tp_svc_connection_interface_contact_info_return_from_request_contact_info</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_contact_info_return_from_request_contact_info
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-contact-info-emit-got-contact-info" role="function">
<title>tp_svc_connection_interface_contact_info_emit_got_contact_info ()</title>
<indexterm zone="tp-svc-connection-interface-contact-info-emit-got-contact-info"><primary>tp_svc_connection_interface_contact_info_emit_got_contact_info</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_contact_info_emit_got_contact_info
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> contact,
                                                         const <link linkend="gchar">gchar</link> *vcard);</programlisting>
<para>
Emit the GotContactInfo D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>contact</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>vcard</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="TpSvcConnectionInterfaceForwarding" role="struct">
<title>TpSvcConnectionInterfaceForwarding</title>
<indexterm zone="TpSvcConnectionInterfaceForwarding"><primary>TpSvcConnectionInterfaceForwarding</primary></indexterm><programlisting>typedef struct _TpSvcConnectionInterfaceForwarding TpSvcConnectionInterfaceForwarding;</programlisting>
<para>
Dummy typedef representing any implementation of this interface.</para>
<para>

</para></refsect2>
<refsect2 id="TpSvcConnectionInterfaceForwardingClass" role="struct">
<title>TpSvcConnectionInterfaceForwardingClass</title>
<indexterm zone="TpSvcConnectionInterfaceForwardingClass"><primary>TpSvcConnectionInterfaceForwardingClass</primary></indexterm><programlisting>typedef struct _TpSvcConnectionInterfaceForwardingClass TpSvcConnectionInterfaceForwardingClass;</programlisting>
<para>
The class of TpSvcConnectionInterfaceForwarding.</para>
<para>

</para></refsect2>
<refsect2 id="tp-svc-connection-interface-forwarding-get-forwarding-handle-impl" role="function">
<title>tp_svc_connection_interface_forwarding_get_forwarding_handle_impl ()</title>
<indexterm zone="tp-svc-connection-interface-forwarding-get-forwarding-handle-impl"><primary>tp_svc_connection_interface_forwarding_get_forwarding_handle_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_interface_forwarding_get_forwarding_handle_impl)
                                                        (<link linkend="TpSvcConnectionInterfaceForwarding">TpSvcConnectionInterfaceForwarding</link> *self,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method GetForwardingHandle
on interface org.freedesktop.Telepathy.Connection.Interface.Forwarding</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-forwarding-implement-get-forwarding-handle" role="function">
<title>tp_svc_connection_interface_forwarding_implement_get_forwarding_handle ()</title>
<indexterm zone="tp-svc-connection-interface-forwarding-implement-get-forwarding-handle"><primary>tp_svc_connection_interface_forwarding_implement_get_forwarding_handle</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_forwarding_implement_get_forwarding_handle
                                                        (<link linkend="TpSvcConnectionInterfaceForwardingClass">TpSvcConnectionInterfaceForwardingClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-forwarding-get-forwarding-handle-impl">tp_svc_connection_interface_forwarding_get_forwarding_handle_impl</link> impl);</programlisting>
<para>
Register an implementation for the GetForwardingHandle method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the GetForwardingHandle method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-forwarding-return-from-get-forwarding-handle" role="function">
<title>tp_svc_connection_interface_forwarding_return_from_get_forwarding_handle ()</title>
<indexterm zone="tp-svc-connection-interface-forwarding-return-from-get-forwarding-handle"><primary>tp_svc_connection_interface_forwarding_return_from_get_forwarding_handle</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_forwarding_return_from_get_forwarding_handle
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context,
                                                         <link linkend="guint">guint</link> ret);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ret</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-forwarding-set-forwarding-handle-impl" role="function">
<title>tp_svc_connection_interface_forwarding_set_forwarding_handle_impl ()</title>
<indexterm zone="tp-svc-connection-interface-forwarding-set-forwarding-handle-impl"><primary>tp_svc_connection_interface_forwarding_set_forwarding_handle_impl</primary></indexterm><programlisting><link linkend="void">void</link>                (*tp_svc_connection_interface_forwarding_set_forwarding_handle_impl)
                                                        (<link linkend="TpSvcConnectionInterfaceForwarding">TpSvcConnectionInterfaceForwarding</link> *self,
                                                         <link linkend="guint">guint</link> forward_to,
                                                         <link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *context);</programlisting>
<para>
Signature of an implementation of D-Bus method SetForwardingHandle
on interface org.freedesktop.Telepathy.Connection.Interface.Forwarding</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> The object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>forward_to</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus invocation context to use to return values
          or throw an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-forwarding-implement-set-forwarding-handle" role="function">
<title>tp_svc_connection_interface_forwarding_implement_set_forwarding_handle ()</title>
<indexterm zone="tp-svc-connection-interface-forwarding-implement-set-forwarding-handle"><primary>tp_svc_connection_interface_forwarding_implement_set_forwarding_handle</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_forwarding_implement_set_forwarding_handle
                                                        (<link linkend="TpSvcConnectionInterfaceForwardingClass">TpSvcConnectionInterfaceForwardingClass</link> *klass,
                                                         <link linkend="tp-svc-connection-interface-forwarding-set-forwarding-handle-impl">tp_svc_connection_interface_forwarding_set_forwarding_handle_impl</link> impl);</programlisting>
<para>
Register an implementation for the SetForwardingHandle method in the vtable of an
implementation of this interface. To be called from the interface
init function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara> A class whose instances implement this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> A callback used to implement the SetForwardingHandle method
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-forwarding-return-from-set-forwarding-handle" role="function">
<title>tp_svc_connection_interface_forwarding_return_from_set_forwarding_handle ()</title>
<indexterm zone="tp-svc-connection-interface-forwarding-return-from-set-forwarding-handle"><primary>tp_svc_connection_interface_forwarding_return_from_set_forwarding_handle</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_forwarding_return_from_set_forwarding_handle
                                                        (<link linkend="DBusGMethodInvocation">DBusGMethodInvocation</link> *dbus_context);</programlisting>
<para>
Return successfully by calling dbus_g_method_return (<parameter>dbus_context</parameter>,
...). This inline function is just a type-safe wrapper for
dbus_g_method_return.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dbus_context</parameter>&nbsp;:</term>
<listitem><simpara> The D-Bus method invocation context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-svc-connection-interface-forwarding-emit-forwarding-changed" role="function">
<title>tp_svc_connection_interface_forwarding_emit_forwarding_changed ()</title>
<indexterm zone="tp-svc-connection-interface-forwarding-emit-forwarding-changed"><primary>tp_svc_connection_interface_forwarding_emit_forwarding_changed</primary></indexterm><programlisting><link linkend="void">void</link>                tp_svc_connection_interface_forwarding_emit_forwarding_changed
                                                        (<link linkend="gpointer">gpointer</link> instance,
                                                         const <link linkend="guint">guint</link> forward_to);</programlisting>
<para>
Emit the ForwardingChanged D-Bus signal from <parameter>instance</parameter> with the given arguments.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>instance</parameter>&nbsp;:</term>
<listitem><simpara> An object implementing this interface
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>forward_to</parameter>&nbsp;:</term>
<listitem><simpara> FIXME: document args in genginterface
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>

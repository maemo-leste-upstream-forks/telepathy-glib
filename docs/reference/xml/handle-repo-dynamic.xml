<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="TpDynamicHandleRepo">
<refmeta>
<refentrytitle role="top_of_page" id="TpDynamicHandleRepo.top_of_page">TpDynamicHandleRepo</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>TELEPATHY-GLIB Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>TpDynamicHandleRepo</refname>
<refpurpose>general handle repository implementation, with dynamic
 handle allocation and recycling</refpurpose>
</refnamediv>

<refsynopsisdiv id="TpDynamicHandleRepo.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>

#include &lt;telepathy-glib/handle-repo-dynamic.h&gt;

                    <link linkend="TpDynamicHandleRepo-struct">TpDynamicHandleRepo</link>;
                    <link linkend="TpDynamicHandleRepoClass">TpDynamicHandleRepoClass</link>;
<link linkend="TpHandle">TpHandle</link>            <link linkend="tp-dynamic-handle-repo-lookup-exact">tp_dynamic_handle_repo_lookup_exact</link> (<link linkend="TpHandleRepoIface">TpHandleRepoIface</link> *irepo,
                                                         const <link linkend="char">char</link> *id);
<link linkend="TpHandleRepoIface">TpHandleRepoIface</link> * <link linkend="tp-dynamic-handle-repo-new">tp_dynamic_handle_repo_new</link>          (<link linkend="TpHandleType">TpHandleType</link> handle_type,
                                                         <link linkend="TpDynamicHandleRepoNormalizeFunc">TpDynamicHandleRepoNormalizeFunc</link> normalize_func,
                                                         <link linkend="gpointer">gpointer</link> default_normalize_context);
<link linkend="gchar">gchar</link> *             (<link linkend="TpDynamicHandleRepoNormalizeFunc">*TpDynamicHandleRepoNormalizeFunc</link>) (<link linkend="TpHandleRepoIface">TpHandleRepoIface</link> *repo,
                                                         const <link linkend="gchar">gchar</link> *id,
                                                         <link linkend="gpointer">gpointer</link> context,
                                                         <link linkend="GError">GError</link> **error);
</synopsis>
</refsynopsisdiv>

<refsect1 id="TpDynamicHandleRepo.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>
  <link linkend="GObject">GObject</link>
   +----TpDynamicHandleRepo
</synopsis>
</refsect1>



<refsect1 id="TpDynamicHandleRepo.implemented-interfaces" role="impl_interfaces">
<title role="impl_interfaces.title">Implemented Interfaces</title>
<para>
TpDynamicHandleRepo implements
 <link linkend="TpHandleRepoIface">TpHandleRepoIface</link>.</para>
</refsect1>


<refsect1 id="TpDynamicHandleRepo.properties" role="properties">
<title role="properties.title">Properties</title>
<synopsis>
  &quot;<link linkend="TpDynamicHandleRepo--default-normalize-context">default-normalize-context</link>&quot; <link linkend="gpointer">gpointer</link>              : Read / Write / Construct Only
  &quot;<link linkend="TpDynamicHandleRepo--normalize-function">normalize-function</link>&quot;       <link linkend="gpointer">gpointer</link>              : Read / Write / Construct Only
</synopsis>
</refsect1>



<refsect1 id="TpDynamicHandleRepo.description" role="desc">
<title role="desc.title">Description</title>
<para>
A dynamic handle repository will accept arbitrary handles, which can
be created and destroyed at runtime.
</para>
<para>
The <link linkend="TpHandleRepoIface--handle-type"><type>"handle-type"</type></link> property must be set at construction
time; the <link linkend="TpDynamicHandleRepo--normalize-function"><type>"normalize-function"</type></link> property may be set to
perform validation and normalization on handle ID strings.
</para>
<para>
Most connection managers will use this for all supported handle types
except <link linkend="TP-HANDLE-TYPE-CONTACT-LIST--CAPS"><literal>TP_HANDLE_TYPE_CONTACT_LIST</literal></link>.</para>
<para>
</para>
</refsect1>

<refsect1 id="TpDynamicHandleRepo.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="TpDynamicHandleRepo-struct" role="struct">
<title>TpDynamicHandleRepo</title>
<indexterm zone="TpDynamicHandleRepo-struct"><primary sortas="TpDynamicHandleRepo">TpDynamicHandleRepo</primary></indexterm><programlisting>typedef struct _TpDynamicHandleRepo TpDynamicHandleRepo;</programlisting>
<para>
A dynamic handle repository. The contents of the struct are private.</para>
<para>
</para></refsect2>
<refsect2 id="TpDynamicHandleRepoClass" role="struct">
<title>TpDynamicHandleRepoClass</title>
<indexterm zone="TpDynamicHandleRepoClass"><primary sortas="TpDynamicHandleRepoClass">TpDynamicHandleRepoClass</primary></indexterm><programlisting>typedef struct _TpDynamicHandleRepoClass TpDynamicHandleRepoClass;</programlisting>
<para>
The class of a dynamic handle repository. The contents of the struct
are private.</para>
<para>
</para></refsect2>
<refsect2 id="tp-dynamic-handle-repo-lookup-exact" role="function">
<title>tp_dynamic_handle_repo_lookup_exact ()</title>
<indexterm zone="tp-dynamic-handle-repo-lookup-exact"><primary sortas="tp_dynamic_handle_repo_lookup_exact">tp_dynamic_handle_repo_lookup_exact</primary></indexterm><programlisting><link linkend="TpHandle">TpHandle</link>            tp_dynamic_handle_repo_lookup_exact (<link linkend="TpHandleRepoIface">TpHandleRepoIface</link> *irepo,
                                                         const <link linkend="char">char</link> *id);</programlisting>
<para>
Look up a name in the repository, returning the corresponding handle if
it is present in the repository, without creating a new reference.
</para>
<para>
Unlike <link linkend="tp-handle-lookup"><function>tp_handle_lookup()</function></link> this function does not perform any normalization;
it just looks for the literal string you requested. This can be useful to
call from normalization callbacks (for instance, Gabble's contacts
repository uses it to see whether we already know that a JID belongs
to a multi-user chat room member).</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>irepo</parameter>&#160;:</term>
<listitem><simpara> The handle repository
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>id</parameter>&#160;:</term>
<listitem><simpara> The name to be looked up
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the handle corresponding to the given ID, or 0 if not present
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="tp-dynamic-handle-repo-new" role="function">
<title>tp_dynamic_handle_repo_new ()</title>
<indexterm zone="tp-dynamic-handle-repo-new"><primary sortas="tp_dynamic_handle_repo_new">tp_dynamic_handle_repo_new</primary></indexterm><programlisting><link linkend="TpHandleRepoIface">TpHandleRepoIface</link> * tp_dynamic_handle_repo_new          (<link linkend="TpHandleType">TpHandleType</link> handle_type,
                                                         <link linkend="TpDynamicHandleRepoNormalizeFunc">TpDynamicHandleRepoNormalizeFunc</link> normalize_func,
                                                         <link linkend="gpointer">gpointer</link> default_normalize_context);</programlisting>
<para>
<!----></para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>handle_type</parameter>&#160;:</term>
<listitem><simpara> The handle type
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>normalize_func</parameter>&#160;:</term>
<listitem><simpara> The function to be used to normalize and validate handles,
 or <link linkend="NULL--CAPS"><literal>NULL</literal></link> to accept all handles as-is
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>default_normalize_context</parameter>&#160;:</term>
<listitem><simpara> The context pointer to be passed to the
 <parameter>normalize_func</parameter> if a <link linkend="NULL--CAPS"><literal>NULL</literal></link> context is passed to <link linkend="tp-handle-lookup"><function>tp_handle_lookup()</function></link> and
 <link linkend="tp-handle-ensure"><function>tp_handle_ensure()</function></link>; this may itself be <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a new dynamic handle repository
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="TpDynamicHandleRepoNormalizeFunc" role="function">
<title>TpDynamicHandleRepoNormalizeFunc ()</title>
<indexterm zone="TpDynamicHandleRepoNormalizeFunc"><primary sortas="TpDynamicHandleRepoNormalizeFunc">TpDynamicHandleRepoNormalizeFunc</primary></indexterm><programlisting><link linkend="gchar">gchar</link> *             (*TpDynamicHandleRepoNormalizeFunc) (<link linkend="TpHandleRepoIface">TpHandleRepoIface</link> *repo,
                                                         const <link linkend="gchar">gchar</link> *id,
                                                         <link linkend="gpointer">gpointer</link> context,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>
Signature of the normalization function optionally used by
<link linkend="TpDynamicHandleRepo"><type>TpDynamicHandleRepo</type></link> instances.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>repo</parameter>&#160;:</term>
<listitem><simpara> The repository on which <link linkend="tp-handle-lookup"><function>tp_handle_lookup()</function></link> or <link linkend="tp-handle-ensure"><function>tp_handle_ensure()</function></link>
       was called
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>id</parameter>&#160;:</term>
<listitem><simpara> The name to be normalized
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> Arbitrary context passed to <link linkend="tp-handle-lookup"><function>tp_handle_lookup()</function></link> or
          <link linkend="tp-handle-ensure"><function>tp_handle_ensure()</function></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> Used to raise the Telepathy error InvalidHandle with an appropriate
        message if NULL is returned
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a normalized version of <parameter>id</parameter> (to be freed with g_free by the
         caller), or NULL if <parameter>id</parameter> is not valid for this repository
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>
<refsect1 id="TpDynamicHandleRepo.property-details" role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2 id="TpDynamicHandleRepo--default-normalize-context" role="property"><title>The <literal>&quot;default-normalize-context&quot;</literal> property</title>
<indexterm zone="TpDynamicHandleRepo--default-normalize-context"><primary sortas="TpDynamicHandleRepo:default-normalize-context">TpDynamicHandleRepo:default-normalize-context</primary></indexterm><programlisting>  &quot;default-normalize-context&quot; <link linkend="gpointer">gpointer</link>              : Read / Write / Construct Only</programlisting>
<para>
An optional default context given to the
<link linkend="TpDynamicHandleRepo--normalize-function"><type>"normalize-function"</type></link> if <link linkend="NULL--CAPS"><literal>NULL</literal></link> is passed as context to
the ensure or lookup functions, e.g. when RequestHandle is called via
D-Bus. The default is <link linkend="NULL--CAPS"><literal>NULL</literal></link>.</para>
<para>
</para></refsect2>
<refsect2 id="TpDynamicHandleRepo--normalize-function" role="property"><title>The <literal>&quot;normalize-function&quot;</literal> property</title>
<indexterm zone="TpDynamicHandleRepo--normalize-function"><primary sortas="TpDynamicHandleRepo:normalize-function">TpDynamicHandleRepo:normalize-function</primary></indexterm><programlisting>  &quot;normalize-function&quot;       <link linkend="gpointer">gpointer</link>              : Read / Write / Construct Only</programlisting>
<para>
An optional <link linkend="TpDynamicHandleRepoNormalizeFunc"><type>TpDynamicHandleRepoNormalizeFunc</type></link> used to validate and
normalize handle IDs. If <link linkend="NULL--CAPS"><literal>NULL</literal></link> (which is the default), any handle ID is
accepted as-is (equivalent to supplying a pointer to a function that just
calls g_strdup).</para>
<para>
</para></refsect2>
</refsect1>



<refsect1 id="TpDynamicHandleRepo.see-also">
<title>See Also</title>
TpHandleRepoIface, TpStaticHandleRepo
</refsect1>

</refentry>
